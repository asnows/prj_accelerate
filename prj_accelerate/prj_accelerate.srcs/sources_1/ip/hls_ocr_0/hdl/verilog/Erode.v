// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Erode (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i_i_i_reg_832;
reg   [0:0] icmp_reg_794;
reg   [0:0] tmp_s_reg_785;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] or_cond_i_i_reg_866;
reg   [0:0] or_cond_i_i_reg_866_pp0_iter3_reg;
reg   [9:0] t_V_4_reg_241;
wire   [0:0] exitcond389_i_i_fu_252_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] i_V_fu_258_p2;
reg   [8:0] i_V_reg_780;
wire   [0:0] tmp_s_fu_264_p2;
wire   [0:0] tmp_84_not_fu_270_p2;
reg   [0:0] tmp_84_not_reg_789;
wire   [0:0] icmp_fu_286_p2;
wire   [0:0] tmp_4_fu_292_p2;
reg   [0:0] tmp_4_reg_799;
wire   [0:0] tmp_114_2_fu_298_p2;
reg   [0:0] tmp_114_2_reg_803;
wire   [0:0] tmp_5_fu_304_p2;
reg   [0:0] tmp_5_reg_807;
wire   [1:0] row_assign_7_1_t_fu_314_p2;
reg   [1:0] row_assign_7_1_t_reg_813;
wire   [1:0] row_assign_7_2_t_fu_320_p2;
reg   [1:0] row_assign_7_2_t_reg_818;
wire   [0:0] exitcond388_i_i_fu_330_p2;
reg   [0:0] exitcond388_i_i_reg_823;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op92_read_state4;
reg    ap_predicate_op100_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_i_reg_823_pp0_iter1_reg;
reg   [0:0] exitcond388_i_i_reg_823_pp0_iter2_reg;
wire   [9:0] j_V_fu_336_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_fu_390_p2;
wire   [1:0] tmp_15_fu_420_p1;
reg   [1:0] tmp_15_reg_836;
wire   [0:0] brmerge_fu_424_p2;
reg   [0:0] brmerge_reg_841;
reg   [9:0] k_buf_0_val_3_addr_reg_848;
reg   [9:0] k_buf_0_val_4_addr_reg_854;
reg   [9:0] k_buf_0_val_5_addr_reg_860;
wire   [0:0] or_cond_i_i_fu_436_p2;
reg   [0:0] or_cond_i_i_reg_866_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_866_pp0_iter2_reg;
wire   [7:0] col_buf_0_val_0_0_fu_467_p3;
reg   [7:0] col_buf_0_val_0_0_reg_870;
reg   [7:0] col_buf_0_val_0_0_reg_870_pp0_iter2_reg;
reg   [7:0] col_buf_0_val_0_0_reg_870_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_538_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_877;
reg   [7:0] src_kernel_win_0_va_8_reg_877_pp0_iter2_reg;
wire   [7:0] src_kernel_win_0_va_9_fu_556_p3;
reg   [7:0] src_kernel_win_0_va_9_reg_884;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_575_p3;
reg   [7:0] temp_0_i_i_i_059_i_s_reg_890;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_632_p3;
reg   [7:0] temp_0_i_i_i_059_i_3_reg_896;
wire   [7:0] temp_0_i_i_i_059_i_6_fu_688_p3;
reg   [7:0] temp_0_i_i_i_059_i_6_reg_902;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [8:0] t_V_reg_230;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_8_fu_429_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_122;
reg   [7:0] src_kernel_win_0_va_1_fu_126;
reg   [7:0] src_kernel_win_0_va_2_fu_130;
reg   [7:0] src_kernel_win_0_va_3_fu_134;
reg   [7:0] src_kernel_win_0_va_4_fu_138;
reg   [7:0] src_kernel_win_0_va_5_fu_142;
reg   [7:0] src_kernel_win_0_va_6_fu_146;
reg   [7:0] right_border_buf_0_s_fu_150;
wire   [7:0] col_buf_0_val_2_0_fu_505_p3;
reg   [7:0] right_border_buf_0_1_fu_154;
wire   [7:0] col_buf_0_val_1_0_fu_486_p3;
wire   [7:0] tmp_fu_276_p4;
wire   [1:0] tmp_9_fu_310_p1;
wire   [8:0] tmp_11_fu_342_p4;
wire   [10:0] t_V_4_cast_fu_326_p1;
wire   [10:0] ImagLoc_x_fu_358_p2;
wire   [0:0] tmp_12_fu_370_p3;
wire   [0:0] tmp_6_fu_384_p2;
wire   [0:0] rev_fu_378_p2;
wire   [0:0] tmp_14_fu_396_p3;
wire   [9:0] ImagLoc_x_cast_fu_364_p2;
wire   [9:0] p_assign_1_cast_fu_404_p3;
wire   [9:0] x_fu_412_p3;
wire   [0:0] icmp1_fu_352_p2;
wire   [1:0] col_assign_6_t_fu_450_p2;
wire   [7:0] tmp_1_fu_455_p5;
wire   [7:0] tmp_3_fu_474_p5;
wire   [7:0] tmp_13_fu_493_p5;
wire   [7:0] tmp_16_fu_527_p5;
wire   [7:0] tmp_18_fu_545_p5;
wire   [0:0] tmp_160_0_1_fu_569_p2;
wire   [0:0] tmp_160_0_2_fu_602_p2;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_606_p3;
wire   [0:0] tmp_160_1_fu_612_p2;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_618_p3;
wire   [0:0] tmp_160_1_1_fu_626_p2;
wire   [0:0] tmp_160_1_2_fu_658_p2;
wire   [7:0] temp_0_i_i_i_059_i_4_fu_662_p3;
wire   [0:0] tmp_160_2_fu_668_p2;
wire   [7:0] temp_0_i_i_i_059_i_5_fu_674_p3;
wire   [0:0] tmp_160_2_1_fu_682_p2;
wire   [0:0] tmp_160_2_2_fu_708_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_327;
reg    ap_condition_61;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_848),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_854),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_860),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U33(
    .din0(src_kernel_win_0_va_6_fu_146),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_450_p2),
    .dout(tmp_1_fu_455_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U34(
    .din0(right_border_buf_0_1_fu_154),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_450_p2),
    .dout(tmp_3_fu_474_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U35(
    .din0(right_border_buf_0_s_fu_150),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_450_p2),
    .dout(tmp_13_fu_493_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U36(
    .din0(col_buf_0_val_0_0_fu_467_p3),
    .din1(col_buf_0_val_1_0_fu_486_p3),
    .din2(col_buf_0_val_2_0_fu_505_p3),
    .din3(row_assign_7_1_t_reg_813),
    .dout(tmp_16_fu_527_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U37(
    .din0(col_buf_0_val_0_0_fu_467_p3),
    .din1(col_buf_0_val_1_0_fu_486_p3),
    .din2(col_buf_0_val_2_0_fu_505_p3),
    .din3(row_assign_7_2_t_reg_818),
    .dout(tmp_18_fu_545_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_i_fu_252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond389_i_i_fu_252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_241 <= j_V_fu_336_p2;
    end else if (((exitcond389_i_i_fu_252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_4_reg_241 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_230 <= i_V_reg_780;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_230 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_841 <= brmerge_fu_424_p2;
        k_buf_0_val_3_addr_reg_848 <= tmp_8_fu_429_p1;
        k_buf_0_val_4_addr_reg_854 <= tmp_8_fu_429_p1;
        k_buf_0_val_5_addr_reg_860 <= tmp_8_fu_429_p1;
        or_cond_i_i_i_reg_832 <= or_cond_i_i_i_fu_390_p2;
        or_cond_i_i_reg_866 <= or_cond_i_i_fu_436_p2;
        tmp_15_reg_836 <= tmp_15_fu_420_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_870 <= col_buf_0_val_0_0_fu_467_p3;
        exitcond388_i_i_reg_823 <= exitcond388_i_i_fu_330_p2;
        exitcond388_i_i_reg_823_pp0_iter1_reg <= exitcond388_i_i_reg_823;
        or_cond_i_i_reg_866_pp0_iter1_reg <= or_cond_i_i_reg_866;
        src_kernel_win_0_va_8_reg_877 <= src_kernel_win_0_va_8_fu_538_p3;
        src_kernel_win_0_va_9_reg_884 <= src_kernel_win_0_va_9_fu_556_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        col_buf_0_val_0_0_reg_870_pp0_iter2_reg <= col_buf_0_val_0_0_reg_870;
        col_buf_0_val_0_0_reg_870_pp0_iter3_reg <= col_buf_0_val_0_0_reg_870_pp0_iter2_reg;
        exitcond388_i_i_reg_823_pp0_iter2_reg <= exitcond388_i_i_reg_823_pp0_iter1_reg;
        or_cond_i_i_reg_866_pp0_iter2_reg <= or_cond_i_i_reg_866_pp0_iter1_reg;
        or_cond_i_i_reg_866_pp0_iter3_reg <= or_cond_i_i_reg_866_pp0_iter2_reg;
        src_kernel_win_0_va_8_reg_877_pp0_iter2_reg <= src_kernel_win_0_va_8_reg_877;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_780 <= i_V_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_fu_252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_794 <= icmp_fu_286_p2;
        row_assign_7_1_t_reg_813 <= row_assign_7_1_t_fu_314_p2;
        row_assign_7_2_t_reg_818 <= row_assign_7_2_t_fu_320_p2;
        tmp_114_2_reg_803 <= tmp_114_2_fu_298_p2;
        tmp_4_reg_799 <= tmp_4_fu_292_p2;
        tmp_5_reg_807 <= tmp_5_fu_304_p2;
        tmp_84_not_reg_789 <= tmp_84_not_fu_270_p2;
        tmp_s_reg_785 <= tmp_s_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_154 <= col_buf_0_val_1_0_fu_486_p3;
        right_border_buf_0_s_fu_150 <= col_buf_0_val_2_0_fu_505_p3;
        src_kernel_win_0_va_6_fu_146 <= col_buf_0_val_0_0_fu_467_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_823_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_126 <= src_kernel_win_0_va_fu_122;
        src_kernel_win_0_va_fu_122 <= col_buf_0_val_0_0_reg_870_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_823_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_130 <= src_kernel_win_0_va_8_reg_877;
        src_kernel_win_0_va_3_fu_134 <= src_kernel_win_0_va_2_fu_130;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_138 <= src_kernel_win_0_va_9_fu_556_p3;
        src_kernel_win_0_va_5_fu_142 <= src_kernel_win_0_va_4_fu_138;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_866_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_3_reg_896 <= temp_0_i_i_i_059_i_3_fu_632_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_866_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_6_reg_902 <= temp_0_i_i_i_059_i_6_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_866 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_s_reg_890 <= temp_0_i_i_i_059_i_s_fu_575_p3;
    end
end

always @ (*) begin
    if ((exitcond388_i_i_fu_330_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_114_2_reg_803 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_114_2_reg_803 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_4_reg_799 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_61)) begin
        if ((ap_predicate_op100_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_327)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_4_reg_799 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_4_reg_799 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_61)) begin
        if ((ap_predicate_op100_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_327)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_794 == 1'd0) & (tmp_4_reg_799 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_785 == 1'd1) & (icmp_reg_794 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_reg_794 == 1'd0) & (or_cond_i_i_i_reg_832 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op92_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond388_i_i_fu_330_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond388_i_i_fu_330_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_364_p2 = ($signed(10'd1023) + $signed(t_V_4_reg_241));

assign ImagLoc_x_fu_358_p2 = ($signed(11'd2047) + $signed(t_V_4_cast_fu_326_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((or_cond_i_i_reg_866_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_327 = ((icmp_reg_794 == 1'd0) & (tmp_4_reg_799 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1));
end

always @ (*) begin
    ap_condition_61 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op100_read_state4 = ((tmp_s_reg_785 == 1'd1) & (icmp_reg_794 == 1'd1) & (or_cond_i_i_i_reg_832 == 1'd1));
end

always @ (*) begin
    ap_predicate_op92_read_state4 = ((icmp_reg_794 == 1'd0) & (or_cond_i_i_i_reg_832 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign brmerge_fu_424_p2 = (tmp_84_not_reg_789 | tmp_6_fu_384_p2);

assign col_assign_6_t_fu_450_p2 = (tmp_15_reg_836 ^ 2'd3);

assign col_buf_0_val_0_0_fu_467_p3 = ((brmerge_reg_841[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_1_fu_455_p5);

assign col_buf_0_val_1_0_fu_486_p3 = ((brmerge_reg_841[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_3_fu_474_p5);

assign col_buf_0_val_2_0_fu_505_p3 = ((brmerge_reg_841[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_13_fu_493_p5);

assign exitcond388_i_i_fu_330_p2 = ((t_V_4_reg_241 == 10'd642) ? 1'b1 : 1'b0);

assign exitcond389_i_i_fu_252_p2 = ((t_V_reg_230 == 9'd482) ? 1'b1 : 1'b0);

assign i_V_fu_258_p2 = (t_V_reg_230 + 9'd1);

assign icmp1_fu_352_p2 = ((tmp_11_fu_342_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_fu_286_p2 = ((tmp_fu_276_p4 != 8'd0) ? 1'b1 : 1'b0);

assign j_V_fu_336_p2 = (t_V_4_reg_241 + 10'd1);

assign k_buf_0_val_3_address0 = tmp_8_fu_429_p1;

assign k_buf_0_val_4_address0 = tmp_8_fu_429_p1;

assign k_buf_0_val_5_address0 = tmp_8_fu_429_p1;

assign or_cond_i_i_fu_436_p2 = (icmp_reg_794 & icmp1_fu_352_p2);

assign or_cond_i_i_i_fu_390_p2 = (tmp_6_fu_384_p2 & rev_fu_378_p2);

assign p_assign_1_cast_fu_404_p3 = ((tmp_14_fu_396_p3[0:0] === 1'b1) ? 10'd0 : 10'd639);

assign p_dst_data_stream_V_din = ((tmp_160_2_2_fu_708_p2[0:0] === 1'b1) ? col_buf_0_val_0_0_reg_870_pp0_iter3_reg : temp_0_i_i_i_059_i_6_reg_902);

assign rev_fu_378_p2 = (tmp_12_fu_370_p3 ^ 1'd1);

assign row_assign_7_1_t_fu_314_p2 = (tmp_9_fu_310_p1 ^ 2'd1);

assign row_assign_7_2_t_fu_320_p2 = ($signed(2'd2) - $signed(tmp_9_fu_310_p1));

assign src_kernel_win_0_va_8_fu_538_p3 = ((tmp_5_reg_807[0:0] === 1'b1) ? tmp_16_fu_527_p5 : col_buf_0_val_1_0_fu_486_p3);

assign src_kernel_win_0_va_9_fu_556_p3 = ((tmp_5_reg_807[0:0] === 1'b1) ? tmp_18_fu_545_p5 : col_buf_0_val_2_0_fu_505_p3);

assign start_out = real_start;

assign t_V_4_cast_fu_326_p1 = t_V_4_reg_241;

assign temp_0_i_i_i_059_i_1_fu_606_p3 = ((tmp_160_0_2_fu_602_p2[0:0] === 1'b1) ? src_kernel_win_0_va_9_reg_884 : temp_0_i_i_i_059_i_s_reg_890);

assign temp_0_i_i_i_059_i_2_fu_618_p3 = ((tmp_160_1_fu_612_p2[0:0] === 1'b1) ? src_kernel_win_0_va_3_fu_134 : temp_0_i_i_i_059_i_1_fu_606_p3);

assign temp_0_i_i_i_059_i_3_fu_632_p3 = ((tmp_160_1_1_fu_626_p2[0:0] === 1'b1) ? src_kernel_win_0_va_2_fu_130 : temp_0_i_i_i_059_i_2_fu_618_p3);

assign temp_0_i_i_i_059_i_4_fu_662_p3 = ((tmp_160_1_2_fu_658_p2[0:0] === 1'b1) ? src_kernel_win_0_va_8_reg_877_pp0_iter2_reg : temp_0_i_i_i_059_i_3_reg_896);

assign temp_0_i_i_i_059_i_5_fu_674_p3 = ((tmp_160_2_fu_668_p2[0:0] === 1'b1) ? src_kernel_win_0_va_1_fu_126 : temp_0_i_i_i_059_i_4_fu_662_p3);

assign temp_0_i_i_i_059_i_6_fu_688_p3 = ((tmp_160_2_1_fu_682_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_122 : temp_0_i_i_i_059_i_5_fu_674_p3);

assign temp_0_i_i_i_059_i_s_fu_575_p3 = ((tmp_160_0_1_fu_569_p2[0:0] === 1'b1) ? src_kernel_win_0_va_4_fu_138 : src_kernel_win_0_va_5_fu_142);

assign tmp_114_2_fu_298_p2 = ((t_V_reg_230 == 9'd1) ? 1'b1 : 1'b0);

assign tmp_11_fu_342_p4 = {{t_V_4_reg_241[9:1]}};

assign tmp_12_fu_370_p3 = ImagLoc_x_fu_358_p2[32'd10];

assign tmp_14_fu_396_p3 = ImagLoc_x_fu_358_p2[32'd10];

assign tmp_15_fu_420_p1 = x_fu_412_p3[1:0];

assign tmp_160_0_1_fu_569_p2 = ((src_kernel_win_0_va_4_fu_138 < src_kernel_win_0_va_5_fu_142) ? 1'b1 : 1'b0);

assign tmp_160_0_2_fu_602_p2 = ((src_kernel_win_0_va_9_reg_884 < temp_0_i_i_i_059_i_s_reg_890) ? 1'b1 : 1'b0);

assign tmp_160_1_1_fu_626_p2 = ((src_kernel_win_0_va_2_fu_130 < temp_0_i_i_i_059_i_2_fu_618_p3) ? 1'b1 : 1'b0);

assign tmp_160_1_2_fu_658_p2 = ((src_kernel_win_0_va_8_reg_877_pp0_iter2_reg < temp_0_i_i_i_059_i_3_reg_896) ? 1'b1 : 1'b0);

assign tmp_160_1_fu_612_p2 = ((src_kernel_win_0_va_3_fu_134 < temp_0_i_i_i_059_i_1_fu_606_p3) ? 1'b1 : 1'b0);

assign tmp_160_2_1_fu_682_p2 = ((src_kernel_win_0_va_fu_122 < temp_0_i_i_i_059_i_5_fu_674_p3) ? 1'b1 : 1'b0);

assign tmp_160_2_2_fu_708_p2 = ((col_buf_0_val_0_0_reg_870_pp0_iter3_reg < temp_0_i_i_i_059_i_6_reg_902) ? 1'b1 : 1'b0);

assign tmp_160_2_fu_668_p2 = ((src_kernel_win_0_va_1_fu_126 < temp_0_i_i_i_059_i_4_fu_662_p3) ? 1'b1 : 1'b0);

assign tmp_4_fu_292_p2 = ((t_V_reg_230 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_304_p2 = ((t_V_reg_230 > 9'd480) ? 1'b1 : 1'b0);

assign tmp_6_fu_384_p2 = (($signed(ImagLoc_x_fu_358_p2) < $signed(11'd640)) ? 1'b1 : 1'b0);

assign tmp_84_not_fu_270_p2 = (tmp_s_fu_264_p2 ^ 1'd1);

assign tmp_8_fu_429_p1 = x_fu_412_p3;

assign tmp_9_fu_310_p1 = t_V_reg_230[1:0];

assign tmp_fu_276_p4 = {{t_V_reg_230[8:1]}};

assign tmp_s_fu_264_p2 = ((t_V_reg_230 < 9'd480) ? 1'b1 : 1'b0);

assign x_fu_412_p3 = ((or_cond_i_i_i_fu_390_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_364_p2 : p_assign_1_cast_fu_404_p3);

endmodule //Erode
