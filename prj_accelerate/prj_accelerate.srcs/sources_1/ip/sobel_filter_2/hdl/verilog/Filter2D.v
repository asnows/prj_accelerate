// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [9:0] p_src_rows_V_read;
input  [10:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1599;
reg   [0:0] exitcond388_i_reg_1599_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1608;
reg   [0:0] or_cond_i_i_reg_1608_pp0_iter1_reg;
reg   [0:0] icmp_reg_1564;
reg   [0:0] tmp_5_reg_1555;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1642;
reg   [0:0] or_cond_i_reg_1642_pp0_iter4_reg;
reg   [31:0] t_V_2_reg_334;
wire  signed [31:0] p_src_cols_V_read_cas_fu_345_p1;
reg  signed [31:0] p_src_cols_V_read_cas_reg_1464;
wire  signed [31:0] p_src_rows_V_read_cas_fu_349_p1;
reg  signed [31:0] p_src_rows_V_read_cas_reg_1470;
wire  signed [31:0] tmp_cast_fu_363_p1;
reg  signed [31:0] tmp_cast_reg_1482;
wire  signed [31:0] tmp_1_cast_fu_377_p1;
reg  signed [31:0] tmp_1_cast_reg_1487;
wire   [1:0] tmp_2_fu_389_p2;
reg   [1:0] tmp_2_reg_1492;
wire   [1:0] tmp_4_fu_407_p2;
reg   [1:0] tmp_4_reg_1499;
wire  signed [9:0] OP2_V_0_1_cast_fu_413_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1506;
wire  signed [9:0] OP2_V_0_2_cast_fu_417_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1511;
wire  signed [10:0] OP2_V_1_cast_fu_421_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1516;
wire   [11:0] OP2_V_1_2_cast_fu_425_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1521;
wire  signed [9:0] OP2_V_2_cast_fu_429_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1526;
wire   [10:0] OP2_V_2_1_cast_fu_433_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1531;
wire  signed [31:0] tmp_13_cast_fu_455_p1;
reg  signed [31:0] tmp_13_cast_reg_1536;
wire   [1:0] tmp_14_fu_459_p2;
reg   [1:0] tmp_14_reg_1541;
wire   [0:0] exitcond389_i_fu_465_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_470_p2;
reg   [31:0] i_V_reg_1550;
wire   [0:0] tmp_5_fu_476_p2;
wire   [0:0] tmp_73_0_not_fu_481_p2;
reg   [0:0] tmp_73_0_not_reg_1559;
wire   [0:0] icmp_fu_497_p2;
wire   [0:0] tmp_16_fu_503_p2;
reg   [0:0] tmp_16_reg_1569;
wire   [0:0] tmp_117_1_fu_509_p2;
reg   [0:0] tmp_117_1_reg_1573;
wire   [0:0] tmp_17_fu_515_p2;
reg   [0:0] tmp_17_reg_1577;
wire   [1:0] row_assign_10_0_t_fu_737_p2;
reg   [1:0] row_assign_10_0_t_reg_1584;
wire   [1:0] row_assign_10_1_t_fu_769_p2;
reg   [1:0] row_assign_10_1_t_reg_1589;
wire   [1:0] row_assign_10_2_t_fu_801_p2;
reg   [1:0] row_assign_10_2_t_reg_1594;
wire   [0:0] exitcond388_i_fu_806_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op185_read_state5;
reg    ap_predicate_op196_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_reg_1599_pp0_iter2_reg;
wire   [31:0] j_V_fu_811_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_858_p2;
wire   [1:0] tmp_53_fu_930_p1;
reg   [1:0] tmp_53_reg_1612;
wire   [0:0] brmerge_fu_934_p2;
reg   [0:0] brmerge_reg_1617;
reg   [0:0] brmerge_reg_1617_pp0_iter1_reg;
reg   [9:0] k_buf_0_val_3_addr_reg_1624;
reg   [9:0] k_buf_0_val_3_addr_reg_1624_pp0_iter1_reg;
reg   [9:0] k_buf_0_val_4_addr_reg_1630;
reg   [9:0] k_buf_0_val_4_addr_reg_1630_pp0_iter1_reg;
reg   [9:0] k_buf_0_val_5_addr_reg_1636;
reg   [9:0] k_buf_0_val_5_addr_reg_1636_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_946_p2;
reg   [0:0] or_cond_i_reg_1642_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1642_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1642_pp0_iter3_reg;
wire   [1:0] col_assign_3_t_fu_951_p2;
reg   [1:0] col_assign_3_t_reg_1646;
wire   [7:0] src_kernel_win_0_va_6_fu_1074_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1653;
wire   [7:0] src_kernel_win_0_va_7_fu_1092_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1660;
wire   [7:0] src_kernel_win_0_va_8_fu_1110_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1666;
wire  signed [10:0] grp_fu_1373_p3;
reg  signed [10:0] p_Val2_4_0_1_reg_1671;
wire   [11:0] p_Val2_4_1_1_fu_1189_p2;
reg   [11:0] p_Val2_4_1_1_reg_1676;
wire   [11:0] r_V_2_1_2_fu_1198_p2;
reg   [11:0] r_V_2_1_2_reg_1681;
wire   [7:0] tmp_61_fu_1222_p1;
reg   [7:0] tmp_61_reg_1686;
wire   [10:0] tmp26_fu_1252_p2;
reg   [10:0] tmp26_reg_1691;
wire   [7:0] tmp28_fu_1258_p2;
reg   [7:0] tmp28_reg_1696;
wire   [7:0] tmp30_fu_1264_p2;
reg   [7:0] tmp30_reg_1701;
wire   [7:0] p_Val2_s_fu_1365_p3;
reg   [7:0] p_Val2_s_reg_1706;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_323;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_35_fu_939_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_158;
reg   [7:0] src_kernel_win_0_va_1_fu_162;
reg   [7:0] src_kernel_win_0_va_2_fu_166;
reg   [7:0] src_kernel_win_0_va_3_fu_170;
reg   [7:0] src_kernel_win_0_va_4_fu_174;
reg   [7:0] src_kernel_win_0_va_5_fu_178;
reg   [7:0] right_border_buf_0_s_fu_182;
wire   [7:0] col_buf_0_val_0_0_fu_984_p3;
reg   [7:0] right_border_buf_0_1_fu_186;
reg   [7:0] right_border_buf_0_2_fu_190;
reg   [7:0] right_border_buf_0_3_fu_194;
wire   [7:0] col_buf_0_val_1_0_fu_1002_p3;
reg   [7:0] right_border_buf_0_4_fu_198;
reg   [7:0] right_border_buf_0_5_fu_202;
wire   [7:0] col_buf_0_val_2_0_fu_1020_p3;
wire  signed [10:0] p_src_cols_V_read_cas_fu_345_p0;
wire  signed [9:0] p_src_rows_V_read_cas_fu_349_p0;
wire  signed [10:0] p_src_cols_V_read_cas_1_fu_353_p0;
wire  signed [11:0] p_src_cols_V_read_cas_1_fu_353_p1;
wire   [11:0] tmp_s_fu_357_p2;
wire  signed [9:0] p_src_rows_V_read_cas_1_fu_367_p0;
wire  signed [10:0] p_src_rows_V_read_cas_1_fu_367_p1;
wire   [10:0] tmp_1_fu_371_p2;
wire  signed [9:0] tmp_7_fu_381_p0;
wire  signed [10:0] tmp_8_fu_385_p0;
wire   [1:0] tmp_7_fu_381_p1;
wire  signed [9:0] tmp_10_fu_395_p0;
wire   [0:0] tmp_10_fu_395_p1;
wire   [1:0] tmp_3_fu_399_p3;
wire  signed [10:0] tmp_12_fu_437_p1;
wire   [11:0] tmp_12_fu_437_p3;
wire  signed [12:0] tmp_12_cast_fu_445_p1;
wire   [12:0] tmp_13_fu_449_p2;
wire   [1:0] tmp_8_fu_385_p1;
wire   [30:0] tmp_15_fu_487_p4;
wire   [31:0] tmp_19_fu_524_p2;
wire   [0:0] tmp_20_fu_530_p3;
wire   [0:0] tmp_21_fu_544_p2;
wire   [0:0] rev_fu_538_p2;
wire   [0:0] tmp_22_fu_555_p3;
wire   [31:0] p_assign_7_fu_563_p2;
wire   [31:0] p_p2_i425_i_fu_569_p3;
wire   [31:0] p_assign_6_1_fu_586_p2;
wire   [0:0] tmp_25_fu_592_p3;
wire   [0:0] tmp_143_1_fu_606_p2;
wire   [0:0] rev1_fu_600_p2;
wire   [0:0] tmp_26_fu_617_p3;
wire   [31:0] p_assign_7_1_fu_625_p2;
wire   [31:0] p_p2_i425_i_1_fu_631_p3;
wire   [31:0] p_assign_6_2_fu_648_p2;
wire   [0:0] tmp_28_fu_654_p3;
wire   [0:0] tmp_143_2_fu_668_p2;
wire   [0:0] rev2_fu_662_p2;
wire   [0:0] tmp_29_fu_679_p3;
wire   [31:0] p_assign_7_2_fu_687_p2;
wire   [31:0] p_p2_i425_i_2_fu_693_p3;
wire   [1:0] tmp_24_fu_582_p1;
wire   [0:0] tmp_23_fu_577_p2;
wire   [1:0] tmp_31_fu_710_p2;
wire   [1:0] tmp_18_fu_520_p1;
wire   [0:0] or_cond_i424_i_fu_549_p2;
wire   [1:0] tmp_33_fu_723_p2;
wire   [1:0] tmp_32_fu_715_p3;
wire   [1:0] tmp_34_fu_729_p3;
wire   [1:0] tmp_27_fu_644_p1;
wire   [0:0] tmp_153_1_fu_639_p2;
wire   [1:0] tmp_36_fu_742_p2;
wire   [0:0] or_cond_i424_i_1_fu_611_p2;
wire   [1:0] tmp_38_fu_755_p2;
wire   [1:0] tmp_37_fu_747_p3;
wire   [1:0] tmp_42_fu_761_p3;
wire   [1:0] tmp_30_fu_706_p1;
wire   [0:0] tmp_153_2_fu_701_p2;
wire   [1:0] tmp_43_fu_774_p2;
wire   [0:0] or_cond_i424_i_2_fu_673_p2;
wire   [1:0] tmp_45_fu_787_p2;
wire   [1:0] tmp_44_fu_779_p3;
wire   [1:0] tmp_46_fu_793_p3;
wire   [30:0] tmp_48_fu_817_p4;
wire   [31:0] ImagLoc_x_fu_833_p2;
wire   [0:0] tmp_49_fu_839_p3;
wire   [0:0] tmp_9_fu_853_p2;
wire   [0:0] rev3_fu_847_p2;
wire   [0:0] tmp_50_fu_864_p3;
wire   [31:0] p_assign_1_fu_872_p2;
wire   [31:0] p_p2_i_i_fu_878_p3;
wire   [31:0] p_assign_2_fu_891_p2;
wire   [0:0] tmp_9_not_fu_904_p2;
wire   [0:0] tmp_11_fu_886_p2;
wire   [0:0] sel_tmp7_fu_910_p2;
wire   [0:0] sel_tmp8_fu_916_p2;
wire   [31:0] p_assign_3_fu_896_p3;
wire   [31:0] x_fu_922_p3;
wire   [0:0] icmp1_fu_827_p2;
wire   [7:0] tmp_39_fu_973_p5;
wire   [7:0] tmp_40_fu_991_p5;
wire   [7:0] tmp_41_fu_1009_p5;
wire   [7:0] tmp_47_fu_1063_p5;
wire   [7:0] tmp_51_fu_1081_p5;
wire   [7:0] tmp_52_fu_1099_p5;
wire   [8:0] OP1_V_0_cast_fu_1123_p1;
wire  signed [8:0] r_V_2_fu_1127_p2;
wire  signed [10:0] grp_fu_1380_p3;
wire  signed [2:0] r_V_2_1_fu_1173_p0;
wire   [7:0] r_V_2_1_fu_1173_p1;
wire  signed [10:0] r_V_2_1_fu_1173_p2;
wire  signed [11:0] tmp_161_1_cast_cast_fu_1178_p1;
wire  signed [11:0] p_Val2_4_0_2_cast_fu_1166_p1;
wire   [3:0] r_V_2_1_2_fu_1198_p0;
wire   [7:0] r_V_2_1_2_fu_1198_p1;
wire   [7:0] tmp_58_fu_1186_p1;
wire   [7:0] tmp_57_fu_1182_p1;
wire  signed [1:0] r_V_2_2_fu_1217_p0;
wire   [7:0] r_V_2_2_fu_1217_p1;
wire   [9:0] r_V_2_2_fu_1217_p2;
wire   [2:0] r_V_2_2_1_fu_1230_p0;
wire   [7:0] r_V_2_2_1_fu_1230_p1;
wire   [10:0] r_V_2_2_1_fu_1230_p2;
wire   [9:0] tmp_161_2_2_cast_cas_fu_1239_p1;
wire   [9:0] tmp27_fu_1242_p2;
wire  signed [10:0] tmp27_cast_fu_1248_p1;
wire   [7:0] tmp_54_fu_1207_p2;
wire   [7:0] tmp_60_fu_1203_p1;
wire   [7:0] tmp_62_fu_1235_p1;
wire   [11:0] tmp25_fu_1293_p2;
wire  signed [11:0] tmp26_cast_fu_1297_p1;
wire   [11:0] p_Val2_2_fu_1300_p2;
wire   [7:0] tmp29_fu_1314_p2;
wire   [0:0] isneg_fu_1306_p3;
wire   [3:0] tmp_56_fu_1323_p4;
wire   [0:0] not_i_i_i_fu_1339_p2;
wire   [0:0] tmp_2_i_i_fu_1333_p2;
wire   [0:0] overflow_fu_1345_p2;
wire   [0:0] tmp_i_i_fu_1359_p2;
wire   [7:0] p_mux_i_i_cast_fu_1351_p3;
wire   [7:0] p_Val2_1_fu_1318_p2;
wire  signed [1:0] grp_fu_1373_p0;
wire   [7:0] grp_fu_1373_p1;
wire  signed [1:0] grp_fu_1380_p0;
wire   [7:0] grp_fu_1380_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1373_p10;
wire   [9:0] grp_fu_1380_p10;
wire   [11:0] r_V_2_1_2_fu_1198_p10;
wire   [10:0] r_V_2_1_fu_1173_p10;
wire   [10:0] r_V_2_2_1_fu_1230_p10;
wire   [9:0] r_V_2_2_fu_1217_p10;
reg    ap_condition_388;
reg    ap_condition_382;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_addr_reg_1624),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1624_pp0_iter1_reg),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_addr_reg_1630),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1630_pp0_iter1_reg),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_addr_reg_1636),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1636_pp0_iter1_reg),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U15(
    .din0(right_border_buf_0_s_fu_182),
    .din1(right_border_buf_0_1_fu_186),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1646),
    .dout(tmp_39_fu_973_p5)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U16(
    .din0(right_border_buf_0_3_fu_194),
    .din1(right_border_buf_0_4_fu_198),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1646),
    .dout(tmp_40_fu_991_p5)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U17(
    .din0(right_border_buf_0_5_fu_202),
    .din1(right_border_buf_0_2_fu_190),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1646),
    .dout(tmp_41_fu_1009_p5)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U18(
    .din0(col_buf_0_val_0_0_fu_984_p3),
    .din1(col_buf_0_val_1_0_fu_1002_p3),
    .din2(col_buf_0_val_2_0_fu_1020_p3),
    .din3(row_assign_10_0_t_reg_1584),
    .dout(tmp_47_fu_1063_p5)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U19(
    .din0(col_buf_0_val_0_0_fu_984_p3),
    .din1(col_buf_0_val_1_0_fu_1002_p3),
    .din2(col_buf_0_val_2_0_fu_1020_p3),
    .din3(row_assign_10_1_t_reg_1589),
    .dout(tmp_51_fu_1081_p5)
);

sobel_filter_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_eOg_U20(
    .din0(col_buf_0_val_0_0_fu_984_p3),
    .din1(col_buf_0_val_1_0_fu_1002_p3),
    .din2(col_buf_0_val_2_0_fu_1020_p3),
    .din3(row_assign_10_2_t_reg_1594),
    .dout(tmp_52_fu_1099_p5)
);

sobel_filter_mac_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_filter_mac_fYi_U21(
    .din0(grp_fu_1373_p0),
    .din1(grp_fu_1373_p1),
    .din2(r_V_2_fu_1127_p2),
    .dout(grp_fu_1373_p3)
);

sobel_filter_mac_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_filter_mac_g8j_U22(
    .din0(grp_fu_1380_p0),
    .din1(grp_fu_1380_p1),
    .din2(p_Val2_4_0_1_reg_1671),
    .dout(grp_fu_1380_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_806_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_465_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond389_i_fu_465_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_806_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_334 <= j_V_fu_811_p2;
    end else if (((exitcond389_i_fu_465_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_334 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_323 <= i_V_reg_1550;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_323 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_cast_reg_1506 <= OP2_V_0_1_cast_fu_413_p1;
        OP2_V_0_2_cast_reg_1511 <= OP2_V_0_2_cast_fu_417_p1;
        OP2_V_1_2_cast_reg_1521[3 : 0] <= OP2_V_1_2_cast_fu_425_p1[3 : 0];
        OP2_V_1_cast_reg_1516 <= OP2_V_1_cast_fu_421_p1;
        OP2_V_2_1_cast_reg_1531[2 : 0] <= OP2_V_2_1_cast_fu_433_p1[2 : 0];
        OP2_V_2_cast_reg_1526 <= OP2_V_2_cast_fu_429_p1;
        p_src_cols_V_read_cas_reg_1464 <= p_src_cols_V_read_cas_fu_345_p1;
        p_src_rows_V_read_cas_reg_1470 <= p_src_rows_V_read_cas_fu_349_p1;
        tmp_13_cast_reg_1536[31 : 1] <= tmp_13_cast_fu_455_p1[31 : 1];
        tmp_14_reg_1541 <= tmp_14_fu_459_p2;
        tmp_1_cast_reg_1487 <= tmp_1_cast_fu_377_p1;
        tmp_2_reg_1492 <= tmp_2_fu_389_p2;
        tmp_4_reg_1499 <= tmp_4_fu_407_p2;
        tmp_cast_reg_1482 <= tmp_cast_fu_363_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_806_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1617 <= brmerge_fu_934_p2;
        k_buf_0_val_3_addr_reg_1624 <= tmp_35_fu_939_p1;
        k_buf_0_val_4_addr_reg_1630 <= tmp_35_fu_939_p1;
        k_buf_0_val_5_addr_reg_1636 <= tmp_35_fu_939_p1;
        or_cond_i_i_reg_1608 <= or_cond_i_i_fu_858_p2;
        or_cond_i_reg_1642 <= or_cond_i_fu_946_p2;
        tmp_53_reg_1612 <= tmp_53_fu_930_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1617_pp0_iter1_reg <= brmerge_reg_1617;
        exitcond388_i_reg_1599 <= exitcond388_i_fu_806_p2;
        exitcond388_i_reg_1599_pp0_iter1_reg <= exitcond388_i_reg_1599;
        k_buf_0_val_3_addr_reg_1624_pp0_iter1_reg <= k_buf_0_val_3_addr_reg_1624;
        k_buf_0_val_4_addr_reg_1630_pp0_iter1_reg <= k_buf_0_val_4_addr_reg_1630;
        k_buf_0_val_5_addr_reg_1636_pp0_iter1_reg <= k_buf_0_val_5_addr_reg_1636;
        or_cond_i_i_reg_1608_pp0_iter1_reg <= or_cond_i_i_reg_1608;
        or_cond_i_reg_1642_pp0_iter1_reg <= or_cond_i_reg_1642;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_3_t_reg_1646 <= col_assign_3_t_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond388_i_reg_1599_pp0_iter2_reg <= exitcond388_i_reg_1599_pp0_iter1_reg;
        or_cond_i_reg_1642_pp0_iter2_reg <= or_cond_i_reg_1642_pp0_iter1_reg;
        or_cond_i_reg_1642_pp0_iter3_reg <= or_cond_i_reg_1642_pp0_iter2_reg;
        or_cond_i_reg_1642_pp0_iter4_reg <= or_cond_i_reg_1642_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1550 <= i_V_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_465_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1564 <= icmp_fu_497_p2;
        row_assign_10_0_t_reg_1584 <= row_assign_10_0_t_fu_737_p2;
        row_assign_10_1_t_reg_1589 <= row_assign_10_1_t_fu_769_p2;
        row_assign_10_2_t_reg_1594 <= row_assign_10_2_t_fu_801_p2;
        tmp_117_1_reg_1573 <= tmp_117_1_fu_509_p2;
        tmp_16_reg_1569 <= tmp_16_fu_503_p2;
        tmp_17_reg_1577 <= tmp_17_fu_515_p2;
        tmp_5_reg_1555 <= tmp_5_fu_476_p2;
        tmp_73_0_not_reg_1559 <= tmp_73_0_not_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1642_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_0_1_reg_1671 <= grp_fu_1373_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1642_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_1_1_reg_1676 <= p_Val2_4_1_1_fu_1189_p2;
        r_V_2_1_2_reg_1681 <= r_V_2_1_2_fu_1198_p2;
        tmp26_reg_1691 <= tmp26_fu_1252_p2;
        tmp28_reg_1696 <= tmp28_fu_1258_p2;
        tmp30_reg_1701 <= tmp30_fu_1264_p2;
        tmp_61_reg_1686 <= tmp_61_fu_1222_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1642_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1706 <= p_Val2_s_fu_1365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1))) begin
        right_border_buf_0_1_fu_186 <= right_border_buf_0_s_fu_182;
        right_border_buf_0_2_fu_190 <= right_border_buf_0_5_fu_202;
        right_border_buf_0_3_fu_194 <= col_buf_0_val_1_0_fu_1002_p3;
        right_border_buf_0_4_fu_198 <= right_border_buf_0_3_fu_194;
        right_border_buf_0_5_fu_202 <= col_buf_0_val_2_0_fu_1020_p3;
        right_border_buf_0_s_fu_182 <= col_buf_0_val_0_0_fu_984_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1599_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_162 <= src_kernel_win_0_va_fu_158;
        src_kernel_win_0_va_2_fu_166 <= src_kernel_win_0_va_7_reg_1660;
        src_kernel_win_0_va_3_fu_170 <= src_kernel_win_0_va_2_fu_166;
        src_kernel_win_0_va_fu_158 <= src_kernel_win_0_va_6_reg_1653;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_174 <= src_kernel_win_0_va_8_fu_1110_p3;
        src_kernel_win_0_va_5_fu_178 <= src_kernel_win_0_va_4_fu_174;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_6_reg_1653 <= src_kernel_win_0_va_6_fu_1074_p3;
        src_kernel_win_0_va_7_reg_1660 <= src_kernel_win_0_va_7_fu_1092_p3;
        src_kernel_win_0_va_8_reg_1666 <= src_kernel_win_0_va_8_fu_1110_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond389_i_fu_465_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_465_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_16_reg_1569 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_16_reg_1569 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_117_1_reg_1573 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op196_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_388)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_117_1_reg_1573 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_16_reg_1569 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op196_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_382)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_16_reg_1569 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1555 == 1'd1) & (icmp_reg_1564 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op196_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op185_read_state5 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_465_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_833_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_334));

assign OP1_V_0_cast_fu_1123_p1 = src_kernel_win_0_va_5_fu_178;

assign OP2_V_0_1_cast_fu_413_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_417_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_425_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_421_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_433_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_429_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op196_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op185_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op196_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op185_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op196_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op185_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op196_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op185_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((or_cond_i_reg_1642_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_382 = ((tmp_16_reg_1569 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_388 = ((tmp_117_1_reg_1573 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op185_read_state5 = ((or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (icmp_reg_1564 == 1'd0) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op196_read_state5 = ((tmp_5_reg_1555 == 1'd1) & (icmp_reg_1564 == 1'd1) & (or_cond_i_i_reg_1608_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1599_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_934_p2 = (tmp_9_fu_853_p2 | tmp_73_0_not_reg_1559);

assign col_assign_3_t_fu_951_p2 = (tmp_14_reg_1541 - tmp_53_reg_1612);

assign col_buf_0_val_0_0_fu_984_p3 = ((brmerge_reg_1617_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_39_fu_973_p5);

assign col_buf_0_val_1_0_fu_1002_p3 = ((brmerge_reg_1617_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_40_fu_991_p5);

assign col_buf_0_val_2_0_fu_1020_p3 = ((brmerge_reg_1617_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_41_fu_1009_p5);

assign exitcond388_i_fu_806_p2 = ((t_V_2_reg_334 == tmp_cast_reg_1482) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_465_p2 = ((t_V_reg_323 == tmp_1_cast_reg_1487) ? 1'b1 : 1'b0);

assign grp_fu_1373_p0 = OP2_V_0_1_cast_reg_1506;

assign grp_fu_1373_p1 = grp_fu_1373_p10;

assign grp_fu_1373_p10 = src_kernel_win_0_va_4_fu_174;

assign grp_fu_1380_p0 = OP2_V_0_2_cast_reg_1511;

assign grp_fu_1380_p1 = grp_fu_1380_p10;

assign grp_fu_1380_p10 = src_kernel_win_0_va_8_reg_1666;

assign i_V_fu_470_p2 = (t_V_reg_323 + 32'd1);

assign icmp1_fu_827_p2 = ((tmp_48_fu_817_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_497_p2 = ((tmp_15_fu_487_p4 != 31'd0) ? 1'b1 : 1'b0);

assign isneg_fu_1306_p3 = p_Val2_2_fu_1300_p2[32'd11];

assign j_V_fu_811_p2 = (t_V_2_reg_334 + 32'd1);

assign not_i_i_i_fu_1339_p2 = ((tmp_56_fu_1323_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_1_fu_611_p2 = (tmp_143_1_fu_606_p2 & rev1_fu_600_p2);

assign or_cond_i424_i_2_fu_673_p2 = (tmp_143_2_fu_668_p2 & rev2_fu_662_p2);

assign or_cond_i424_i_fu_549_p2 = (tmp_21_fu_544_p2 & rev_fu_538_p2);

assign or_cond_i_fu_946_p2 = (icmp_reg_1564 & icmp1_fu_827_p2);

assign or_cond_i_i_fu_858_p2 = (tmp_9_fu_853_p2 & rev3_fu_847_p2);

assign overflow_fu_1345_p2 = (tmp_2_i_i_fu_1333_p2 & not_i_i_i_fu_1339_p2);

assign p_Val2_1_fu_1318_p2 = (tmp28_reg_1696 + tmp29_fu_1314_p2);

assign p_Val2_2_fu_1300_p2 = ($signed(tmp25_fu_1293_p2) + $signed(tmp26_cast_fu_1297_p1));

assign p_Val2_4_0_2_cast_fu_1166_p1 = grp_fu_1380_p3;

assign p_Val2_4_1_1_fu_1189_p2 = ($signed(tmp_161_1_cast_cast_fu_1178_p1) + $signed(p_Val2_4_0_2_cast_fu_1166_p1));

assign p_Val2_s_fu_1365_p3 = ((tmp_i_i_fu_1359_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1351_p3 : p_Val2_1_fu_1318_p2);

assign p_assign_1_fu_872_p2 = (32'd1 - t_V_2_reg_334);

assign p_assign_2_fu_891_p2 = ($signed(tmp_13_cast_reg_1536) - $signed(p_p2_i_i_fu_878_p3));

assign p_assign_3_fu_896_p3 = ((or_cond_i_i_fu_858_p2[0:0] === 1'b1) ? ImagLoc_x_fu_833_p2 : p_assign_2_fu_891_p2);

assign p_assign_6_1_fu_586_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_323));

assign p_assign_6_2_fu_648_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_323));

assign p_assign_7_1_fu_625_p2 = (32'd2 - t_V_reg_323);

assign p_assign_7_2_fu_687_p2 = (32'd3 - t_V_reg_323);

assign p_assign_7_fu_563_p2 = (32'd1 - t_V_reg_323);

assign p_dst_data_stream_V_din = p_Val2_s_reg_1706;

assign p_mux_i_i_cast_fu_1351_p3 = ((tmp_2_i_i_fu_1333_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i425_i_1_fu_631_p3 = ((tmp_26_fu_617_p3[0:0] === 1'b1) ? p_assign_7_1_fu_625_p2 : p_assign_6_1_fu_586_p2);

assign p_p2_i425_i_2_fu_693_p3 = ((tmp_29_fu_679_p3[0:0] === 1'b1) ? p_assign_7_2_fu_687_p2 : p_assign_6_2_fu_648_p2);

assign p_p2_i425_i_fu_569_p3 = ((tmp_22_fu_555_p3[0:0] === 1'b1) ? p_assign_7_fu_563_p2 : tmp_19_fu_524_p2);

assign p_p2_i_i_fu_878_p3 = ((tmp_50_fu_864_p3[0:0] === 1'b1) ? p_assign_1_fu_872_p2 : ImagLoc_x_fu_833_p2);

assign p_src_cols_V_read_cas_1_fu_353_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_1_fu_353_p1 = p_src_cols_V_read_cas_1_fu_353_p0;

assign p_src_cols_V_read_cas_fu_345_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_fu_345_p1 = p_src_cols_V_read_cas_fu_345_p0;

assign p_src_rows_V_read_cas_1_fu_367_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_1_fu_367_p1 = p_src_rows_V_read_cas_1_fu_367_p0;

assign p_src_rows_V_read_cas_fu_349_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_fu_349_p1 = p_src_rows_V_read_cas_fu_349_p0;

assign r_V_2_1_2_fu_1198_p0 = OP2_V_1_2_cast_reg_1521;

assign r_V_2_1_2_fu_1198_p1 = r_V_2_1_2_fu_1198_p10;

assign r_V_2_1_2_fu_1198_p10 = src_kernel_win_0_va_7_reg_1660;

assign r_V_2_1_2_fu_1198_p2 = (r_V_2_1_2_fu_1198_p0 * r_V_2_1_2_fu_1198_p1);

assign r_V_2_1_fu_1173_p0 = OP2_V_1_cast_reg_1516;

assign r_V_2_1_fu_1173_p1 = r_V_2_1_fu_1173_p10;

assign r_V_2_1_fu_1173_p10 = src_kernel_win_0_va_3_fu_170;

assign r_V_2_1_fu_1173_p2 = ($signed(r_V_2_1_fu_1173_p0) * $signed({{1'b0}, {r_V_2_1_fu_1173_p1}}));

assign r_V_2_2_1_fu_1230_p0 = OP2_V_2_1_cast_reg_1531;

assign r_V_2_2_1_fu_1230_p1 = r_V_2_2_1_fu_1230_p10;

assign r_V_2_2_1_fu_1230_p10 = src_kernel_win_0_va_fu_158;

assign r_V_2_2_1_fu_1230_p2 = (r_V_2_2_1_fu_1230_p0 * r_V_2_2_1_fu_1230_p1);

assign r_V_2_2_fu_1217_p0 = OP2_V_2_cast_reg_1526;

assign r_V_2_2_fu_1217_p1 = r_V_2_2_fu_1217_p10;

assign r_V_2_2_fu_1217_p10 = src_kernel_win_0_va_1_fu_162;

assign r_V_2_2_fu_1217_p2 = ($signed(r_V_2_2_fu_1217_p0) * $signed({{1'b0}, {r_V_2_2_fu_1217_p1}}));

assign r_V_2_fu_1127_p2 = (9'd0 - OP1_V_0_cast_fu_1123_p1);

assign rev1_fu_600_p2 = (tmp_25_fu_592_p3 ^ 1'd1);

assign rev2_fu_662_p2 = (tmp_28_fu_654_p3 ^ 1'd1);

assign rev3_fu_847_p2 = (tmp_49_fu_839_p3 ^ 1'd1);

assign rev_fu_538_p2 = (tmp_20_fu_530_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_737_p2 = (tmp_2_reg_1492 - tmp_34_fu_729_p3);

assign row_assign_10_1_t_fu_769_p2 = (tmp_2_reg_1492 - tmp_42_fu_761_p3);

assign row_assign_10_2_t_fu_801_p2 = (tmp_2_reg_1492 - tmp_46_fu_793_p3);

assign sel_tmp7_fu_910_p2 = (tmp_9_not_fu_904_p2 | tmp_49_fu_839_p3);

assign sel_tmp8_fu_916_p2 = (tmp_11_fu_886_p2 & sel_tmp7_fu_910_p2);

assign src_kernel_win_0_va_6_fu_1074_p3 = ((tmp_17_reg_1577[0:0] === 1'b1) ? tmp_47_fu_1063_p5 : col_buf_0_val_0_0_fu_984_p3);

assign src_kernel_win_0_va_7_fu_1092_p3 = ((tmp_17_reg_1577[0:0] === 1'b1) ? tmp_51_fu_1081_p5 : col_buf_0_val_1_0_fu_1002_p3);

assign src_kernel_win_0_va_8_fu_1110_p3 = ((tmp_17_reg_1577[0:0] === 1'b1) ? tmp_52_fu_1099_p5 : col_buf_0_val_2_0_fu_1020_p3);

assign tmp25_fu_1293_p2 = (r_V_2_1_2_reg_1681 + p_Val2_4_1_1_reg_1676);

assign tmp26_cast_fu_1297_p1 = $signed(tmp26_reg_1691);

assign tmp26_fu_1252_p2 = ($signed(r_V_2_2_1_fu_1230_p2) + $signed(tmp27_cast_fu_1248_p1));

assign tmp27_cast_fu_1248_p1 = $signed(tmp27_fu_1242_p2);

assign tmp27_fu_1242_p2 = (tmp_161_2_2_cast_cas_fu_1239_p1 + r_V_2_2_fu_1217_p2);

assign tmp28_fu_1258_p2 = (tmp_54_fu_1207_p2 + tmp_60_fu_1203_p1);

assign tmp29_fu_1314_p2 = (tmp_61_reg_1686 + tmp30_reg_1701);

assign tmp30_fu_1264_p2 = (src_kernel_win_0_va_6_reg_1653 + tmp_62_fu_1235_p1);

assign tmp_10_fu_395_p0 = p_src_rows_V_read;

assign tmp_10_fu_395_p1 = tmp_10_fu_395_p0[0:0];

assign tmp_117_1_fu_509_p2 = ((t_V_reg_323 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_11_fu_886_p2 = (($signed(p_p2_i_i_fu_878_p3) < $signed(p_src_cols_V_read_cas_reg_1464)) ? 1'b1 : 1'b0);

assign tmp_12_cast_fu_445_p1 = $signed(tmp_12_fu_437_p3);

assign tmp_12_fu_437_p1 = p_src_cols_V_read;

assign tmp_12_fu_437_p3 = {{tmp_12_fu_437_p1}, {1'd0}};

assign tmp_13_cast_fu_455_p1 = $signed(tmp_13_fu_449_p2);

assign tmp_13_fu_449_p2 = ($signed(13'd8190) + $signed(tmp_12_cast_fu_445_p1));

assign tmp_143_1_fu_606_p2 = (($signed(p_assign_6_1_fu_586_p2) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_143_2_fu_668_p2 = (($signed(p_assign_6_2_fu_648_p2) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_14_fu_459_p2 = ($signed(2'd3) + $signed(tmp_8_fu_385_p1));

assign tmp_153_1_fu_639_p2 = (($signed(p_p2_i425_i_1_fu_631_p3) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_153_2_fu_701_p2 = (($signed(p_p2_i425_i_2_fu_693_p3) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_15_fu_487_p4 = {{t_V_reg_323[31:1]}};

assign tmp_161_1_cast_cast_fu_1178_p1 = r_V_2_1_fu_1173_p2;

assign tmp_161_2_2_cast_cas_fu_1239_p1 = src_kernel_win_0_va_6_reg_1653;

assign tmp_16_fu_503_p2 = ((t_V_reg_323 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_17_fu_515_p2 = ((t_V_reg_323 > p_src_rows_V_read_cas_reg_1470) ? 1'b1 : 1'b0);

assign tmp_18_fu_520_p1 = t_V_reg_323[1:0];

assign tmp_19_fu_524_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_323));

assign tmp_1_cast_fu_377_p1 = $signed(tmp_1_fu_371_p2);

assign tmp_1_fu_371_p2 = ($signed(11'd2) + $signed(p_src_rows_V_read_cas_1_fu_367_p1));

assign tmp_20_fu_530_p3 = tmp_19_fu_524_p2[32'd31];

assign tmp_21_fu_544_p2 = (($signed(tmp_19_fu_524_p2) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_22_fu_555_p3 = tmp_19_fu_524_p2[32'd31];

assign tmp_23_fu_577_p2 = (($signed(p_p2_i425_i_fu_569_p3) < $signed(p_src_rows_V_read_cas_reg_1470)) ? 1'b1 : 1'b0);

assign tmp_24_fu_582_p1 = p_p2_i425_i_fu_569_p3[1:0];

assign tmp_25_fu_592_p3 = p_assign_6_1_fu_586_p2[32'd31];

assign tmp_26_fu_617_p3 = p_assign_6_1_fu_586_p2[32'd31];

assign tmp_27_fu_644_p1 = p_p2_i425_i_1_fu_631_p3[1:0];

assign tmp_28_fu_654_p3 = p_assign_6_2_fu_648_p2[32'd31];

assign tmp_29_fu_679_p3 = p_assign_6_2_fu_648_p2[32'd31];

assign tmp_2_fu_389_p2 = ($signed(2'd3) + $signed(tmp_7_fu_381_p1));

assign tmp_2_i_i_fu_1333_p2 = (isneg_fu_1306_p3 ^ 1'd1);

assign tmp_30_fu_706_p1 = p_p2_i425_i_2_fu_693_p3[1:0];

assign tmp_31_fu_710_p2 = (tmp_4_reg_1499 - tmp_24_fu_582_p1);

assign tmp_32_fu_715_p3 = ((tmp_23_fu_577_p2[0:0] === 1'b1) ? tmp_24_fu_582_p1 : tmp_31_fu_710_p2);

assign tmp_33_fu_723_p2 = ($signed(2'd3) + $signed(tmp_18_fu_520_p1));

assign tmp_34_fu_729_p3 = ((or_cond_i424_i_fu_549_p2[0:0] === 1'b1) ? tmp_33_fu_723_p2 : tmp_32_fu_715_p3);

assign tmp_35_fu_939_p1 = x_fu_922_p3;

assign tmp_36_fu_742_p2 = (tmp_4_reg_1499 - tmp_27_fu_644_p1);

assign tmp_37_fu_747_p3 = ((tmp_153_1_fu_639_p2[0:0] === 1'b1) ? tmp_27_fu_644_p1 : tmp_36_fu_742_p2);

assign tmp_38_fu_755_p2 = (tmp_18_fu_520_p1 ^ 2'd2);

assign tmp_3_fu_399_p3 = {{tmp_10_fu_395_p1}, {1'd0}};

assign tmp_42_fu_761_p3 = ((or_cond_i424_i_1_fu_611_p2[0:0] === 1'b1) ? tmp_38_fu_755_p2 : tmp_37_fu_747_p3);

assign tmp_43_fu_774_p2 = (tmp_4_reg_1499 - tmp_30_fu_706_p1);

assign tmp_44_fu_779_p3 = ((tmp_153_2_fu_701_p2[0:0] === 1'b1) ? tmp_30_fu_706_p1 : tmp_43_fu_774_p2);

assign tmp_45_fu_787_p2 = (2'd1 + tmp_18_fu_520_p1);

assign tmp_46_fu_793_p3 = ((or_cond_i424_i_2_fu_673_p2[0:0] === 1'b1) ? tmp_45_fu_787_p2 : tmp_44_fu_779_p3);

assign tmp_48_fu_817_p4 = {{t_V_2_reg_334[31:1]}};

assign tmp_49_fu_839_p3 = ImagLoc_x_fu_833_p2[32'd31];

assign tmp_4_fu_407_p2 = (tmp_3_fu_399_p3 ^ 2'd2);

assign tmp_50_fu_864_p3 = ImagLoc_x_fu_833_p2[32'd31];

assign tmp_53_fu_930_p1 = x_fu_922_p3[1:0];

assign tmp_54_fu_1207_p2 = (tmp_58_fu_1186_p1 + tmp_57_fu_1182_p1);

assign tmp_56_fu_1323_p4 = {{p_Val2_2_fu_1300_p2[11:8]}};

assign tmp_57_fu_1182_p1 = r_V_2_1_fu_1173_p2[7:0];

assign tmp_58_fu_1186_p1 = grp_fu_1380_p3[7:0];

assign tmp_5_fu_476_p2 = ((t_V_reg_323 < p_src_rows_V_read_cas_reg_1470) ? 1'b1 : 1'b0);

assign tmp_60_fu_1203_p1 = r_V_2_1_2_fu_1198_p2[7:0];

assign tmp_61_fu_1222_p1 = r_V_2_2_fu_1217_p2[7:0];

assign tmp_62_fu_1235_p1 = r_V_2_2_1_fu_1230_p2[7:0];

assign tmp_73_0_not_fu_481_p2 = (tmp_5_fu_476_p2 ^ 1'd1);

assign tmp_7_fu_381_p0 = p_src_rows_V_read;

assign tmp_7_fu_381_p1 = tmp_7_fu_381_p0[1:0];

assign tmp_8_fu_385_p0 = p_src_cols_V_read;

assign tmp_8_fu_385_p1 = tmp_8_fu_385_p0[1:0];

assign tmp_9_fu_853_p2 = (($signed(ImagLoc_x_fu_833_p2) < $signed(p_src_cols_V_read_cas_reg_1464)) ? 1'b1 : 1'b0);

assign tmp_9_not_fu_904_p2 = (tmp_9_fu_853_p2 ^ 1'd1);

assign tmp_cast_fu_363_p1 = $signed(tmp_s_fu_357_p2);

assign tmp_i_i_fu_1359_p2 = (overflow_fu_1345_p2 | isneg_fu_1306_p3);

assign tmp_s_fu_357_p2 = ($signed(12'd2) + $signed(p_src_cols_V_read_cas_1_fu_353_p1));

assign x_fu_922_p3 = ((sel_tmp8_fu_916_p2[0:0] === 1'b1) ? p_p2_i_i_fu_878_p3 : p_assign_3_fu_896_p3);

always @ (posedge ap_clk) begin
    OP2_V_1_2_cast_reg_1521[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1531[10:3] <= 8'b00000000;
    tmp_13_cast_reg_1536[0] <= 1'b0;
end

endmodule //Filter2D
