/*
 * algorithm_ARM.c
 *
 *  Created on: 2019Äê7ÔÂ17ÈÕ
 *      Author: Administrator
 */
#include"include.h"


//void get_img_grads(unsigned char *dstImg,unsigned char *srcImg,unsigned int img_h,unsigned int img_w)
void get_img_grads(float *dstImg,unsigned char *srcImg,unsigned int img_h,unsigned int img_w)
{
	//unsigned char Gx,Gy;
	float Gx,Gy;
	float tmp;



	for(int i=1;i<img_h -1;i++)
	{

		for(int j=1;j<img_w-1;j++)
		{
			if(srcImg[i*img_w + j - 1] > srcImg[i*img_w + j + 1 ])
			{
				Gx = srcImg[i*img_w  + j - 1] - srcImg[i*img_w  + j + 1];
			}
			else
			{
				Gx = srcImg[i*img_w  + j + 1 ] - srcImg[i*img_w  + j - 1];
			}

			if(srcImg[(i-1)*img_w + j] > srcImg[(i+1)*img_w + j])
			{
				Gy = srcImg[(i-1)*img_w + j] - srcImg[(i+1)*img_w + j];
			}
			else
			{
				Gy = srcImg[(i+1)*img_w + j] - srcImg[(i-1)*img_w + j];

			}

			tmp = powf(Gx,2) + powf(Gy,2);


			//dstImg[i*img_w + j] = ((Gx + Gy) > 255)?255:(Gx + Gy);
		    dstImg[i*img_w + j] = sqrtf(tmp);

		}


	}

	printf("\r\n-------------srcImg------------------\r\n ");
	for(int i=1;i<3;i++)
	{

		for(int j=0; j<img_w-1;j++)
		{
			printf("%x ",srcImg[i*img_w + j]);

		}
		printf("\r\n-------------------------------\r\n ");

	}

	printf("\r\n-------------dstImg------------------\r\n ");
	for(int i=1;i<3;i++)
	{

		for(int j=0; j<img_w-1;j++)
		{
			printf("%x ",dstImg[i*img_w + j]);

		}
		printf("\r\n-------------------------------\r\n ");

	}




}

void arm_caclu(void)
{

	XTime tEnd,tCur;
	u32 tUsed;
	//unsigned char *dstImg;
	float *dstImg;
	unsigned char *srcImg;
	unsigned int img_h;
	unsigned int img_w;

	dstImg = (unsigned char *)DATA_DST_ARM_ADDR;
	srcImg = (unsigned char *)DATA_SOURCE_ADDR;
	img_h = 480;
	img_w = 640;


	XTime_GetTime(&tCur);


	get_img_grads(dstImg,srcImg,img_h,img_w);
	//usleep(4096);

	XTime_GetTime(&tEnd);
	tUsed =((tEnd-tCur)*1000000)/(COUNTS_PER_SECOND);

	printf("time elapsed = %d us\r\n",tUsed);




}
