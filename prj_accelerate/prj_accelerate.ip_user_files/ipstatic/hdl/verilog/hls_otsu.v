// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_otsu (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_rows_V_dout,
        srcImg_rows_V_empty_n,
        srcImg_rows_V_read,
        srcImg_cols_V_dout,
        srcImg_cols_V_empty_n,
        srcImg_cols_V_read,
        srcImg_data_stream_V_dout,
        srcImg_data_stream_V_empty_n,
        srcImg_data_stream_V_read,
        dstImg_data_stream_V_din,
        dstImg_data_stream_V_full_n,
        dstImg_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 56'd1;
parameter    ap_ST_fsm_state2 = 56'd2;
parameter    ap_ST_fsm_state3 = 56'd4;
parameter    ap_ST_fsm_pp0_stage0 = 56'd8;
parameter    ap_ST_fsm_state8 = 56'd16;
parameter    ap_ST_fsm_state9 = 56'd32;
parameter    ap_ST_fsm_state10 = 56'd64;
parameter    ap_ST_fsm_state11 = 56'd128;
parameter    ap_ST_fsm_state12 = 56'd256;
parameter    ap_ST_fsm_state13 = 56'd512;
parameter    ap_ST_fsm_state14 = 56'd1024;
parameter    ap_ST_fsm_state15 = 56'd2048;
parameter    ap_ST_fsm_state16 = 56'd4096;
parameter    ap_ST_fsm_state17 = 56'd8192;
parameter    ap_ST_fsm_state18 = 56'd16384;
parameter    ap_ST_fsm_state19 = 56'd32768;
parameter    ap_ST_fsm_state20 = 56'd65536;
parameter    ap_ST_fsm_state21 = 56'd131072;
parameter    ap_ST_fsm_state22 = 56'd262144;
parameter    ap_ST_fsm_state23 = 56'd524288;
parameter    ap_ST_fsm_state24 = 56'd1048576;
parameter    ap_ST_fsm_state25 = 56'd2097152;
parameter    ap_ST_fsm_state26 = 56'd4194304;
parameter    ap_ST_fsm_state27 = 56'd8388608;
parameter    ap_ST_fsm_state28 = 56'd16777216;
parameter    ap_ST_fsm_state29 = 56'd33554432;
parameter    ap_ST_fsm_state30 = 56'd67108864;
parameter    ap_ST_fsm_state31 = 56'd134217728;
parameter    ap_ST_fsm_state32 = 56'd268435456;
parameter    ap_ST_fsm_state33 = 56'd536870912;
parameter    ap_ST_fsm_state34 = 56'd1073741824;
parameter    ap_ST_fsm_state35 = 56'd2147483648;
parameter    ap_ST_fsm_state36 = 56'd4294967296;
parameter    ap_ST_fsm_state37 = 56'd8589934592;
parameter    ap_ST_fsm_state38 = 56'd17179869184;
parameter    ap_ST_fsm_state39 = 56'd34359738368;
parameter    ap_ST_fsm_state40 = 56'd68719476736;
parameter    ap_ST_fsm_state41 = 56'd137438953472;
parameter    ap_ST_fsm_state42 = 56'd274877906944;
parameter    ap_ST_fsm_state43 = 56'd549755813888;
parameter    ap_ST_fsm_state44 = 56'd1099511627776;
parameter    ap_ST_fsm_state45 = 56'd2199023255552;
parameter    ap_ST_fsm_state46 = 56'd4398046511104;
parameter    ap_ST_fsm_state47 = 56'd8796093022208;
parameter    ap_ST_fsm_state48 = 56'd17592186044416;
parameter    ap_ST_fsm_state49 = 56'd35184372088832;
parameter    ap_ST_fsm_state50 = 56'd70368744177664;
parameter    ap_ST_fsm_state51 = 56'd140737488355328;
parameter    ap_ST_fsm_state52 = 56'd281474976710656;
parameter    ap_ST_fsm_state53 = 56'd562949953421312;
parameter    ap_ST_fsm_state54 = 56'd1125899906842624;
parameter    ap_ST_fsm_state55 = 56'd2251799813685248;
parameter    ap_ST_fsm_state56 = 56'd4503599627370496;
parameter    ap_ST_fsm_state57 = 56'd9007199254740992;
parameter    ap_ST_fsm_state58 = 56'd18014398509481984;
parameter    ap_ST_fsm_state59 = 56'd36028797018963968;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [9:0] srcImg_rows_V_dout;
input   srcImg_rows_V_empty_n;
output   srcImg_rows_V_read;
input  [10:0] srcImg_cols_V_dout;
input   srcImg_cols_V_empty_n;
output   srcImg_cols_V_read;
input  [7:0] srcImg_data_stream_V_dout;
input   srcImg_data_stream_V_empty_n;
output   srcImg_data_stream_V_read;
output  [7:0] dstImg_data_stream_V_din;
input   dstImg_data_stream_V_full_n;
output   dstImg_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_rows_V_read;
reg srcImg_cols_V_read;
reg srcImg_data_stream_V_read;
reg[7:0] dstImg_data_stream_V_din;
reg dstImg_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [55:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [7:0] threshold_V;
reg    srcImg_rows_V_blk_n;
reg    srcImg_cols_V_blk_n;
reg    srcImg_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_9_i_reg_1304;
reg    dstImg_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_9_i_reg_1304_pp0_iter1_reg;
reg   [0:0] tmp_i_14_reg_1323;
reg   [9:0] j_i_reg_364;
reg  signed [9:0] srcImg_rows_V_read_reg_1197;
reg    ap_block_state1;
reg  signed [10:0] srcImg_cols_V_read_reg_1203;
wire   [8:0] i_fu_428_p2;
wire    ap_CS_fsm_state2;
wire  signed [19:0] extLd12_cast_i_fu_439_p1;
reg  signed [19:0] extLd12_cast_i_reg_1285;
wire   [0:0] exitcond2_i_fu_422_p2;
wire  signed [19:0] extLd_cast_i_fu_442_p1;
reg  signed [19:0] extLd_cast_i_reg_1290;
wire   [0:0] tmp_8_i_fu_489_p2;
wire    ap_CS_fsm_state3;
wire   [8:0] i_1_fu_494_p2;
reg   [8:0] i_1_reg_1299;
wire   [0:0] tmp_9_i_fu_504_p2;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op130_write_state6;
reg    ap_predicate_op133_write_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_9_i_reg_1304_pp0_iter2_reg;
wire   [9:0] j_fu_509_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_2_reg_1313;
wire   [0:0] tmp_i_14_fu_519_p2;
reg   [7:0] addr_win_val_0_V_2_2_reg_1327;
wire   [0:0] tmp_51_i_fu_634_p2;
reg   [0:0] tmp_51_i_reg_1332;
wire   [0:0] tmp_49_1_i_fu_648_p2;
reg   [0:0] tmp_49_1_i_reg_1338;
wire   [0:0] tmp_51_2_i_fu_662_p2;
reg   [0:0] tmp_51_2_i_reg_1344;
wire   [0:0] tmp_34_i_fu_676_p2;
reg   [0:0] tmp_34_i_reg_1350;
wire   [0:0] icmp_fu_702_p2;
reg   [0:0] icmp_reg_1360;
wire   [0:0] sel_tmp5_fu_722_p2;
reg   [0:0] sel_tmp5_reg_1365;
wire   [1:0] m_fu_906_p2;
wire    ap_CS_fsm_state9;
wire  signed [19:0] total_pixs_V_fu_1183_p2;
reg  signed [19:0] total_pixs_V_reg_1392;
wire    ap_CS_fsm_state10;
wire   [8:0] i_2_fu_946_p2;
reg   [8:0] i_2_reg_1412;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_14_i_fu_952_p1;
reg   [63:0] tmp_14_i_reg_1417;
wire   [0:0] exitcond4_i_fu_940_p2;
wire   [18:0] hist_out_V_q0;
reg   [18:0] hist_out_V_load_reg_1440;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_15_i_fu_962_p2;
reg   [0:0] tmp_15_i_reg_1445;
wire   [27:0] front_grays_V_q0;
reg   [27:0] front_grays_V_load_reg_1449;
wire    ap_CS_fsm_state14;
wire   [25:0] tmp_13_i_fu_1012_p1;
reg   [25:0] tmp_13_i_reg_1454;
wire   [8:0] i_3_fu_1021_p2;
reg   [8:0] i_3_reg_1462;
wire    ap_CS_fsm_state15;
reg   [7:0] front_pixs_V_addr_2_reg_1467;
wire   [0:0] exitcond_i_fu_1015_p2;
reg   [27:0] p_Val2_3_reg_1477;
wire    ap_CS_fsm_state16;
wire   [27:0] black_grays_V_fu_1038_p2;
reg   [27:0] black_grays_V_reg_1482;
wire   [19:0] f_op_V_1_fu_1054_p3;
reg   [19:0] f_op_V_1_reg_1490;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [25:0] grp_fu_1086_p2;
reg   [25:0] r_V_5_reg_1520;
wire    ap_CS_fsm_state47;
wire   [33:0] grp_fu_1072_p2;
reg   [33:0] r_V_6_reg_1526;
wire    ap_CS_fsm_state54;
wire   [25:0] w1_V_fu_1108_p2;
reg   [25:0] w1_V_reg_1531;
wire    ap_CS_fsm_state55;
wire   [34:0] r_V_fu_1120_p2;
reg   [34:0] r_V_reg_1536;
wire  signed [51:0] tmp6_fu_1135_p2;
reg  signed [51:0] tmp6_reg_1541;
wire    ap_CS_fsm_state56;
wire  signed [51:0] tmp7_fu_1141_p2;
reg  signed [51:0] tmp7_reg_1546;
reg   [33:0] delta_temp_V_reg_1551;
wire    ap_CS_fsm_state58;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter2_state6;
reg    ap_enable_reg_pp0_iter3;
reg   [7:0] front_pixs_V_address0;
reg    front_pixs_V_ce0;
reg    front_pixs_V_we0;
reg   [19:0] front_pixs_V_d0;
wire   [19:0] front_pixs_V_q0;
reg   [7:0] front_grays_V_address0;
reg    front_grays_V_ce0;
reg    front_grays_V_we0;
reg   [27:0] front_grays_V_d0;
reg   [7:0] hist_out_V_address0;
reg    hist_out_V_ce0;
reg    hist_out_V_we0;
reg   [7:0] hist_out_V_address1;
reg    hist_out_V_ce1;
reg    hist_out_V_we1;
reg   [18:0] hist_out_V_d1;
reg   [8:0] i3_i_reg_342;
reg   [8:0] i4_i_reg_353;
wire    ap_CS_fsm_state8;
reg   [1:0] col_assign_reg_375;
wire   [0:0] exitcond3_i_fu_900_p2;
reg   [8:0] i_op_assign_reg_386;
wire    ap_CS_fsm_state13;
reg   [8:0] val_assign_reg_398;
wire    ap_CS_fsm_state59;
wire   [63:0] tmp_5_i_fu_434_p1;
wire   [63:0] tmp_35_i_fu_682_p1;
wire   [63:0] tmp_39_i_fu_871_p1;
wire   [63:0] tmp_2_i_fu_926_p1;
wire   [63:0] tmp_20_i_fu_1027_p1;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_1_fu_1169_p1;
wire   [0:0] tmp_32_i_fu_1164_p2;
reg   [18:0] hist_win_val_0_V_1_fu_160;
wire   [18:0] hist_win_val_0_V_1_3_fu_837_p3;
reg   [7:0] addr_win_val_0_V_1_fu_164;
wire   [7:0] addr_win_val_0_V_1_1_fu_668_p3;
reg   [7:0] addr_win_val_0_V_2_fu_168;
reg   [7:0] addr_win_val_0_V_1_2_fu_172;
wire   [7:0] addr_win_val_V_0_0_2_fu_735_p3;
reg   [7:0] addr_win_val_0_V_3_fu_176;
reg   [7:0] addr_last_V_fu_180;
reg   [18:0] hist_win_val_0_V_2_fu_184;
wire   [18:0] hist_win_val_0_V_1_2_fu_830_p3;
reg   [18:0] hist_win_val_0_V_1_4_fu_188;
wire   [18:0] hist_win_val_V_0_0_2_fu_864_p3;
reg   [18:0] hist_win_val_0_V_3_fu_192;
wire   [18:0] hist_win_val_0_V_2_2_fu_809_p3;
reg   [18:0] hist_win_val_0_V_3_4_fu_196;
wire   [18:0] hist_win_val_0_V_3_2_fu_789_p3;
reg   [27:0] front_grays_tmp_V_1_fu_200;
wire   [27:0] grp_fu_1187_p3;
reg   [19:0] front_pixs_tmp_V_1_fu_204;
wire   [19:0] front_pixs_tmp_V_fu_976_p2;
reg   [33:0] delta_max_V_fu_208;
wire   [18:0] hist_win_val_V_load_s_fu_931_p3;
wire   [19:0] tmp_16_i_fu_968_p1;
wire   [0:0] tmp_21_i_fu_1043_p2;
wire   [9:0] i4_cast_cast_i_fu_485_p1;
wire   [10:0] j_cast_cast_i_fu_500_p1;
wire   [0:0] tmp_28_i_fu_534_p2;
wire   [0:0] tmp_28_3_i_fu_549_p2;
wire   [0:0] tmp_4_fu_562_p2;
wire   [2:0] p_i_cast_fu_554_p3;
wire   [0:0] tmp_28_1_i_fu_539_p2;
wire   [0:0] sel_tmp1_fu_576_p2;
wire   [0:0] sel_tmp6_demorgan_fu_588_p2;
wire   [0:0] tmp_28_2_i_fu_544_p2;
wire   [0:0] sel_tmp6_fu_594_p2;
wire   [0:0] sel_tmp7_fu_600_p2;
wire   [0:0] sel_tmp2_fu_582_p2;
wire   [0:0] tmp_5_fu_614_p2;
wire   [2:0] sel_tmp3_cast_fu_606_p3;
wire   [2:0] sel_tmp_fu_568_p3;
wire   [2:0] p_6_i_fu_620_p3;
wire   [2:0] r_V_1_fu_628_p2;
wire   [7:0] addr_win_val_0_V_3_1_fu_640_p3;
wire   [7:0] addr_win_val_0_V_2_1_fu_654_p3;
wire   [1:0] tmp_fu_692_p4;
wire   [0:0] tmp_37_i_fu_686_p2;
wire   [0:0] sel_tmp4_fu_716_p2;
wire   [7:0] storemerge1_i_fu_708_p3;
wire   [7:0] sel_tmp8_fu_728_p3;
wire   [18:0] hist_win_val_0_V_3_1_fu_783_p2;
wire   [18:0] hist_win_val_0_V_2_1_fu_803_p2;
wire   [18:0] hist_win_val_0_V_3_3_fu_796_p3;
wire   [18:0] hist_win_val_0_V_1_1_fu_824_p2;
wire   [18:0] hist_win_val_0_V_2_3_fu_817_p3;
wire   [18:0] hist_win_val_0_V_0_fu_844_p2;
wire   [18:0] storemerge_i_fu_850_p3;
wire   [18:0] hist_last_V_fu_777_p2;
wire   [18:0] sel_tmp9_fu_857_p3;
wire   [0:0] cond_i_fu_912_p2;
wire   [7:0] addr_win_val_V_load_s_fu_918_p3;
wire   [0:0] tmp_22_i_fu_1049_p2;
(* use_dsp48 = "no" *) wire   [19:0] black_pixs_V_fu_1033_p2;
wire   [33:0] grp_fu_1072_p0;
wire   [19:0] grp_fu_1072_p1;
wire   [25:0] grp_fu_1086_p0;
wire   [19:0] grp_fu_1086_p1;
wire   [33:0] grp_fu_1102_p0;
wire   [19:0] grp_fu_1102_p1;
wire   [33:0] grp_fu_1102_p2;
wire   [34:0] tmp_29_i_fu_1113_p1;
wire   [34:0] tmp_30_i_fu_1117_p1;
wire  signed [34:0] tmp6_fu_1135_p0;
wire  signed [51:0] tmp_3_fu_1132_p1;
wire  signed [34:0] tmp6_fu_1135_p1;
wire   [25:0] tmp7_fu_1141_p0;
wire   [25:0] tmp7_fu_1141_p1;
wire    ap_CS_fsm_state57;
wire   [51:0] grp_fu_1147_p2;
wire  signed [10:0] total_pixs_V_fu_1183_p0;
wire  signed [9:0] total_pixs_V_fu_1183_p1;
wire   [18:0] grp_fu_1187_p0;
wire   [8:0] grp_fu_1187_p1;
reg    grp_fu_1072_ap_start;
wire    grp_fu_1072_ap_done;
reg    grp_fu_1086_ap_start;
wire    grp_fu_1086_ap_done;
reg    grp_fu_1102_ap_start;
wire    grp_fu_1102_ap_done;
reg   [55:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [33:0] grp_fu_1072_p10;
wire   [33:0] grp_fu_1102_p10;
wire   [27:0] grp_fu_1187_p00;
wire   [27:0] grp_fu_1187_p10;
wire   [51:0] tmp7_fu_1141_p00;
wire   [51:0] tmp7_fu_1141_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 56'd1;
#0 threshold_V = 8'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

hls_otsu_front_pibkb #(
    .DataWidth( 20 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
front_pixs_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(front_pixs_V_address0),
    .ce0(front_pixs_V_ce0),
    .we0(front_pixs_V_we0),
    .d0(front_pixs_V_d0),
    .q0(front_pixs_V_q0)
);

hls_otsu_front_grcud #(
    .DataWidth( 28 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
front_grays_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(front_grays_V_address0),
    .ce0(front_grays_V_ce0),
    .we0(front_grays_V_we0),
    .d0(front_grays_V_d0),
    .q0(front_grays_V_q0)
);

hls_otsu_hist_out_V #(
    .DataWidth( 19 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hist_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hist_out_V_address0),
    .ce0(hist_out_V_ce0),
    .we0(hist_out_V_we0),
    .d0(19'd0),
    .q0(hist_out_V_q0),
    .address1(hist_out_V_address1),
    .ce1(hist_out_V_ce1),
    .we1(hist_out_V_we1),
    .d1(hist_out_V_d1)
);

hls_ocr_udiv_34nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 34 ))
hls_ocr_udiv_34nsdEe_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1072_ap_start),
    .done(grp_fu_1072_ap_done),
    .din0(grp_fu_1072_p0),
    .din1(grp_fu_1072_p1),
    .ce(1'b1),
    .dout(grp_fu_1072_p2)
);

hls_ocr_udiv_26nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
hls_ocr_udiv_26nseOg_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1086_ap_start),
    .done(grp_fu_1086_ap_done),
    .din0(grp_fu_1086_p0),
    .din1(grp_fu_1086_p1),
    .ce(1'b1),
    .dout(grp_fu_1086_p2)
);

hls_ocr_udiv_34nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 34 ))
hls_ocr_udiv_34nsdEe_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1102_ap_start),
    .done(grp_fu_1102_ap_done),
    .din0(grp_fu_1102_p0),
    .din1(grp_fu_1102_p1),
    .ce(1'b1),
    .dout(grp_fu_1102_p2)
);

hls_ocr_mul_52s_5fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 52 ))
hls_ocr_mul_52s_5fYi_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp6_reg_1541),
    .din1(tmp7_reg_1546),
    .ce(1'b1),
    .dout(grp_fu_1147_p2)
);

hls_ocr_mul_mul_1g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
hls_ocr_mul_mul_1g8j_U19(
    .din0(total_pixs_V_fu_1183_p0),
    .din1(total_pixs_V_fu_1183_p1),
    .dout(total_pixs_V_fu_1183_p2)
);

hls_ocr_mac_muladhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
hls_ocr_mac_muladhbi_U20(
    .din0(grp_fu_1187_p0),
    .din1(grp_fu_1187_p1),
    .din2(front_grays_tmp_V_1_fu_200),
    .dout(grp_fu_1187_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_1015_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_fu_504_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state6)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state6))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        addr_last_V_fu_180 <= addr_win_val_0_V_3_fu_176;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        addr_last_V_fu_180 <= 8'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        addr_win_val_0_V_1_2_fu_172 <= addr_win_val_V_0_0_2_fu_735_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        addr_win_val_0_V_1_2_fu_172 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        addr_win_val_0_V_2_fu_168 <= addr_win_val_0_V_1_2_fu_172;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        addr_win_val_0_V_2_fu_168 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        addr_win_val_0_V_3_fu_176 <= addr_win_val_0_V_2_fu_168;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        addr_win_val_0_V_3_fu_176 <= 8'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd0))) begin
        col_assign_reg_375 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond3_i_fu_900_p2 == 1'd0))) begin
        col_assign_reg_375 <= m_fu_906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (tmp_32_i_fu_1164_p2 == 1'd1))) begin
        delta_max_V_fu_208 <= delta_temp_V_reg_1551;
    end else if (((1'b1 == ap_CS_fsm_state11) & (exitcond4_i_fu_940_p2 == 1'd1))) begin
        delta_max_V_fu_208 <= 34'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_15_i_reg_1445 == 1'd0))) begin
        front_grays_tmp_V_1_fu_200 <= grp_fu_1187_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1))) begin
        front_grays_tmp_V_1_fu_200 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((tmp_15_i_fu_962_p2 == 1'd1)) begin
            front_pixs_tmp_V_1_fu_204 <= 20'd0;
        end else if ((tmp_15_i_fu_962_p2 == 1'd0)) begin
            front_pixs_tmp_V_1_fu_204 <= front_pixs_tmp_V_fu_976_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1))) begin
        hist_win_val_0_V_1_4_fu_188 <= hist_win_val_V_0_0_2_fu_864_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        hist_win_val_0_V_1_4_fu_188 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1))) begin
        hist_win_val_0_V_2_fu_184 <= hist_win_val_0_V_1_2_fu_830_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        hist_win_val_0_V_2_fu_184 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1))) begin
        hist_win_val_0_V_3_4_fu_196 <= hist_win_val_0_V_3_2_fu_789_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        hist_win_val_0_V_3_4_fu_196 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1))) begin
        hist_win_val_0_V_3_fu_192 <= hist_win_val_0_V_2_2_fu_809_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        hist_win_val_0_V_3_fu_192 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i3_i_reg_342 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd0))) begin
        i3_i_reg_342 <= i_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i4_i_reg_353 <= i_1_reg_1299;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        i4_i_reg_353 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_op_assign_reg_386 <= i_2_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_op_assign_reg_386 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_fu_504_p2 == 1'd1))) begin
        j_i_reg_364 <= j_fu_509_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd1))) begin
        j_i_reg_364 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        val_assign_reg_398 <= i_3_reg_1462;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        val_assign_reg_398 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        addr_win_val_0_V_1_fu_164 <= addr_win_val_0_V_1_1_fu_668_p3;
        addr_win_val_0_V_2_2_reg_1327 <= addr_win_val_0_V_2_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        black_grays_V_reg_1482 <= black_grays_V_fu_1038_p2;
        f_op_V_1_reg_1490 <= f_op_V_1_fu_1054_p3;
        p_Val2_3_reg_1477 <= front_grays_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        delta_temp_V_reg_1551 <= {{grp_fu_1147_p2[51:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
        extLd12_cast_i_reg_1285 <= extLd12_cast_i_fu_439_p1;
        extLd_cast_i_reg_1290 <= extLd_cast_i_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        front_grays_V_load_reg_1449 <= front_grays_V_q0;
        tmp_13_i_reg_1454[19 : 0] <= tmp_13_i_fu_1012_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_1015_p2 == 1'd0))) begin
        front_pixs_V_addr_2_reg_1467 <= tmp_20_i_fu_1027_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        hist_out_V_load_reg_1440 <= hist_out_V_q0;
        tmp_15_i_reg_1445 <= tmp_15_i_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1))) begin
        hist_win_val_0_V_1_fu_160 <= hist_win_val_0_V_1_3_fu_837_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_1299 <= i_1_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_2_reg_1412 <= i_2_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_3_reg_1462 <= i_3_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1))) begin
        icmp_reg_1360 <= icmp_fu_702_p2;
        sel_tmp5_reg_1365 <= sel_tmp5_fu_722_p2;
        tmp_34_i_reg_1350 <= tmp_34_i_fu_676_p2;
        tmp_49_1_i_reg_1338 <= tmp_49_1_i_fu_648_p2;
        tmp_51_2_i_reg_1344 <= tmp_51_2_i_fu_662_p2;
        tmp_51_i_reg_1332 <= tmp_51_i_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        r_V_5_reg_1520 <= grp_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        r_V_6_reg_1526 <= grp_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        r_V_reg_1536 <= r_V_fu_1120_p2;
        w1_V_reg_1531 <= w1_V_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_read_reg_1203 <= srcImg_cols_V_dout;
        srcImg_rows_V_read_reg_1197 <= srcImg_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (tmp_32_i_fu_1164_p2 == 1'd1))) begin
        threshold_V <= tmp_1_fu_1169_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        tmp6_reg_1541 <= tmp6_fu_1135_p2;
        tmp7_reg_1546 <= tmp7_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond4_i_fu_940_p2 == 1'd0))) begin
        tmp_14_i_reg_1417[8 : 0] <= tmp_14_i_fu_952_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_reg_1304 == 1'd1))) begin
        tmp_2_reg_1313 <= srcImg_data_stream_V_dout;
        tmp_i_14_reg_1323 <= tmp_i_14_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_9_i_reg_1304 <= tmp_9_i_fu_504_p2;
        tmp_9_i_reg_1304_pp0_iter1_reg <= tmp_9_i_reg_1304;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_9_i_reg_1304_pp0_iter2_reg <= tmp_9_i_reg_1304_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        total_pixs_V_reg_1392 <= total_pixs_V_fu_1183_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_1015_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_i_14_reg_1323 == 1'd0) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_i_14_reg_1323 == 1'd1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        dstImg_data_stream_V_blk_n = dstImg_data_stream_V_full_n;
    end else begin
        dstImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op133_write_state6 == 1'b1)) begin
            dstImg_data_stream_V_din = 8'd0;
        end else if ((ap_predicate_op130_write_state6 == 1'b1)) begin
            dstImg_data_stream_V_din = 8'd255;
        end else begin
            dstImg_data_stream_V_din = 'bx;
        end
    end else begin
        dstImg_data_stream_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op133_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op130_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        dstImg_data_stream_V_write = 1'b1;
    end else begin
        dstImg_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        front_grays_V_address0 = tmp_20_i_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        front_grays_V_address0 = tmp_14_i_reg_1417;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        front_grays_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        front_grays_V_address0 = 64'd255;
    end else begin
        front_grays_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        front_grays_V_ce0 = 1'b1;
    end else begin
        front_grays_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        front_grays_V_d0 = grp_fu_1187_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        front_grays_V_d0 = 28'd0;
    end else begin
        front_grays_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (tmp_15_i_reg_1445 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1)))) begin
        front_grays_V_we0 = 1'b1;
    end else begin
        front_grays_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        front_pixs_V_address0 = front_pixs_V_addr_2_reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        front_pixs_V_address0 = tmp_20_i_fu_1027_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1))) begin
        front_pixs_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd0))) begin
        front_pixs_V_address0 = tmp_14_i_reg_1417;
    end else begin
        front_pixs_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd0)))) begin
        front_pixs_V_ce0 = 1'b1;
    end else begin
        front_pixs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        front_pixs_V_d0 = 20'd1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1))) begin
        front_pixs_V_d0 = tmp_16_i_fu_968_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd0))) begin
        front_pixs_V_d0 = front_pixs_tmp_V_fu_976_p2;
    end else begin
        front_pixs_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state16) & (tmp_21_i_fu_1043_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state12) & (tmp_15_i_fu_962_p2 == 1'd0)))) begin
        front_pixs_V_we0 = 1'b1;
    end else begin
        front_pixs_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1072_ap_start = 1'b1;
    end else begin
        grp_fu_1072_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1086_ap_start = 1'b1;
    end else begin
        grp_fu_1086_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1102_ap_start = 1'b1;
    end else begin
        grp_fu_1102_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hist_out_V_address0 = tmp_14_i_fu_952_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_address0 = tmp_35_i_fu_682_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_out_V_address0 = tmp_5_i_fu_434_p1;
    end else begin
        hist_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        hist_out_V_address1 = tmp_2_i_fu_926_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_address1 = tmp_39_i_fu_871_p1;
    end else begin
        hist_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        hist_out_V_ce0 = 1'b1;
    end else begin
        hist_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        hist_out_V_ce1 = 1'b1;
    end else begin
        hist_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        hist_out_V_d1 = hist_win_val_V_load_s_fu_931_p3;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_d1 = hist_win_val_0_V_2_2_fu_809_p3;
    end else begin
        hist_out_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd0))) begin
        hist_out_V_we0 = 1'b1;
    end else begin
        hist_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (exitcond3_i_fu_900_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_9_i_reg_1304_pp0_iter2_reg == 1'd1)))) begin
        hist_out_V_we1 = 1'b1;
    end else begin
        hist_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_1015_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_blk_n = srcImg_cols_V_empty_n;
    end else begin
        srcImg_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_read = 1'b1;
    end else begin
        srcImg_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_reg_1304 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        srcImg_data_stream_V_blk_n = srcImg_data_stream_V_empty_n;
    end else begin
        srcImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_reg_1304 == 1'd1))) begin
        srcImg_data_stream_V_read = 1'b1;
    end else begin
        srcImg_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_blk_n = srcImg_rows_V_empty_n;
    end else begin
        srcImg_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_read = 1'b1;
    end else begin
        srcImg_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_422_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_8_i_fu_489_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond3_i_fu_900_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond4_i_fu_940_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_1015_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addr_win_val_0_V_1_1_fu_668_p3 = ((tmp_51_2_i_fu_662_p2[0:0] === 1'b1) ? addr_win_val_0_V_1_2_fu_172 : addr_win_val_0_V_2_1_fu_654_p3);

assign addr_win_val_0_V_2_1_fu_654_p3 = ((tmp_49_1_i_fu_648_p2[0:0] === 1'b1) ? addr_win_val_0_V_2_fu_168 : addr_win_val_0_V_3_1_fu_640_p3);

assign addr_win_val_0_V_3_1_fu_640_p3 = ((tmp_51_i_fu_634_p2[0:0] === 1'b1) ? addr_win_val_0_V_3_fu_176 : addr_win_val_0_V_1_fu_164);

assign addr_win_val_V_0_0_2_fu_735_p3 = ((sel_tmp5_fu_722_p2[0:0] === 1'b1) ? addr_last_V_fu_180 : sel_tmp8_fu_728_p3);

assign addr_win_val_V_load_s_fu_918_p3 = ((cond_i_fu_912_p2[0:0] === 1'b1) ? addr_win_val_0_V_1_2_fu_172 : addr_win_val_0_V_2_fu_168);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op133_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)) | ((ap_predicate_op130_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)))) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_reg_1304 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op133_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)) | ((ap_predicate_op130_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)))) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_reg_1304 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op133_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)) | ((ap_predicate_op130_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)))) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_reg_1304 == 1'd1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((srcImg_data_stream_V_empty_n == 1'b0) & (tmp_9_i_reg_1304 == 1'd1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((ap_predicate_op133_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)) | ((ap_predicate_op130_write_state6 == 1'b1) & (dstImg_data_stream_V_full_n == 1'b0)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op130_write_state6 = ((tmp_i_14_reg_1323 == 1'd0) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op133_write_state6 = ((tmp_i_14_reg_1323 == 1'd1) & (tmp_9_i_reg_1304_pp0_iter1_reg == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign black_grays_V_fu_1038_p2 = (front_grays_V_load_reg_1449 - front_grays_V_q0);

assign black_pixs_V_fu_1033_p2 = ($signed(total_pixs_V_reg_1392) - $signed(front_pixs_V_q0));

assign cond_i_fu_912_p2 = ((col_assign_reg_375 == 2'd0) ? 1'b1 : 1'b0);

assign exitcond2_i_fu_422_p2 = ((i3_i_reg_342 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond3_i_fu_900_p2 = ((col_assign_reg_375 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_940_p2 = ((i_op_assign_reg_386 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1015_p2 = ((val_assign_reg_398 == 9'd256) ? 1'b1 : 1'b0);

assign extLd12_cast_i_fu_439_p1 = srcImg_cols_V_read_reg_1203;

assign extLd_cast_i_fu_442_p1 = srcImg_rows_V_read_reg_1197;

assign f_op_V_1_fu_1054_p3 = ((tmp_22_i_fu_1049_p2[0:0] === 1'b1) ? 20'd1 : black_pixs_V_fu_1033_p2);

assign front_pixs_tmp_V_fu_976_p2 = (front_pixs_tmp_V_1_fu_204 + tmp_16_i_fu_968_p1);

assign grp_fu_1072_p0 = {{black_grays_V_reg_1482}, {6'd0}};

assign grp_fu_1072_p1 = grp_fu_1072_p10;

assign grp_fu_1072_p10 = f_op_V_1_reg_1490;

assign grp_fu_1086_p0 = {{front_pixs_V_q0}, {6'd0}};

assign grp_fu_1086_p1 = tmp_13_i_reg_1454;

assign grp_fu_1102_p0 = {{p_Val2_3_reg_1477}, {6'd0}};

assign grp_fu_1102_p1 = grp_fu_1102_p10;

assign grp_fu_1102_p10 = front_pixs_V_q0;

assign grp_fu_1187_p0 = grp_fu_1187_p00;

assign grp_fu_1187_p00 = hist_out_V_load_reg_1440;

assign grp_fu_1187_p1 = grp_fu_1187_p10;

assign grp_fu_1187_p10 = i_op_assign_reg_386;

assign hist_last_V_fu_777_p2 = (hist_win_val_0_V_3_4_fu_196 + 19'd1);

assign hist_win_val_0_V_0_fu_844_p2 = (hist_out_V_q0 + 19'd1);

assign hist_win_val_0_V_1_1_fu_824_p2 = (hist_win_val_0_V_1_4_fu_188 + 19'd1);

assign hist_win_val_0_V_1_2_fu_830_p3 = ((tmp_51_2_i_reg_1344[0:0] === 1'b1) ? hist_win_val_0_V_1_1_fu_824_p2 : hist_win_val_0_V_1_4_fu_188);

assign hist_win_val_0_V_1_3_fu_837_p3 = ((tmp_51_2_i_reg_1344[0:0] === 1'b1) ? hist_win_val_0_V_1_1_fu_824_p2 : hist_win_val_0_V_2_3_fu_817_p3);

assign hist_win_val_0_V_2_1_fu_803_p2 = (hist_win_val_0_V_2_fu_184 + 19'd1);

assign hist_win_val_0_V_2_2_fu_809_p3 = ((tmp_49_1_i_reg_1338[0:0] === 1'b1) ? hist_win_val_0_V_2_1_fu_803_p2 : hist_win_val_0_V_2_fu_184);

assign hist_win_val_0_V_2_3_fu_817_p3 = ((tmp_49_1_i_reg_1338[0:0] === 1'b1) ? hist_win_val_0_V_2_1_fu_803_p2 : hist_win_val_0_V_3_3_fu_796_p3);

assign hist_win_val_0_V_3_1_fu_783_p2 = (hist_win_val_0_V_3_fu_192 + 19'd1);

assign hist_win_val_0_V_3_2_fu_789_p3 = ((tmp_51_i_reg_1332[0:0] === 1'b1) ? hist_win_val_0_V_3_1_fu_783_p2 : hist_win_val_0_V_3_fu_192);

assign hist_win_val_0_V_3_3_fu_796_p3 = ((tmp_51_i_reg_1332[0:0] === 1'b1) ? hist_win_val_0_V_3_1_fu_783_p2 : hist_win_val_0_V_1_fu_160);

assign hist_win_val_V_0_0_2_fu_864_p3 = ((sel_tmp5_reg_1365[0:0] === 1'b1) ? hist_last_V_fu_777_p2 : sel_tmp9_fu_857_p3);

assign hist_win_val_V_load_s_fu_931_p3 = ((cond_i_fu_912_p2[0:0] === 1'b1) ? hist_win_val_0_V_1_4_fu_188 : hist_win_val_0_V_2_fu_184);

assign i4_cast_cast_i_fu_485_p1 = i4_i_reg_353;

assign i_1_fu_494_p2 = (i4_i_reg_353 + 9'd1);

assign i_2_fu_946_p2 = (i_op_assign_reg_386 + 9'd1);

assign i_3_fu_1021_p2 = (val_assign_reg_398 + 9'd1);

assign i_fu_428_p2 = (i3_i_reg_342 + 9'd1);

assign icmp_fu_702_p2 = ((tmp_fu_692_p4 != 2'd0) ? 1'b1 : 1'b0);

assign j_cast_cast_i_fu_500_p1 = j_i_reg_364;

assign j_fu_509_p2 = (j_i_reg_364 + 10'd1);

assign m_fu_906_p2 = (col_assign_reg_375 + 2'd1);

assign p_6_i_fu_620_p3 = ((tmp_5_fu_614_p2[0:0] === 1'b1) ? sel_tmp3_cast_fu_606_p3 : sel_tmp_fu_568_p3);

assign p_i_cast_fu_554_p3 = ((tmp_28_i_fu_534_p2[0:0] === 1'b1) ? 3'd0 : 3'd3);

assign r_V_1_fu_628_p2 = (p_6_i_fu_620_p3 + 3'd1);

assign r_V_fu_1120_p2 = (tmp_29_i_fu_1113_p1 - tmp_30_i_fu_1117_p1);

assign sel_tmp1_fu_576_p2 = (tmp_28_i_fu_534_p2 ^ 1'd1);

assign sel_tmp2_fu_582_p2 = (tmp_28_1_i_fu_539_p2 & sel_tmp1_fu_576_p2);

assign sel_tmp3_cast_fu_606_p3 = ((sel_tmp7_fu_600_p2[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign sel_tmp4_fu_716_p2 = (tmp_34_i_fu_676_p2 ^ 1'd1);

assign sel_tmp5_fu_722_p2 = (tmp_37_i_fu_686_p2 & sel_tmp4_fu_716_p2);

assign sel_tmp6_demorgan_fu_588_p2 = (tmp_28_i_fu_534_p2 | tmp_28_1_i_fu_539_p2);

assign sel_tmp6_fu_594_p2 = (sel_tmp6_demorgan_fu_588_p2 ^ 1'd1);

assign sel_tmp7_fu_600_p2 = (tmp_28_2_i_fu_544_p2 & sel_tmp6_fu_594_p2);

assign sel_tmp8_fu_728_p3 = ((tmp_34_i_fu_676_p2[0:0] === 1'b1) ? tmp_2_reg_1313 : storemerge1_i_fu_708_p3);

assign sel_tmp9_fu_857_p3 = ((tmp_34_i_reg_1350[0:0] === 1'b1) ? hist_win_val_0_V_0_fu_844_p2 : storemerge_i_fu_850_p3);

assign sel_tmp_fu_568_p3 = ((tmp_4_fu_562_p2[0:0] === 1'b1) ? p_i_cast_fu_554_p3 : 3'd4);

assign start_out = real_start;

assign storemerge1_i_fu_708_p3 = ((icmp_fu_702_p2[0:0] === 1'b1) ? addr_win_val_0_V_1_1_fu_668_p3 : addr_win_val_0_V_2_fu_168);

assign storemerge_i_fu_850_p3 = ((icmp_reg_1360[0:0] === 1'b1) ? hist_win_val_0_V_1_3_fu_837_p3 : hist_win_val_0_V_2_2_fu_809_p3);

assign tmp6_fu_1135_p0 = tmp_3_fu_1132_p1;

assign tmp6_fu_1135_p1 = tmp_3_fu_1132_p1;

assign tmp6_fu_1135_p2 = ($signed(tmp6_fu_1135_p0) * $signed(tmp6_fu_1135_p1));

assign tmp7_fu_1141_p0 = tmp7_fu_1141_p00;

assign tmp7_fu_1141_p00 = w1_V_reg_1531;

assign tmp7_fu_1141_p1 = tmp7_fu_1141_p10;

assign tmp7_fu_1141_p10 = r_V_5_reg_1520;

assign tmp7_fu_1141_p2 = (tmp7_fu_1141_p0 * tmp7_fu_1141_p1);

assign tmp_13_i_fu_1012_p1 = $unsigned(total_pixs_V_reg_1392);

assign tmp_14_i_fu_952_p1 = i_op_assign_reg_386;

assign tmp_15_i_fu_962_p2 = ((i_op_assign_reg_386 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_16_i_fu_968_p1 = hist_out_V_q0;

assign tmp_1_fu_1169_p1 = val_assign_reg_398[7:0];

assign tmp_20_i_fu_1027_p1 = val_assign_reg_398;

assign tmp_21_i_fu_1043_p2 = ((front_pixs_V_q0 == 20'd0) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_1049_p2 = ((total_pixs_V_reg_1392 == front_pixs_V_q0) ? 1'b1 : 1'b0);

assign tmp_28_1_i_fu_539_p2 = ((tmp_2_reg_1313 == addr_win_val_0_V_2_fu_168) ? 1'b1 : 1'b0);

assign tmp_28_2_i_fu_544_p2 = ((tmp_2_reg_1313 == addr_win_val_0_V_3_fu_176) ? 1'b1 : 1'b0);

assign tmp_28_3_i_fu_549_p2 = ((tmp_2_reg_1313 == addr_last_V_fu_180) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_534_p2 = ((tmp_2_reg_1313 == addr_win_val_0_V_1_2_fu_172) ? 1'b1 : 1'b0);

assign tmp_29_i_fu_1113_p1 = grp_fu_1102_p2;

assign tmp_2_i_fu_926_p1 = addr_win_val_V_load_s_fu_918_p3;

assign tmp_30_i_fu_1117_p1 = r_V_6_reg_1526;

assign tmp_32_i_fu_1164_p2 = ((delta_temp_V_reg_1551 > delta_max_V_fu_208) ? 1'b1 : 1'b0);

assign tmp_34_i_fu_676_p2 = ((p_6_i_fu_620_p3 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_35_i_fu_682_p1 = tmp_2_reg_1313;

assign tmp_37_i_fu_686_p2 = ((p_6_i_fu_620_p3 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_39_i_fu_871_p1 = addr_win_val_0_V_2_2_reg_1327;

assign tmp_3_fu_1132_p1 = $signed(r_V_reg_1536);

assign tmp_49_1_i_fu_648_p2 = ((r_V_1_fu_628_p2 == 3'd2) ? 1'b1 : 1'b0);

assign tmp_4_fu_562_p2 = (tmp_28_i_fu_534_p2 | tmp_28_3_i_fu_549_p2);

assign tmp_51_2_i_fu_662_p2 = ((p_6_i_fu_620_p3 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_51_i_fu_634_p2 = ((r_V_1_fu_628_p2 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_5_fu_614_p2 = (sel_tmp7_fu_600_p2 | sel_tmp2_fu_582_p2);

assign tmp_5_i_fu_434_p1 = i3_i_reg_342;

assign tmp_8_i_fu_489_p2 = (($signed(i4_cast_cast_i_fu_485_p1) < $signed(srcImg_rows_V_read_reg_1197)) ? 1'b1 : 1'b0);

assign tmp_9_i_fu_504_p2 = (($signed(j_cast_cast_i_fu_500_p1) < $signed(srcImg_cols_V_read_reg_1203)) ? 1'b1 : 1'b0);

assign tmp_fu_692_p4 = {{p_6_i_fu_620_p3[2:1]}};

assign tmp_i_14_fu_519_p2 = ((srcImg_data_stream_V_dout > threshold_V) ? 1'b1 : 1'b0);

assign total_pixs_V_fu_1183_p0 = extLd12_cast_i_reg_1285;

assign total_pixs_V_fu_1183_p1 = extLd_cast_i_reg_1290;

assign w1_V_fu_1108_p2 = (26'd64 - r_V_5_reg_1520);

always @ (posedge ap_clk) begin
    tmp_14_i_reg_1417[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_i_reg_1454[25:20] <= 6'b000000;
end

endmodule //hls_otsu
