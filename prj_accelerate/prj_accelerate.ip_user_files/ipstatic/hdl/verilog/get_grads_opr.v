// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_grads_opr (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_rows_V_dout,
        srcImg_rows_V_empty_n,
        srcImg_rows_V_read,
        srcImg_cols_V_dout,
        srcImg_cols_V_empty_n,
        srcImg_cols_V_read,
        srcImg_data_stream_V_dout,
        srcImg_data_stream_V_empty_n,
        srcImg_data_stream_V_read,
        dstImg_data_stream_V_din,
        dstImg_data_stream_V_full_n,
        dstImg_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [9:0] srcImg_rows_V_dout;
input   srcImg_rows_V_empty_n;
output   srcImg_rows_V_read;
input  [10:0] srcImg_cols_V_dout;
input   srcImg_cols_V_empty_n;
output   srcImg_cols_V_read;
input  [7:0] srcImg_data_stream_V_dout;
input   srcImg_data_stream_V_empty_n;
output   srcImg_data_stream_V_read;
output  [7:0] dstImg_data_stream_V_din;
input   dstImg_data_stream_V_full_n;
output   dstImg_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_rows_V_read;
reg srcImg_cols_V_read;
reg srcImg_data_stream_V_read;
reg dstImg_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    srcImg_rows_V_blk_n;
reg    srcImg_cols_V_blk_n;
reg    srcImg_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_795;
reg   [0:0] brmerge_i_reg_816;
reg    dstImg_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] or_cond_i_reg_843;
reg   [0:0] or_cond_i_reg_843_pp0_iter2_reg;
reg   [24:0] indvar_flatten_reg_255;
reg   [12:0] y_i_reg_267;
reg   [12:0] x_i_reg_278;
reg   [9:0] srcImg_rows_V_read_reg_763;
reg    ap_block_state1;
reg   [10:0] srcImg_cols_V_read_reg_768;
wire   [12:0] tmp_cast_i_fu_298_p1;
reg   [12:0] tmp_cast_i_reg_773;
wire    ap_CS_fsm_state2;
wire   [12:0] tmp_cast_i_15_fu_302_p1;
reg   [12:0] tmp_cast_i_15_reg_779;
wire   [12:0] tmp_5_fu_306_p2;
reg   [12:0] tmp_5_reg_785;
wire   [25:0] grp_fu_731_p3;
reg   [25:0] bound_reg_790;
wire   [0:0] exitcond_flatten_fu_320_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_795_pp0_iter1_reg;
wire   [12:0] x_i_mid2_fu_330_p3;
reg   [12:0] x_i_mid2_reg_799;
wire   [0:0] notrhs_i_mid2_fu_426_p3;
reg   [0:0] notrhs_i_mid2_reg_806;
reg   [0:0] notrhs_i_mid2_reg_806_pp0_iter1_reg;
reg   [0:0] notrhs_i_mid2_reg_806_pp0_iter2_reg;
wire   [12:0] y_i_mid2_fu_434_p3;
reg   [12:0] y_i_mid2_reg_811;
wire   [0:0] brmerge_i_fu_453_p2;
reg   [0:0] brmerge_i_reg_816_pp0_iter1_reg;
reg   [0:0] brmerge_i_reg_816_pp0_iter2_reg;
wire   [63:0] tmp_6_i_fu_459_p1;
reg   [63:0] tmp_6_i_reg_821;
reg   [9:0] line_buffer_val_1_a_reg_826;
reg   [9:0] line_buffer_val_2_a_reg_831;
wire   [0:0] tmp_5_i_fu_465_p2;
reg   [0:0] tmp_5_i_reg_836;
reg   [0:0] tmp_5_i_reg_836_pp0_iter1_reg;
reg   [0:0] tmp_5_i_reg_836_pp0_iter2_reg;
wire   [0:0] or_cond_i_fu_476_p2;
reg   [0:0] or_cond_i_reg_843_pp0_iter1_reg;
wire   [24:0] indvar_flatten_next_fu_482_p2;
reg   [24:0] indvar_flatten_next_reg_847;
reg    ap_predicate_op77_read_state4;
reg    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_state8_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
wire   [12:0] x_fu_488_p2;
reg   [12:0] x_reg_852;
reg   [7:0] window_val_1_1_1_i_l_reg_857;
wire   [63:0] tmp_7_i_fu_501_p1;
reg   [63:0] tmp_7_i_reg_862;
wire   [0:0] icmp3_fu_514_p2;
reg   [0:0] icmp3_reg_873;
reg   [0:0] icmp3_reg_873_pp0_iter2_reg;
wire  signed [8:0] gx_fu_534_p2;
reg  signed [8:0] gx_reg_883;
reg   [0:0] tmp_4_reg_889;
reg   [7:0] window_val_2_2_2_l_reg_894;
wire   [0:0] icmp_fu_673_p2;
reg   [0:0] icmp_reg_904;
wire   [7:0] tmp_22_i_fu_679_p2;
reg   [7:0] tmp_22_i_reg_909;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter1_state5;
wire   [9:0] line_buffer_val_0_address0;
reg    line_buffer_val_0_ce0;
reg    line_buffer_val_0_we0;
wire   [9:0] line_buffer_val_0_address1;
reg    line_buffer_val_0_ce1;
wire   [7:0] line_buffer_val_0_q1;
reg   [9:0] line_buffer_val_1_address0;
reg    line_buffer_val_1_ce0;
reg    line_buffer_val_1_we0;
wire   [7:0] line_buffer_val_1_q0;
wire   [9:0] line_buffer_val_1_address1;
reg    line_buffer_val_1_ce1;
wire   [7:0] line_buffer_val_1_q1;
reg   [9:0] line_buffer_val_2_address0;
reg    line_buffer_val_2_ce0;
reg    line_buffer_val_2_we0;
wire   [7:0] line_buffer_val_2_q0;
wire   [9:0] line_buffer_val_2_address1;
reg    line_buffer_val_2_ce1;
wire   [7:0] line_buffer_val_2_q1;
reg   [24:0] ap_phi_mux_indvar_flatten_phi_fu_259_p4;
wire    ap_block_pp0_stage0;
reg   [12:0] ap_phi_mux_y_i_phi_fu_271_p4;
reg   [12:0] ap_phi_mux_x_i_phi_fu_282_p4;
reg    ap_block_pp0_stage1_01001;
reg   [7:0] window_val_0_2_2_fu_136;
wire   [7:0] window_val_0_2_1_fu_559_p3;
reg   [7:0] window_val_1_1_1_i_fu_140;
reg   [7:0] window_val_1_1_fu_144;
wire   [7:0] window_val_1_2_1_fu_520_p3;
reg   [7:0] window_val_2_2_2_fu_148;
wire   [7:0] window_val_2_2_1_fu_690_p3;
wire  signed [11:0] rows_V_fu_292_p1;
wire  signed [11:0] cols_V_fu_295_p1;
wire   [25:0] indvar_flatten_cast_fu_316_p1;
wire   [0:0] exitcond_fu_325_p2;
wire   [12:0] y_fu_338_p2;
wire   [0:0] tmp_3_i_mid1_fu_344_p2;
wire   [0:0] tmp_3_i_fu_350_p2;
wire   [0:0] ult_fu_364_p2;
wire   [0:0] ult1_fu_375_p2;
wire   [0:0] rev_fu_369_p2;
wire   [0:0] rev1_fu_380_p2;
wire   [11:0] tmp_fu_394_p4;
wire   [11:0] tmp_1_fu_410_p4;
wire   [0:0] icmp1_fu_404_p2;
wire   [0:0] icmp2_fu_420_p2;
wire   [0:0] ult2_fu_442_p2;
wire   [0:0] rev2_fu_447_p2;
wire   [0:0] p_not1_i_mid2_fu_386_p3;
wire   [0:0] tmp_24_i_fu_470_p2;
wire   [0:0] tmp_3_i_mid2_fu_356_p3;
wire   [11:0] tmp_12_fu_505_p4;
wire   [8:0] tmp_12_cast_i_fu_527_p1;
wire   [8:0] tmp_13_cast_i_fu_530_p1;
wire   [8:0] tmp_14_cast_i_fu_569_p1;
wire   [8:0] tmp_15_cast_i_fu_573_p1;
wire  signed [8:0] gy_fu_577_p2;
wire   [8:0] xs_V_3_fu_587_p2;
wire  signed [15:0] xs_V_1_i_i_cast_i_fu_592_p1;
reg   [15:0] p_Result_s_fu_596_p4;
wire  signed [15:0] gx_cast_i_fu_566_p1;
wire   [8:0] xs_V_4_fu_613_p2;
wire  signed [15:0] xs_V_1_i_i8_cast_i_fu_619_p1;
wire   [0:0] tmp_7_fu_633_p3;
reg   [15:0] p_Result_1_fu_623_p4;
wire  signed [15:0] gy_cast_i_fu_583_p1;
wire   [15:0] agg_result_V_i_i11_i_fu_641_p3;
wire   [15:0] agg_result_V_i_i_i_fu_606_p3;
wire   [15:0] Temp_fu_657_p2;
wire   [7:0] tmp_11_fu_663_p4;
wire   [7:0] tmp_10_fu_653_p1;
wire   [7:0] tmp_9_fu_649_p1;
wire   [0:0] brmerge1_i_fu_696_p2;
wire   [0:0] sel_tmp_fu_706_p2;
wire   [0:0] sel_tmp1_fu_712_p2;
wire   [7:0] tmp_23_i_fu_700_p3;
wire   [11:0] grp_fu_731_p0;
wire   [0:0] grp_fu_731_p1;
wire   [12:0] grp_fu_731_p2;
wire    ap_CS_fsm_state9;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [12:0] grp_fu_731_p00;
wire   [25:0] grp_fu_731_p20;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

get_grads_opr_linbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_val_0_address0),
    .ce0(line_buffer_val_0_ce0),
    .we0(line_buffer_val_0_we0),
    .d0(line_buffer_val_1_q0),
    .address1(line_buffer_val_0_address1),
    .ce1(line_buffer_val_0_ce1),
    .q1(line_buffer_val_0_q1)
);

get_grads_opr_lincud #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_val_1_address0),
    .ce0(line_buffer_val_1_ce0),
    .we0(line_buffer_val_1_we0),
    .d0(line_buffer_val_2_q0),
    .q0(line_buffer_val_1_q0),
    .address1(line_buffer_val_1_address1),
    .ce1(line_buffer_val_1_ce1),
    .q1(line_buffer_val_1_q1)
);

get_grads_opr_lincud #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_val_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_val_2_address0),
    .ce0(line_buffer_val_2_ce0),
    .we0(line_buffer_val_2_we0),
    .d0(srcImg_data_stream_V_dout),
    .q0(line_buffer_val_2_q0),
    .address1(line_buffer_val_2_address1),
    .ce1(line_buffer_val_2_ce1),
    .q1(line_buffer_val_2_q1)
);

img_get_grads_am_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
img_get_grads_am_eOg_U15(
    .din0(grp_fu_731_p0),
    .din1(grp_fu_731_p1),
    .din2(grp_fu_731_p2),
    .dout(grp_fu_731_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_795 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state5)) begin
                ap_enable_reg_pp0_iter1 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter1_state5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_255 <= indvar_flatten_next_reg_847;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_255 <= 25'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_i_reg_278 <= x_reg_852;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_i_reg_278 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_i_reg_267 <= y_i_mid2_reg_811;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_i_reg_267 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_790 <= grp_fu_731_p3;
        tmp_5_reg_785 <= tmp_5_fu_306_p2;
        tmp_cast_i_15_reg_779[11 : 0] <= tmp_cast_i_15_fu_302_p1[11 : 0];
        tmp_cast_i_reg_773[11 : 0] <= tmp_cast_i_fu_298_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_816 <= brmerge_i_fu_453_p2;
        notrhs_i_mid2_reg_806 <= notrhs_i_mid2_fu_426_p3;
        or_cond_i_reg_843 <= or_cond_i_fu_476_p2;
        tmp_5_i_reg_836 <= tmp_5_i_fu_465_p2;
        x_i_mid2_reg_799 <= x_i_mid2_fu_330_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_816_pp0_iter1_reg <= brmerge_i_reg_816;
        brmerge_i_reg_816_pp0_iter2_reg <= brmerge_i_reg_816_pp0_iter1_reg;
        exitcond_flatten_reg_795 <= exitcond_flatten_fu_320_p2;
        exitcond_flatten_reg_795_pp0_iter1_reg <= exitcond_flatten_reg_795;
        icmp3_reg_873_pp0_iter2_reg <= icmp3_reg_873;
        icmp_reg_904 <= icmp_fu_673_p2;
        notrhs_i_mid2_reg_806_pp0_iter1_reg <= notrhs_i_mid2_reg_806;
        notrhs_i_mid2_reg_806_pp0_iter2_reg <= notrhs_i_mid2_reg_806_pp0_iter1_reg;
        or_cond_i_reg_843_pp0_iter1_reg <= or_cond_i_reg_843;
        or_cond_i_reg_843_pp0_iter2_reg <= or_cond_i_reg_843_pp0_iter1_reg;
        tmp_22_i_reg_909 <= tmp_22_i_fu_679_p2;
        tmp_5_i_reg_836_pp0_iter1_reg <= tmp_5_i_reg_836;
        tmp_5_i_reg_836_pp0_iter2_reg <= tmp_5_i_reg_836_pp0_iter1_reg;
        window_val_1_1_1_i_l_reg_857 <= window_val_1_1_1_i_fu_140;
        window_val_2_2_2_l_reg_894 <= window_val_2_2_2_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gx_reg_883 <= gx_fu_534_p2;
        tmp_4_reg_889 <= gx_fu_534_p2[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp3_reg_873 <= icmp3_fu_514_p2;
        tmp_7_i_reg_862[12 : 0] <= tmp_7_i_fu_501_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten_next_reg_847 <= indvar_flatten_next_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_i_fu_453_p2 == 1'd0) & (exitcond_flatten_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_val_1_a_reg_826 <= tmp_6_i_fu_459_p1;
        line_buffer_val_2_a_reg_831 <= tmp_6_i_fu_459_p1;
        tmp_6_i_reg_821[12 : 0] <= tmp_6_i_fu_459_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_read_reg_768 <= srcImg_cols_V_dout;
        srcImg_rows_V_read_reg_763 <= srcImg_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_0_2_2_fu_136 <= window_val_0_2_1_fu_559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_1_1_1_i_fu_140 <= window_val_1_1_fu_144;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        window_val_1_1_fu_144 <= window_val_1_2_1_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        window_val_2_2_2_fu_148 <= window_val_2_2_1_fu_690_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        x_reg_852 <= x_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_320_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_i_mid2_reg_811 <= y_i_mid2_fu_434_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_259_p4 = indvar_flatten_next_reg_847;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_259_p4 = indvar_flatten_reg_255;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_i_phi_fu_282_p4 = x_reg_852;
    end else begin
        ap_phi_mux_x_i_phi_fu_282_p4 = x_i_reg_278;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_y_i_phi_fu_271_p4 = y_i_mid2_reg_811;
    end else begin
        ap_phi_mux_y_i_phi_fu_271_p4 = y_i_reg_267;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dstImg_data_stream_V_blk_n = dstImg_data_stream_V_full_n;
    end else begin
        dstImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        dstImg_data_stream_V_write = 1'b1;
    end else begin
        dstImg_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buffer_val_0_ce0 = 1'b1;
    end else begin
        line_buffer_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buffer_val_0_ce1 = 1'b1;
    end else begin
        line_buffer_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op77_read_state4 == 1'b1))) begin
        line_buffer_val_0_we0 = 1'b1;
    end else begin
        line_buffer_val_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_val_1_address0 = line_buffer_val_1_a_reg_826;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_val_1_address0 = tmp_6_i_fu_459_p1;
        end else begin
            line_buffer_val_1_address0 = 'bx;
        end
    end else begin
        line_buffer_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buffer_val_1_ce0 = 1'b1;
    end else begin
        line_buffer_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_val_1_ce1 = 1'b1;
    end else begin
        line_buffer_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op77_read_state4 == 1'b1))) begin
        line_buffer_val_1_we0 = 1'b1;
    end else begin
        line_buffer_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_val_2_address0 = line_buffer_val_2_a_reg_831;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_val_2_address0 = tmp_6_i_fu_459_p1;
        end else begin
            line_buffer_val_2_address0 = 'bx;
        end
    end else begin
        line_buffer_val_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buffer_val_2_ce0 = 1'b1;
    end else begin
        line_buffer_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_val_2_ce1 = 1'b1;
    end else begin
        line_buffer_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op77_read_state4 == 1'b1))) begin
        line_buffer_val_2_we0 = 1'b1;
    end else begin
        line_buffer_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_blk_n = srcImg_cols_V_empty_n;
    end else begin
        srcImg_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_read = 1'b1;
    end else begin
        srcImg_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_i_reg_816 == 1'd0) & (exitcond_flatten_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        srcImg_data_stream_V_blk_n = srcImg_data_stream_V_empty_n;
    end else begin
        srcImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op77_read_state4 == 1'b1))) begin
        srcImg_data_stream_V_read = 1'b1;
    end else begin
        srcImg_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_blk_n = srcImg_rows_V_empty_n;
    end else begin
        srcImg_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_read = 1'b1;
    end else begin
        srcImg_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter1_state5)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter1_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Temp_fu_657_p2 = (agg_result_V_i_i_i_fu_606_p3 + agg_result_V_i_i11_i_fu_641_p3);

assign agg_result_V_i_i11_i_fu_641_p3 = ((tmp_7_fu_633_p3[0:0] === 1'b1) ? p_Result_1_fu_623_p4 : gy_cast_i_fu_583_p1);

assign agg_result_V_i_i_i_fu_606_p3 = ((tmp_4_reg_889[0:0] === 1'b1) ? p_Result_s_fu_596_p4 : gx_cast_i_fu_566_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((srcImg_data_stream_V_empty_n == 1'b0) & (ap_predicate_op77_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage1_iter2 = ((or_cond_i_reg_843_pp0_iter2_reg == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op77_read_state4 = ((brmerge_i_reg_816 == 1'd0) & (exitcond_flatten_reg_795 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign brmerge1_i_fu_696_p2 = (notrhs_i_mid2_reg_806_pp0_iter2_reg | brmerge_i_reg_816_pp0_iter2_reg);

assign brmerge_i_fu_453_p2 = (rev2_fu_447_p2 | p_not1_i_mid2_fu_386_p3);

assign cols_V_fu_295_p1 = $signed(srcImg_cols_V_read_reg_768);

assign dstImg_data_stream_V_din = ((sel_tmp1_fu_712_p2[0:0] === 1'b1) ? tmp_23_i_fu_700_p3 : 8'd0);

assign exitcond_flatten_fu_320_p2 = ((indvar_flatten_cast_fu_316_p1 == bound_reg_790) ? 1'b1 : 1'b0);

assign exitcond_fu_325_p2 = ((ap_phi_mux_x_i_phi_fu_282_p4 == tmp_5_reg_785) ? 1'b1 : 1'b0);

assign grp_fu_731_p0 = grp_fu_731_p00;

assign grp_fu_731_p00 = $unsigned(rows_V_fu_292_p1);

assign grp_fu_731_p1 = 13'd1;

assign grp_fu_731_p2 = grp_fu_731_p20;

assign grp_fu_731_p20 = tmp_5_fu_306_p2;

assign gx_cast_i_fu_566_p1 = gx_reg_883;

assign gx_fu_534_p2 = (tmp_12_cast_i_fu_527_p1 - tmp_13_cast_i_fu_530_p1);

assign gy_cast_i_fu_583_p1 = gy_fu_577_p2;

assign gy_fu_577_p2 = (tmp_14_cast_i_fu_569_p1 - tmp_15_cast_i_fu_573_p1);

assign icmp1_fu_404_p2 = ((tmp_fu_394_p4 == 12'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_420_p2 = ((tmp_1_fu_410_p4 == 12'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_514_p2 = ((tmp_12_fu_505_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_fu_673_p2 = (($signed(tmp_11_fu_663_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign indvar_flatten_cast_fu_316_p1 = ap_phi_mux_indvar_flatten_phi_fu_259_p4;

assign indvar_flatten_next_fu_482_p2 = (indvar_flatten_reg_255 + 25'd1);

assign line_buffer_val_0_address0 = tmp_6_i_reg_821;

assign line_buffer_val_0_address1 = tmp_7_i_reg_862;

assign line_buffer_val_1_address1 = tmp_7_i_fu_501_p1;

assign line_buffer_val_2_address1 = tmp_7_i_reg_862;

assign notrhs_i_mid2_fu_426_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? icmp1_fu_404_p2 : icmp2_fu_420_p2);

assign or_cond_i_fu_476_p2 = (tmp_3_i_mid2_fu_356_p3 | tmp_24_i_fu_470_p2);

always @ (*) begin
    p_Result_1_fu_623_p4 = xs_V_1_i_i8_cast_i_fu_619_p1;
    p_Result_1_fu_623_p4[32'd15] = |(1'd0);
end

always @ (*) begin
    p_Result_s_fu_596_p4 = xs_V_1_i_i_cast_i_fu_592_p1;
    p_Result_s_fu_596_p4[32'd15] = |(1'd0);
end

assign p_not1_i_mid2_fu_386_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? rev_fu_369_p2 : rev1_fu_380_p2);

assign rev1_fu_380_p2 = (ult1_fu_375_p2 ^ 1'd1);

assign rev2_fu_447_p2 = (ult2_fu_442_p2 ^ 1'd1);

assign rev_fu_369_p2 = (ult_fu_364_p2 ^ 1'd1);

assign rows_V_fu_292_p1 = $signed(srcImg_rows_V_read_reg_763);

assign sel_tmp1_fu_712_p2 = (sel_tmp_fu_706_p2 & icmp3_reg_873_pp0_iter2_reg);

assign sel_tmp_fu_706_p2 = (brmerge1_i_fu_696_p2 ^ 1'd1);

assign start_out = real_start;

assign tmp_10_fu_653_p1 = agg_result_V_i_i_i_fu_606_p3[7:0];

assign tmp_11_fu_663_p4 = {{Temp_fu_657_p2[15:8]}};

assign tmp_12_cast_i_fu_527_p1 = window_val_1_1_1_i_l_reg_857;

assign tmp_12_fu_505_p4 = {{x_i_mid2_reg_799[12:1]}};

assign tmp_13_cast_i_fu_530_p1 = window_val_1_2_1_fu_520_p3;

assign tmp_14_cast_i_fu_569_p1 = window_val_0_2_2_fu_136;

assign tmp_15_cast_i_fu_573_p1 = window_val_2_2_2_fu_148;

assign tmp_1_fu_410_p4 = {{ap_phi_mux_y_i_phi_fu_271_p4[12:1]}};

assign tmp_22_i_fu_679_p2 = (tmp_10_fu_653_p1 + tmp_9_fu_649_p1);

assign tmp_23_i_fu_700_p3 = ((icmp_reg_904[0:0] === 1'b1) ? 8'd255 : tmp_22_i_reg_909);

assign tmp_24_i_fu_470_p2 = ((x_i_mid2_fu_330_p3 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_3_i_fu_350_p2 = ((ap_phi_mux_y_i_phi_fu_271_p4 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_3_i_mid1_fu_344_p2 = ((y_fu_338_p2 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_3_i_mid2_fu_356_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? tmp_3_i_mid1_fu_344_p2 : tmp_3_i_fu_350_p2);

assign tmp_5_fu_306_p2 = (tmp_cast_i_15_fu_302_p1 + 13'd1);

assign tmp_5_i_fu_465_p2 = ((x_i_mid2_fu_330_p3 < tmp_cast_i_15_reg_779) ? 1'b1 : 1'b0);

assign tmp_6_i_fu_459_p1 = x_i_mid2_fu_330_p3;

assign tmp_7_fu_633_p3 = gy_fu_577_p2[32'd8];

assign tmp_7_i_fu_501_p1 = x_i_mid2_reg_799;

assign tmp_9_fu_649_p1 = agg_result_V_i_i11_i_fu_641_p3[7:0];

assign tmp_cast_i_15_fu_302_p1 = $unsigned(cols_V_fu_295_p1);

assign tmp_cast_i_fu_298_p1 = $unsigned(rows_V_fu_292_p1);

assign tmp_fu_394_p4 = {{y_fu_338_p2[12:1]}};

assign ult1_fu_375_p2 = ((ap_phi_mux_y_i_phi_fu_271_p4 < tmp_cast_i_reg_773) ? 1'b1 : 1'b0);

assign ult2_fu_442_p2 = ((x_i_mid2_fu_330_p3 < tmp_cast_i_15_reg_779) ? 1'b1 : 1'b0);

assign ult_fu_364_p2 = ((y_fu_338_p2 < tmp_cast_i_reg_773) ? 1'b1 : 1'b0);

assign window_val_0_2_1_fu_559_p3 = ((tmp_5_i_reg_836_pp0_iter1_reg[0:0] === 1'b1) ? line_buffer_val_0_q1 : window_val_0_2_2_fu_136);

assign window_val_1_2_1_fu_520_p3 = ((tmp_5_i_reg_836_pp0_iter1_reg[0:0] === 1'b1) ? line_buffer_val_1_q1 : window_val_1_1_fu_144);

assign window_val_2_2_1_fu_690_p3 = ((tmp_5_i_reg_836_pp0_iter2_reg[0:0] === 1'b1) ? line_buffer_val_2_q1 : window_val_2_2_2_l_reg_894);

assign x_fu_488_p2 = (x_i_mid2_reg_799 + 13'd1);

assign x_i_mid2_fu_330_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? 13'd0 : ap_phi_mux_x_i_phi_fu_282_p4);

assign xs_V_1_i_i8_cast_i_fu_619_p1 = $signed(xs_V_4_fu_613_p2);

assign xs_V_1_i_i_cast_i_fu_592_p1 = $signed(xs_V_3_fu_587_p2);

assign xs_V_3_fu_587_p2 = ($signed(9'd0) - $signed(gx_reg_883));

assign xs_V_4_fu_613_p2 = ($signed(9'd0) - $signed(gy_fu_577_p2));

assign y_fu_338_p2 = (ap_phi_mux_y_i_phi_fu_271_p4 + 13'd1);

assign y_i_mid2_fu_434_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? y_fu_338_p2 : ap_phi_mux_y_i_phi_fu_271_p4);

always @ (posedge ap_clk) begin
    tmp_cast_i_reg_773[12] <= 1'b0;
    tmp_cast_i_15_reg_779[12] <= 1'b0;
    tmp_6_i_reg_821[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    tmp_7_i_reg_862[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //get_grads_opr
