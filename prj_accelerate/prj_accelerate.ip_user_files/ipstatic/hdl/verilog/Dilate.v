// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Dilate (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i_i_i_reg_810;
reg   [0:0] icmp_reg_772;
reg   [0:0] tmp_s_reg_763;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] or_cond_i_i_reg_844;
reg   [0:0] or_cond_i_i_reg_844_pp0_iter3_reg;
reg   [9:0] t_V_5_reg_219;
wire   [0:0] exitcond389_i_i_fu_230_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] i_V_fu_236_p2;
reg   [8:0] i_V_reg_758;
wire   [0:0] tmp_s_fu_242_p2;
wire   [0:0] tmp_187_not_fu_248_p2;
reg   [0:0] tmp_187_not_reg_767;
wire   [0:0] icmp_fu_264_p2;
wire   [0:0] tmp_20_fu_270_p2;
reg   [0:0] tmp_20_reg_777;
wire   [0:0] tmp_217_2_fu_276_p2;
reg   [0:0] tmp_217_2_reg_781;
wire   [0:0] tmp_21_fu_282_p2;
reg   [0:0] tmp_21_reg_785;
wire   [1:0] row_assign_13_1_t_fu_292_p2;
reg   [1:0] row_assign_13_1_t_reg_791;
wire   [1:0] row_assign_13_2_t_fu_298_p2;
reg   [1:0] row_assign_13_2_t_reg_796;
wire   [0:0] exitcond388_i_i_fu_308_p2;
reg   [0:0] exitcond388_i_i_reg_801;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op92_read_state4;
reg    ap_predicate_op100_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_i_reg_801_pp0_iter1_reg;
reg   [0:0] exitcond388_i_i_reg_801_pp0_iter2_reg;
wire   [9:0] j_V_fu_314_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_fu_368_p2;
wire   [1:0] tmp_28_fu_398_p1;
reg   [1:0] tmp_28_reg_814;
wire   [0:0] brmerge_fu_402_p2;
reg   [0:0] brmerge_reg_819;
reg   [9:0] k_buf_0_val_3_addr_reg_826;
reg   [9:0] k_buf_0_val_4_addr_reg_832;
reg   [9:0] k_buf_0_val_5_addr_reg_838;
wire   [0:0] or_cond_i_i_fu_414_p2;
reg   [0:0] or_cond_i_i_reg_844_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_844_pp0_iter2_reg;
wire   [7:0] col_buf_0_val_0_0_fu_445_p3;
reg   [7:0] col_buf_0_val_0_0_reg_848;
reg   [7:0] col_buf_0_val_0_0_reg_848_pp0_iter2_reg;
reg   [7:0] col_buf_0_val_0_0_reg_848_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_26_fu_516_p3;
reg   [7:0] src_kernel_win_0_va_26_reg_855;
reg   [7:0] src_kernel_win_0_va_26_reg_855_pp0_iter2_reg;
wire   [7:0] src_kernel_win_0_va_27_fu_534_p3;
reg   [7:0] src_kernel_win_0_va_27_reg_862;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_553_p3;
reg   [7:0] temp_0_i_i_i_059_i_s_reg_868;
wire   [7:0] temp_0_i_i_i_059_i_9_fu_610_p3;
reg   [7:0] temp_0_i_i_i_059_i_9_reg_874;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_666_p3;
reg   [7:0] temp_0_i_i_i_059_i_2_reg_880;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [8:0] t_V_reg_208;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_29_fu_407_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_100;
reg   [7:0] src_kernel_win_0_va_19_fu_104;
reg   [7:0] src_kernel_win_0_va_20_fu_108;
reg   [7:0] src_kernel_win_0_va_21_fu_112;
reg   [7:0] src_kernel_win_0_va_22_fu_116;
reg   [7:0] src_kernel_win_0_va_23_fu_120;
reg   [7:0] src_kernel_win_0_va_24_fu_124;
reg   [7:0] right_border_buf_0_s_fu_128;
wire   [7:0] col_buf_0_val_2_0_fu_483_p3;
reg   [7:0] right_border_buf_0_4_fu_132;
wire   [7:0] col_buf_0_val_1_0_fu_464_p3;
wire   [7:0] tmp_fu_254_p4;
wire   [1:0] tmp_22_fu_288_p1;
wire   [8:0] tmp_24_fu_320_p4;
wire   [10:0] t_V_5_cast_fu_304_p1;
wire   [10:0] ImagLoc_x_fu_336_p2;
wire   [0:0] tmp_25_fu_348_p3;
wire   [0:0] tmp_26_fu_362_p2;
wire   [0:0] rev_fu_356_p2;
wire   [0:0] tmp_27_fu_374_p3;
wire   [9:0] ImagLoc_x_cast_fu_342_p2;
wire   [9:0] p_assign_2_cast_fu_382_p3;
wire   [9:0] x_fu_390_p3;
wire   [0:0] icmp2_fu_330_p2;
wire   [1:0] col_assign_7_t_fu_428_p2;
wire   [7:0] tmp_30_fu_433_p5;
wire   [7:0] tmp_31_fu_452_p5;
wire   [7:0] tmp_32_fu_471_p5;
wire   [7:0] tmp_33_fu_505_p5;
wire   [7:0] tmp_35_fu_523_p5;
wire   [0:0] tmp_263_0_1_fu_547_p2;
wire   [0:0] tmp_263_0_2_fu_580_p2;
wire   [7:0] temp_0_i_i_i_059_i_7_fu_584_p3;
wire   [0:0] tmp_263_1_fu_590_p2;
wire   [7:0] temp_0_i_i_i_059_i_8_fu_596_p3;
wire   [0:0] tmp_263_1_1_fu_604_p2;
wire   [0:0] tmp_263_1_2_fu_636_p2;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_640_p3;
wire   [0:0] tmp_263_2_fu_646_p2;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_652_p3;
wire   [0:0] tmp_263_2_1_fu_660_p2;
wire   [0:0] tmp_263_2_2_fu_686_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_327;
reg    ap_condition_61;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_826),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_832),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_838),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U42(
    .din0(src_kernel_win_0_va_24_fu_124),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_7_t_fu_428_p2),
    .dout(tmp_30_fu_433_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U43(
    .din0(right_border_buf_0_4_fu_132),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_7_t_fu_428_p2),
    .dout(tmp_31_fu_452_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U44(
    .din0(right_border_buf_0_s_fu_128),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_7_t_fu_428_p2),
    .dout(tmp_32_fu_471_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U45(
    .din0(col_buf_0_val_0_0_fu_445_p3),
    .din1(col_buf_0_val_1_0_fu_464_p3),
    .din2(col_buf_0_val_2_0_fu_483_p3),
    .din3(row_assign_13_1_t_reg_791),
    .dout(tmp_33_fu_505_p5)
);

hls_ocr_mux_32_8_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_ocr_mux_32_8_ibs_U46(
    .din0(col_buf_0_val_0_0_fu_445_p3),
    .din1(col_buf_0_val_1_0_fu_464_p3),
    .din2(col_buf_0_val_2_0_fu_483_p3),
    .din3(row_assign_13_2_t_reg_796),
    .dout(tmp_35_fu_523_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_fu_230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_i_fu_230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond389_i_i_fu_230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_5_reg_219 <= j_V_fu_314_p2;
    end else if (((exitcond389_i_i_fu_230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_5_reg_219 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_208 <= i_V_reg_758;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_208 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_819 <= brmerge_fu_402_p2;
        k_buf_0_val_3_addr_reg_826 <= tmp_29_fu_407_p1;
        k_buf_0_val_4_addr_reg_832 <= tmp_29_fu_407_p1;
        k_buf_0_val_5_addr_reg_838 <= tmp_29_fu_407_p1;
        or_cond_i_i_i_reg_810 <= or_cond_i_i_i_fu_368_p2;
        or_cond_i_i_reg_844 <= or_cond_i_i_fu_414_p2;
        tmp_28_reg_814 <= tmp_28_fu_398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_848 <= col_buf_0_val_0_0_fu_445_p3;
        exitcond388_i_i_reg_801 <= exitcond388_i_i_fu_308_p2;
        exitcond388_i_i_reg_801_pp0_iter1_reg <= exitcond388_i_i_reg_801;
        or_cond_i_i_reg_844_pp0_iter1_reg <= or_cond_i_i_reg_844;
        src_kernel_win_0_va_26_reg_855 <= src_kernel_win_0_va_26_fu_516_p3;
        src_kernel_win_0_va_27_reg_862 <= src_kernel_win_0_va_27_fu_534_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        col_buf_0_val_0_0_reg_848_pp0_iter2_reg <= col_buf_0_val_0_0_reg_848;
        col_buf_0_val_0_0_reg_848_pp0_iter3_reg <= col_buf_0_val_0_0_reg_848_pp0_iter2_reg;
        exitcond388_i_i_reg_801_pp0_iter2_reg <= exitcond388_i_i_reg_801_pp0_iter1_reg;
        or_cond_i_i_reg_844_pp0_iter2_reg <= or_cond_i_i_reg_844_pp0_iter1_reg;
        or_cond_i_i_reg_844_pp0_iter3_reg <= or_cond_i_i_reg_844_pp0_iter2_reg;
        src_kernel_win_0_va_26_reg_855_pp0_iter2_reg <= src_kernel_win_0_va_26_reg_855;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_758 <= i_V_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_fu_230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_772 <= icmp_fu_264_p2;
        row_assign_13_1_t_reg_791 <= row_assign_13_1_t_fu_292_p2;
        row_assign_13_2_t_reg_796 <= row_assign_13_2_t_fu_298_p2;
        tmp_187_not_reg_767 <= tmp_187_not_fu_248_p2;
        tmp_20_reg_777 <= tmp_20_fu_270_p2;
        tmp_217_2_reg_781 <= tmp_217_2_fu_276_p2;
        tmp_21_reg_785 <= tmp_21_fu_282_p2;
        tmp_s_reg_763 <= tmp_s_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_4_fu_132 <= col_buf_0_val_1_0_fu_464_p3;
        right_border_buf_0_s_fu_128 <= col_buf_0_val_2_0_fu_483_p3;
        src_kernel_win_0_va_24_fu_124 <= col_buf_0_val_0_0_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_801_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_19_fu_104 <= src_kernel_win_0_va_fu_100;
        src_kernel_win_0_va_fu_100 <= col_buf_0_val_0_0_reg_848_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_20_fu_108 <= src_kernel_win_0_va_26_reg_855;
        src_kernel_win_0_va_21_fu_112 <= src_kernel_win_0_va_20_fu_108;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_801 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_22_fu_116 <= src_kernel_win_0_va_27_fu_534_p3;
        src_kernel_win_0_va_23_fu_120 <= src_kernel_win_0_va_22_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_844_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_2_reg_880 <= temp_0_i_i_i_059_i_2_fu_666_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_844_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_9_reg_874 <= temp_0_i_i_i_059_i_9_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_844 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_s_reg_868 <= temp_0_i_i_i_059_i_s_fu_553_p3;
    end
end

always @ (*) begin
    if ((exitcond388_i_i_fu_308_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_217_2_reg_781 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_217_2_reg_781 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_20_reg_777 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_61)) begin
        if ((ap_predicate_op100_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_327)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_20_reg_777 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_20_reg_777 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_61)) begin
        if ((ap_predicate_op100_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_327)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_772 == 1'd0) & (tmp_20_reg_777 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_763 == 1'd1) & (icmp_reg_772 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_reg_772 == 1'd0) & (or_cond_i_i_i_reg_810 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op92_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_fu_230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond388_i_i_fu_308_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond388_i_i_fu_308_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_342_p2 = ($signed(10'd1023) + $signed(t_V_5_reg_219));

assign ImagLoc_x_fu_336_p2 = ($signed(11'd2047) + $signed(t_V_5_cast_fu_304_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op100_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op92_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((or_cond_i_i_reg_844_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_327 = ((icmp_reg_772 == 1'd0) & (tmp_20_reg_777 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1));
end

always @ (*) begin
    ap_condition_61 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op100_read_state4 = ((tmp_s_reg_763 == 1'd1) & (icmp_reg_772 == 1'd1) & (or_cond_i_i_i_reg_810 == 1'd1));
end

always @ (*) begin
    ap_predicate_op92_read_state4 = ((icmp_reg_772 == 1'd0) & (or_cond_i_i_i_reg_810 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign brmerge_fu_402_p2 = (tmp_26_fu_362_p2 | tmp_187_not_reg_767);

assign col_assign_7_t_fu_428_p2 = (tmp_28_reg_814 ^ 2'd3);

assign col_buf_0_val_0_0_fu_445_p3 = ((brmerge_reg_819[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_30_fu_433_p5);

assign col_buf_0_val_1_0_fu_464_p3 = ((brmerge_reg_819[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_31_fu_452_p5);

assign col_buf_0_val_2_0_fu_483_p3 = ((brmerge_reg_819[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_32_fu_471_p5);

assign exitcond388_i_i_fu_308_p2 = ((t_V_5_reg_219 == 10'd642) ? 1'b1 : 1'b0);

assign exitcond389_i_i_fu_230_p2 = ((t_V_reg_208 == 9'd482) ? 1'b1 : 1'b0);

assign i_V_fu_236_p2 = (t_V_reg_208 + 9'd1);

assign icmp2_fu_330_p2 = ((tmp_24_fu_320_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_fu_264_p2 = ((tmp_fu_254_p4 != 8'd0) ? 1'b1 : 1'b0);

assign j_V_fu_314_p2 = (t_V_5_reg_219 + 10'd1);

assign k_buf_0_val_3_address0 = tmp_29_fu_407_p1;

assign k_buf_0_val_4_address0 = tmp_29_fu_407_p1;

assign k_buf_0_val_5_address0 = tmp_29_fu_407_p1;

assign or_cond_i_i_fu_414_p2 = (icmp_reg_772 & icmp2_fu_330_p2);

assign or_cond_i_i_i_fu_368_p2 = (tmp_26_fu_362_p2 & rev_fu_356_p2);

assign p_assign_2_cast_fu_382_p3 = ((tmp_27_fu_374_p3[0:0] === 1'b1) ? 10'd0 : 10'd639);

assign p_dst_data_stream_V_din = ((tmp_263_2_2_fu_686_p2[0:0] === 1'b1) ? col_buf_0_val_0_0_reg_848_pp0_iter3_reg : temp_0_i_i_i_059_i_2_reg_880);

assign rev_fu_356_p2 = (tmp_25_fu_348_p3 ^ 1'd1);

assign row_assign_13_1_t_fu_292_p2 = (tmp_22_fu_288_p1 ^ 2'd1);

assign row_assign_13_2_t_fu_298_p2 = ($signed(2'd2) - $signed(tmp_22_fu_288_p1));

assign src_kernel_win_0_va_26_fu_516_p3 = ((tmp_21_reg_785[0:0] === 1'b1) ? tmp_33_fu_505_p5 : col_buf_0_val_1_0_fu_464_p3);

assign src_kernel_win_0_va_27_fu_534_p3 = ((tmp_21_reg_785[0:0] === 1'b1) ? tmp_35_fu_523_p5 : col_buf_0_val_2_0_fu_483_p3);

assign start_out = real_start;

assign t_V_5_cast_fu_304_p1 = t_V_5_reg_219;

assign temp_0_i_i_i_059_i_1_fu_652_p3 = ((tmp_263_2_fu_646_p2[0:0] === 1'b1) ? src_kernel_win_0_va_19_fu_104 : temp_0_i_i_i_059_i_3_fu_640_p3);

assign temp_0_i_i_i_059_i_2_fu_666_p3 = ((tmp_263_2_1_fu_660_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_100 : temp_0_i_i_i_059_i_1_fu_652_p3);

assign temp_0_i_i_i_059_i_3_fu_640_p3 = ((tmp_263_1_2_fu_636_p2[0:0] === 1'b1) ? src_kernel_win_0_va_26_reg_855_pp0_iter2_reg : temp_0_i_i_i_059_i_9_reg_874);

assign temp_0_i_i_i_059_i_7_fu_584_p3 = ((tmp_263_0_2_fu_580_p2[0:0] === 1'b1) ? src_kernel_win_0_va_27_reg_862 : temp_0_i_i_i_059_i_s_reg_868);

assign temp_0_i_i_i_059_i_8_fu_596_p3 = ((tmp_263_1_fu_590_p2[0:0] === 1'b1) ? src_kernel_win_0_va_21_fu_112 : temp_0_i_i_i_059_i_7_fu_584_p3);

assign temp_0_i_i_i_059_i_9_fu_610_p3 = ((tmp_263_1_1_fu_604_p2[0:0] === 1'b1) ? src_kernel_win_0_va_20_fu_108 : temp_0_i_i_i_059_i_8_fu_596_p3);

assign temp_0_i_i_i_059_i_s_fu_553_p3 = ((tmp_263_0_1_fu_547_p2[0:0] === 1'b1) ? src_kernel_win_0_va_22_fu_116 : src_kernel_win_0_va_23_fu_120);

assign tmp_187_not_fu_248_p2 = (tmp_s_fu_242_p2 ^ 1'd1);

assign tmp_20_fu_270_p2 = ((t_V_reg_208 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_217_2_fu_276_p2 = ((t_V_reg_208 == 9'd1) ? 1'b1 : 1'b0);

assign tmp_21_fu_282_p2 = ((t_V_reg_208 > 9'd480) ? 1'b1 : 1'b0);

assign tmp_22_fu_288_p1 = t_V_reg_208[1:0];

assign tmp_24_fu_320_p4 = {{t_V_5_reg_219[9:1]}};

assign tmp_25_fu_348_p3 = ImagLoc_x_fu_336_p2[32'd10];

assign tmp_263_0_1_fu_547_p2 = ((src_kernel_win_0_va_22_fu_116 > src_kernel_win_0_va_23_fu_120) ? 1'b1 : 1'b0);

assign tmp_263_0_2_fu_580_p2 = ((src_kernel_win_0_va_27_reg_862 > temp_0_i_i_i_059_i_s_reg_868) ? 1'b1 : 1'b0);

assign tmp_263_1_1_fu_604_p2 = ((src_kernel_win_0_va_20_fu_108 > temp_0_i_i_i_059_i_8_fu_596_p3) ? 1'b1 : 1'b0);

assign tmp_263_1_2_fu_636_p2 = ((src_kernel_win_0_va_26_reg_855_pp0_iter2_reg > temp_0_i_i_i_059_i_9_reg_874) ? 1'b1 : 1'b0);

assign tmp_263_1_fu_590_p2 = ((src_kernel_win_0_va_21_fu_112 > temp_0_i_i_i_059_i_7_fu_584_p3) ? 1'b1 : 1'b0);

assign tmp_263_2_1_fu_660_p2 = ((src_kernel_win_0_va_fu_100 > temp_0_i_i_i_059_i_1_fu_652_p3) ? 1'b1 : 1'b0);

assign tmp_263_2_2_fu_686_p2 = ((col_buf_0_val_0_0_reg_848_pp0_iter3_reg > temp_0_i_i_i_059_i_2_reg_880) ? 1'b1 : 1'b0);

assign tmp_263_2_fu_646_p2 = ((src_kernel_win_0_va_19_fu_104 > temp_0_i_i_i_059_i_3_fu_640_p3) ? 1'b1 : 1'b0);

assign tmp_26_fu_362_p2 = (($signed(ImagLoc_x_fu_336_p2) < $signed(11'd640)) ? 1'b1 : 1'b0);

assign tmp_27_fu_374_p3 = ImagLoc_x_fu_336_p2[32'd10];

assign tmp_28_fu_398_p1 = x_fu_390_p3[1:0];

assign tmp_29_fu_407_p1 = x_fu_390_p3;

assign tmp_fu_254_p4 = {{t_V_reg_208[8:1]}};

assign tmp_s_fu_242_p2 = ((t_V_reg_208 < 9'd480) ? 1'b1 : 1'b0);

assign x_fu_390_p3 = ((or_cond_i_i_i_fu_368_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_342_p2 : p_assign_2_cast_fu_382_p3);

endmodule //Dilate
