// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_grads_opr (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_rows_V_dout,
        srcImg_rows_V_empty_n,
        srcImg_rows_V_read,
        srcImg_cols_V_dout,
        srcImg_cols_V_empty_n,
        srcImg_cols_V_read,
        srcImg_data_stream_V_dout,
        srcImg_data_stream_V_empty_n,
        srcImg_data_stream_V_read,
        dstImg_data_stream_V_din,
        dstImg_data_stream_V_full_n,
        dstImg_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state50 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [9:0] srcImg_rows_V_dout;
input   srcImg_rows_V_empty_n;
output   srcImg_rows_V_read;
input  [10:0] srcImg_cols_V_dout;
input   srcImg_cols_V_empty_n;
output   srcImg_cols_V_read;
input  [7:0] srcImg_data_stream_V_dout;
input   srcImg_data_stream_V_empty_n;
output   srcImg_data_stream_V_read;
output  [31:0] dstImg_data_stream_V_din;
input   dstImg_data_stream_V_full_n;
output   dstImg_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_rows_V_read;
reg srcImg_cols_V_read;
reg srcImg_data_stream_V_read;
reg dstImg_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    srcImg_rows_V_blk_n;
reg    srcImg_cols_V_blk_n;
reg    srcImg_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] brmerge_i_reg_718;
reg   [0:0] brmerge_i_reg_718_pp0_iter1_reg;
reg    dstImg_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter46;
reg   [0:0] or_cond_i_reg_728;
reg   [0:0] or_cond_i_reg_728_pp0_iter45_reg;
reg   [12:0] col_assign_reg_265;
wire   [12:0] tmp_83_cast_i_cast_fu_341_p1;
reg   [12:0] tmp_83_cast_i_cast_reg_639;
reg    ap_block_state1;
wire   [12:0] tmp_84_cast_i_cast_fu_345_p1;
reg   [12:0] tmp_84_cast_i_cast_reg_645;
wire   [12:0] tmp_4_fu_349_p2;
reg   [12:0] tmp_4_reg_650;
wire   [12:0] tmp_7_fu_355_p2;
reg   [12:0] tmp_7_reg_655;
wire   [0:0] exitcond1_fu_361_p2;
wire    ap_CS_fsm_state2;
wire   [12:0] row_fu_366_p2;
reg   [12:0] row_reg_664;
wire   [0:0] tmp_86_i_fu_372_p2;
reg   [0:0] tmp_86_i_reg_669;
wire   [0:0] rev_fu_383_p2;
reg   [0:0] rev_reg_674;
wire   [0:0] icmp_fu_399_p2;
reg   [0:0] icmp_reg_679;
wire   [63:0] tmp_87_i_fu_405_p1;
reg   [63:0] tmp_87_i_reg_684;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
wire    ap_block_state37_pp0_stage0_iter34;
wire    ap_block_state38_pp0_stage0_iter35;
wire    ap_block_state39_pp0_stage0_iter36;
wire    ap_block_state40_pp0_stage0_iter37;
wire    ap_block_state41_pp0_stage0_iter38;
wire    ap_block_state42_pp0_stage0_iter39;
wire    ap_block_state43_pp0_stage0_iter40;
wire    ap_block_state44_pp0_stage0_iter41;
wire    ap_block_state45_pp0_stage0_iter42;
wire    ap_block_state46_pp0_stage0_iter43;
wire    ap_block_state47_pp0_stage0_iter44;
wire    ap_block_state48_pp0_stage0_iter45;
reg    ap_block_state49_pp0_stage0_iter46;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] tmp_87_i_reg_684_pp0_iter1_reg;
wire   [0:0] exitcond_fu_411_p2;
reg   [0:0] exitcond_reg_691;
reg   [0:0] exitcond_reg_691_pp0_iter1_reg;
reg   [0:0] exitcond_reg_691_pp0_iter2_reg;
wire   [12:0] col_fu_416_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_89_i_fu_422_p2;
reg   [0:0] tmp_89_i_reg_700;
reg   [0:0] tmp_89_i_reg_700_pp0_iter1_reg;
reg   [0:0] tmp_89_i_reg_700_pp0_iter2_reg;
reg   [9:0] buff_A_val_1_addr_reg_707;
wire   [0:0] brmerge_i_fu_438_p2;
reg   [0:0] brmerge_i_reg_718_pp0_iter2_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter3_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter4_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter5_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter6_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter7_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter8_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter9_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter10_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter11_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter12_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter13_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter14_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter15_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter16_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter17_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter18_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter19_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter20_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter21_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter22_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter23_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter24_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter25_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter26_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter27_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter28_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter29_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter30_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter31_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter32_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter33_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter34_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter35_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter36_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter37_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter38_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter39_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter40_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter41_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter42_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter43_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter44_reg;
reg   [0:0] brmerge_i_reg_718_pp0_iter45_reg;
wire   [0:0] icmp1_fu_453_p2;
reg   [0:0] icmp1_reg_723;
reg   [0:0] icmp1_reg_723_pp0_iter1_reg;
reg   [0:0] icmp1_reg_723_pp0_iter2_reg;
reg   [0:0] icmp1_reg_723_pp0_iter3_reg;
reg   [0:0] icmp1_reg_723_pp0_iter4_reg;
reg   [0:0] icmp1_reg_723_pp0_iter5_reg;
reg   [0:0] icmp1_reg_723_pp0_iter6_reg;
reg   [0:0] icmp1_reg_723_pp0_iter7_reg;
reg   [0:0] icmp1_reg_723_pp0_iter8_reg;
reg   [0:0] icmp1_reg_723_pp0_iter9_reg;
reg   [0:0] icmp1_reg_723_pp0_iter10_reg;
reg   [0:0] icmp1_reg_723_pp0_iter11_reg;
reg   [0:0] icmp1_reg_723_pp0_iter12_reg;
reg   [0:0] icmp1_reg_723_pp0_iter13_reg;
reg   [0:0] icmp1_reg_723_pp0_iter14_reg;
reg   [0:0] icmp1_reg_723_pp0_iter15_reg;
reg   [0:0] icmp1_reg_723_pp0_iter16_reg;
reg   [0:0] icmp1_reg_723_pp0_iter17_reg;
reg   [0:0] icmp1_reg_723_pp0_iter18_reg;
reg   [0:0] icmp1_reg_723_pp0_iter19_reg;
reg   [0:0] icmp1_reg_723_pp0_iter20_reg;
reg   [0:0] icmp1_reg_723_pp0_iter21_reg;
reg   [0:0] icmp1_reg_723_pp0_iter22_reg;
reg   [0:0] icmp1_reg_723_pp0_iter23_reg;
reg   [0:0] icmp1_reg_723_pp0_iter24_reg;
reg   [0:0] icmp1_reg_723_pp0_iter25_reg;
reg   [0:0] icmp1_reg_723_pp0_iter26_reg;
reg   [0:0] icmp1_reg_723_pp0_iter27_reg;
reg   [0:0] icmp1_reg_723_pp0_iter28_reg;
reg   [0:0] icmp1_reg_723_pp0_iter29_reg;
reg   [0:0] icmp1_reg_723_pp0_iter30_reg;
reg   [0:0] icmp1_reg_723_pp0_iter31_reg;
reg   [0:0] icmp1_reg_723_pp0_iter32_reg;
reg   [0:0] icmp1_reg_723_pp0_iter33_reg;
reg   [0:0] icmp1_reg_723_pp0_iter34_reg;
reg   [0:0] icmp1_reg_723_pp0_iter35_reg;
reg   [0:0] icmp1_reg_723_pp0_iter36_reg;
reg   [0:0] icmp1_reg_723_pp0_iter37_reg;
reg   [0:0] icmp1_reg_723_pp0_iter38_reg;
reg   [0:0] icmp1_reg_723_pp0_iter39_reg;
reg   [0:0] icmp1_reg_723_pp0_iter40_reg;
reg   [0:0] icmp1_reg_723_pp0_iter41_reg;
reg   [0:0] icmp1_reg_723_pp0_iter42_reg;
reg   [0:0] icmp1_reg_723_pp0_iter43_reg;
reg   [0:0] icmp1_reg_723_pp0_iter44_reg;
reg   [0:0] icmp1_reg_723_pp0_iter45_reg;
wire   [0:0] or_cond_i_fu_465_p2;
reg   [0:0] or_cond_i_reg_728_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter3_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter4_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter5_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter6_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter7_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter8_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter9_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter10_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter11_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter12_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter13_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter14_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter15_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter16_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter17_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter18_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter19_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter20_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter21_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter22_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter23_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter24_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter25_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter26_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter27_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter28_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter29_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter30_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter31_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter32_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter33_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter34_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter35_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter36_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter37_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter38_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter39_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter40_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter41_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter42_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter43_reg;
reg   [0:0] or_cond_i_reg_728_pp0_iter44_reg;
wire   [8:0] tmp_92_i_fu_504_p2;
reg   [8:0] tmp_92_i_reg_737;
wire   [31:0] grp_pown_generic_float_s_fu_276_ap_return;
wire   [31:0] grp_pown_generic_float_s_fu_295_ap_return;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] Temp_f_reg_762;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] Temp_f2_reg_767;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
wire   [9:0] buff_A_val_0_address0;
reg    buff_A_val_0_ce0;
wire   [7:0] buff_A_val_0_q0;
wire   [9:0] buff_A_val_0_address1;
reg    buff_A_val_0_ce1;
reg    buff_A_val_0_we1;
wire   [9:0] buff_A_val_1_address0;
reg    buff_A_val_1_ce0;
wire   [7:0] buff_A_val_1_q0;
reg    buff_A_val_1_ce1;
reg    buff_A_val_1_we1;
wire   [9:0] buff_A_val_2_address0;
reg    buff_A_val_2_ce0;
reg    buff_A_val_2_we0;
wire   [9:0] buff_A_val_2_address1;
reg    buff_A_val_2_ce1;
wire   [7:0] buff_A_val_2_q1;
wire    grp_pown_generic_float_s_fu_276_ap_start;
wire    grp_pown_generic_float_s_fu_276_ap_done;
wire    grp_pown_generic_float_s_fu_276_ap_idle;
wire    grp_pown_generic_float_s_fu_276_ap_ready;
reg    grp_pown_generic_float_s_fu_276_ap_ce;
wire    grp_pown_generic_float_s_fu_295_ap_start;
wire    grp_pown_generic_float_s_fu_295_ap_done;
wire    grp_pown_generic_float_s_fu_295_ap_idle;
wire    grp_pown_generic_float_s_fu_295_ap_ready;
reg    grp_pown_generic_float_s_fu_295_ap_ce;
reg   [12:0] row_i_reg_254;
wire    ap_CS_fsm_state50;
reg    grp_pown_generic_float_s_fu_276_ap_start_reg;
wire   [31:0] grp_fu_320_p1;
reg    grp_pown_generic_float_s_fu_295_ap_start_reg;
wire   [31:0] grp_fu_324_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] buff_C_val_1_0_fu_134;
reg   [7:0] buff_C_val_0_0_fu_138;
wire   [7:0] buff_C_val_0_0_1_fu_539_p3;
reg   [7:0] buff_C_val_1_1_fu_142;
wire   [7:0] buff_C_val_1_0_1_fu_489_p3;
reg   [7:0] buff_C_val_1_1_1_fu_146;
reg   [7:0] buff_C_val_2_0_2_fu_150;
wire   [7:0] buff_C_val_2_0_1_fu_532_p3;
reg   [7:0] buff_C_val_0_0_2_fu_154;
wire  signed [31:0] grp_fu_320_p0;
wire  signed [31:0] grp_fu_324_p0;
wire  signed [11:0] cols_V_fu_337_p1;
wire  signed [11:0] rows_V_fu_333_p1;
wire   [0:0] ult_fu_378_p2;
wire   [11:0] tmp_fu_389_p4;
wire   [0:0] ult1_fu_427_p2;
wire   [0:0] rev1_fu_432_p2;
wire   [11:0] tmp_66_fu_443_p4;
wire   [0:0] tmp_99_i_fu_459_p2;
wire   [8:0] tmp_90_cast_i_fu_496_p1;
wire   [8:0] tmp_91_cast_i_fu_500_p1;
wire   [8:0] tmp_93_cast_i_fu_550_p1;
wire   [8:0] tmp_94_cast_i_fu_554_p1;
wire   [8:0] tmp_95_i_fu_558_p2;
wire   [0:0] brmerge1_i_fu_579_p2;
wire   [0:0] sel_tmp_fu_583_p2;
wire   [0:0] sel_tmp1_fu_589_p2;
reg    grp_fu_314_ce;
reg    grp_fu_320_ce;
reg    grp_fu_324_ce;
reg    grp_fu_328_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 grp_pown_generic_float_s_fu_276_ap_start_reg = 1'b0;
#0 grp_pown_generic_float_s_fu_295_ap_start_reg = 1'b0;
end

get_grads_opr_bufncg #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_0_address0),
    .ce0(buff_A_val_0_ce0),
    .q0(buff_A_val_0_q0),
    .address1(buff_A_val_0_address1),
    .ce1(buff_A_val_0_ce1),
    .we1(buff_A_val_0_we1),
    .d1(srcImg_data_stream_V_dout)
);

get_grads_opr_bufncg #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_1_address0),
    .ce0(buff_A_val_1_ce0),
    .q0(buff_A_val_1_q0),
    .address1(buff_A_val_1_addr_reg_707),
    .ce1(buff_A_val_1_ce1),
    .we1(buff_A_val_1_we1),
    .d1(buff_A_val_0_q0)
);

get_grads_opr_bufpcA #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_2_address0),
    .ce0(buff_A_val_2_ce0),
    .we0(buff_A_val_2_we0),
    .d0(buff_A_val_1_q0),
    .address1(buff_A_val_2_address1),
    .ce1(buff_A_val_2_ce1),
    .q1(buff_A_val_2_q1)
);

pown_generic_float_s grp_pown_generic_float_s_fu_276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pown_generic_float_s_fu_276_ap_start),
    .ap_done(grp_pown_generic_float_s_fu_276_ap_done),
    .ap_idle(grp_pown_generic_float_s_fu_276_ap_idle),
    .ap_ready(grp_pown_generic_float_s_fu_276_ap_ready),
    .ap_ce(grp_pown_generic_float_s_fu_276_ap_ce),
    .base_r(grp_fu_320_p1),
    .ap_return(grp_pown_generic_float_s_fu_276_ap_return)
);

pown_generic_float_s grp_pown_generic_float_s_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pown_generic_float_s_fu_295_ap_start),
    .ap_done(grp_pown_generic_float_s_fu_295_ap_done),
    .ap_idle(grp_pown_generic_float_s_fu_295_ap_idle),
    .ap_ready(grp_pown_generic_float_s_fu_295_ap_ready),
    .ap_ce(grp_pown_generic_float_s_fu_295_ap_ce),
    .base_r(grp_fu_324_p1),
    .ap_return(grp_pown_generic_float_s_fu_295_ap_return)
);

img_get_grads_fadqcK #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_get_grads_fadqcK_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_pown_generic_float_s_fu_276_ap_return),
    .din1(grp_pown_generic_float_s_fu_295_ap_return),
    .ce(grp_fu_314_ce),
    .dout(grp_fu_314_p2)
);

img_get_grads_sitrcU #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_get_grads_sitrcU_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_320_p0),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p1)
);

img_get_grads_sitrcU #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_get_grads_sitrcU_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_324_p0),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p1)
);

img_get_grads_fsqsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_get_grads_fsqsc4_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(Temp_f_reg_762),
    .ce(grp_fu_328_ce),
    .dout(grp_fu_328_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end else if (((exitcond1_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter46 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pown_generic_float_s_fu_276_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_pown_generic_float_s_fu_276_ap_start_reg <= 1'b1;
        end else if ((grp_pown_generic_float_s_fu_276_ap_ready == 1'b1)) begin
            grp_pown_generic_float_s_fu_276_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pown_generic_float_s_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_pown_generic_float_s_fu_295_ap_start_reg <= 1'b1;
        end else if ((grp_pown_generic_float_s_fu_295_ap_ready == 1'b1)) begin
            grp_pown_generic_float_s_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_411_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_reg_265 <= col_fu_416_p2;
    end else if (((exitcond1_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        col_assign_reg_265 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        row_i_reg_254 <= row_reg_664;
    end else if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_i_reg_254 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Temp_f2_reg_767 <= grp_fu_328_p2;
        Temp_f_reg_762 <= grp_fu_314_p2;
        brmerge_i_reg_718_pp0_iter10_reg <= brmerge_i_reg_718_pp0_iter9_reg;
        brmerge_i_reg_718_pp0_iter11_reg <= brmerge_i_reg_718_pp0_iter10_reg;
        brmerge_i_reg_718_pp0_iter12_reg <= brmerge_i_reg_718_pp0_iter11_reg;
        brmerge_i_reg_718_pp0_iter13_reg <= brmerge_i_reg_718_pp0_iter12_reg;
        brmerge_i_reg_718_pp0_iter14_reg <= brmerge_i_reg_718_pp0_iter13_reg;
        brmerge_i_reg_718_pp0_iter15_reg <= brmerge_i_reg_718_pp0_iter14_reg;
        brmerge_i_reg_718_pp0_iter16_reg <= brmerge_i_reg_718_pp0_iter15_reg;
        brmerge_i_reg_718_pp0_iter17_reg <= brmerge_i_reg_718_pp0_iter16_reg;
        brmerge_i_reg_718_pp0_iter18_reg <= brmerge_i_reg_718_pp0_iter17_reg;
        brmerge_i_reg_718_pp0_iter19_reg <= brmerge_i_reg_718_pp0_iter18_reg;
        brmerge_i_reg_718_pp0_iter20_reg <= brmerge_i_reg_718_pp0_iter19_reg;
        brmerge_i_reg_718_pp0_iter21_reg <= brmerge_i_reg_718_pp0_iter20_reg;
        brmerge_i_reg_718_pp0_iter22_reg <= brmerge_i_reg_718_pp0_iter21_reg;
        brmerge_i_reg_718_pp0_iter23_reg <= brmerge_i_reg_718_pp0_iter22_reg;
        brmerge_i_reg_718_pp0_iter24_reg <= brmerge_i_reg_718_pp0_iter23_reg;
        brmerge_i_reg_718_pp0_iter25_reg <= brmerge_i_reg_718_pp0_iter24_reg;
        brmerge_i_reg_718_pp0_iter26_reg <= brmerge_i_reg_718_pp0_iter25_reg;
        brmerge_i_reg_718_pp0_iter27_reg <= brmerge_i_reg_718_pp0_iter26_reg;
        brmerge_i_reg_718_pp0_iter28_reg <= brmerge_i_reg_718_pp0_iter27_reg;
        brmerge_i_reg_718_pp0_iter29_reg <= brmerge_i_reg_718_pp0_iter28_reg;
        brmerge_i_reg_718_pp0_iter2_reg <= brmerge_i_reg_718_pp0_iter1_reg;
        brmerge_i_reg_718_pp0_iter30_reg <= brmerge_i_reg_718_pp0_iter29_reg;
        brmerge_i_reg_718_pp0_iter31_reg <= brmerge_i_reg_718_pp0_iter30_reg;
        brmerge_i_reg_718_pp0_iter32_reg <= brmerge_i_reg_718_pp0_iter31_reg;
        brmerge_i_reg_718_pp0_iter33_reg <= brmerge_i_reg_718_pp0_iter32_reg;
        brmerge_i_reg_718_pp0_iter34_reg <= brmerge_i_reg_718_pp0_iter33_reg;
        brmerge_i_reg_718_pp0_iter35_reg <= brmerge_i_reg_718_pp0_iter34_reg;
        brmerge_i_reg_718_pp0_iter36_reg <= brmerge_i_reg_718_pp0_iter35_reg;
        brmerge_i_reg_718_pp0_iter37_reg <= brmerge_i_reg_718_pp0_iter36_reg;
        brmerge_i_reg_718_pp0_iter38_reg <= brmerge_i_reg_718_pp0_iter37_reg;
        brmerge_i_reg_718_pp0_iter39_reg <= brmerge_i_reg_718_pp0_iter38_reg;
        brmerge_i_reg_718_pp0_iter3_reg <= brmerge_i_reg_718_pp0_iter2_reg;
        brmerge_i_reg_718_pp0_iter40_reg <= brmerge_i_reg_718_pp0_iter39_reg;
        brmerge_i_reg_718_pp0_iter41_reg <= brmerge_i_reg_718_pp0_iter40_reg;
        brmerge_i_reg_718_pp0_iter42_reg <= brmerge_i_reg_718_pp0_iter41_reg;
        brmerge_i_reg_718_pp0_iter43_reg <= brmerge_i_reg_718_pp0_iter42_reg;
        brmerge_i_reg_718_pp0_iter44_reg <= brmerge_i_reg_718_pp0_iter43_reg;
        brmerge_i_reg_718_pp0_iter45_reg <= brmerge_i_reg_718_pp0_iter44_reg;
        brmerge_i_reg_718_pp0_iter4_reg <= brmerge_i_reg_718_pp0_iter3_reg;
        brmerge_i_reg_718_pp0_iter5_reg <= brmerge_i_reg_718_pp0_iter4_reg;
        brmerge_i_reg_718_pp0_iter6_reg <= brmerge_i_reg_718_pp0_iter5_reg;
        brmerge_i_reg_718_pp0_iter7_reg <= brmerge_i_reg_718_pp0_iter6_reg;
        brmerge_i_reg_718_pp0_iter8_reg <= brmerge_i_reg_718_pp0_iter7_reg;
        brmerge_i_reg_718_pp0_iter9_reg <= brmerge_i_reg_718_pp0_iter8_reg;
        exitcond_reg_691_pp0_iter2_reg <= exitcond_reg_691_pp0_iter1_reg;
        icmp1_reg_723_pp0_iter10_reg <= icmp1_reg_723_pp0_iter9_reg;
        icmp1_reg_723_pp0_iter11_reg <= icmp1_reg_723_pp0_iter10_reg;
        icmp1_reg_723_pp0_iter12_reg <= icmp1_reg_723_pp0_iter11_reg;
        icmp1_reg_723_pp0_iter13_reg <= icmp1_reg_723_pp0_iter12_reg;
        icmp1_reg_723_pp0_iter14_reg <= icmp1_reg_723_pp0_iter13_reg;
        icmp1_reg_723_pp0_iter15_reg <= icmp1_reg_723_pp0_iter14_reg;
        icmp1_reg_723_pp0_iter16_reg <= icmp1_reg_723_pp0_iter15_reg;
        icmp1_reg_723_pp0_iter17_reg <= icmp1_reg_723_pp0_iter16_reg;
        icmp1_reg_723_pp0_iter18_reg <= icmp1_reg_723_pp0_iter17_reg;
        icmp1_reg_723_pp0_iter19_reg <= icmp1_reg_723_pp0_iter18_reg;
        icmp1_reg_723_pp0_iter20_reg <= icmp1_reg_723_pp0_iter19_reg;
        icmp1_reg_723_pp0_iter21_reg <= icmp1_reg_723_pp0_iter20_reg;
        icmp1_reg_723_pp0_iter22_reg <= icmp1_reg_723_pp0_iter21_reg;
        icmp1_reg_723_pp0_iter23_reg <= icmp1_reg_723_pp0_iter22_reg;
        icmp1_reg_723_pp0_iter24_reg <= icmp1_reg_723_pp0_iter23_reg;
        icmp1_reg_723_pp0_iter25_reg <= icmp1_reg_723_pp0_iter24_reg;
        icmp1_reg_723_pp0_iter26_reg <= icmp1_reg_723_pp0_iter25_reg;
        icmp1_reg_723_pp0_iter27_reg <= icmp1_reg_723_pp0_iter26_reg;
        icmp1_reg_723_pp0_iter28_reg <= icmp1_reg_723_pp0_iter27_reg;
        icmp1_reg_723_pp0_iter29_reg <= icmp1_reg_723_pp0_iter28_reg;
        icmp1_reg_723_pp0_iter2_reg <= icmp1_reg_723_pp0_iter1_reg;
        icmp1_reg_723_pp0_iter30_reg <= icmp1_reg_723_pp0_iter29_reg;
        icmp1_reg_723_pp0_iter31_reg <= icmp1_reg_723_pp0_iter30_reg;
        icmp1_reg_723_pp0_iter32_reg <= icmp1_reg_723_pp0_iter31_reg;
        icmp1_reg_723_pp0_iter33_reg <= icmp1_reg_723_pp0_iter32_reg;
        icmp1_reg_723_pp0_iter34_reg <= icmp1_reg_723_pp0_iter33_reg;
        icmp1_reg_723_pp0_iter35_reg <= icmp1_reg_723_pp0_iter34_reg;
        icmp1_reg_723_pp0_iter36_reg <= icmp1_reg_723_pp0_iter35_reg;
        icmp1_reg_723_pp0_iter37_reg <= icmp1_reg_723_pp0_iter36_reg;
        icmp1_reg_723_pp0_iter38_reg <= icmp1_reg_723_pp0_iter37_reg;
        icmp1_reg_723_pp0_iter39_reg <= icmp1_reg_723_pp0_iter38_reg;
        icmp1_reg_723_pp0_iter3_reg <= icmp1_reg_723_pp0_iter2_reg;
        icmp1_reg_723_pp0_iter40_reg <= icmp1_reg_723_pp0_iter39_reg;
        icmp1_reg_723_pp0_iter41_reg <= icmp1_reg_723_pp0_iter40_reg;
        icmp1_reg_723_pp0_iter42_reg <= icmp1_reg_723_pp0_iter41_reg;
        icmp1_reg_723_pp0_iter43_reg <= icmp1_reg_723_pp0_iter42_reg;
        icmp1_reg_723_pp0_iter44_reg <= icmp1_reg_723_pp0_iter43_reg;
        icmp1_reg_723_pp0_iter45_reg <= icmp1_reg_723_pp0_iter44_reg;
        icmp1_reg_723_pp0_iter4_reg <= icmp1_reg_723_pp0_iter3_reg;
        icmp1_reg_723_pp0_iter5_reg <= icmp1_reg_723_pp0_iter4_reg;
        icmp1_reg_723_pp0_iter6_reg <= icmp1_reg_723_pp0_iter5_reg;
        icmp1_reg_723_pp0_iter7_reg <= icmp1_reg_723_pp0_iter6_reg;
        icmp1_reg_723_pp0_iter8_reg <= icmp1_reg_723_pp0_iter7_reg;
        icmp1_reg_723_pp0_iter9_reg <= icmp1_reg_723_pp0_iter8_reg;
        or_cond_i_reg_728_pp0_iter10_reg <= or_cond_i_reg_728_pp0_iter9_reg;
        or_cond_i_reg_728_pp0_iter11_reg <= or_cond_i_reg_728_pp0_iter10_reg;
        or_cond_i_reg_728_pp0_iter12_reg <= or_cond_i_reg_728_pp0_iter11_reg;
        or_cond_i_reg_728_pp0_iter13_reg <= or_cond_i_reg_728_pp0_iter12_reg;
        or_cond_i_reg_728_pp0_iter14_reg <= or_cond_i_reg_728_pp0_iter13_reg;
        or_cond_i_reg_728_pp0_iter15_reg <= or_cond_i_reg_728_pp0_iter14_reg;
        or_cond_i_reg_728_pp0_iter16_reg <= or_cond_i_reg_728_pp0_iter15_reg;
        or_cond_i_reg_728_pp0_iter17_reg <= or_cond_i_reg_728_pp0_iter16_reg;
        or_cond_i_reg_728_pp0_iter18_reg <= or_cond_i_reg_728_pp0_iter17_reg;
        or_cond_i_reg_728_pp0_iter19_reg <= or_cond_i_reg_728_pp0_iter18_reg;
        or_cond_i_reg_728_pp0_iter20_reg <= or_cond_i_reg_728_pp0_iter19_reg;
        or_cond_i_reg_728_pp0_iter21_reg <= or_cond_i_reg_728_pp0_iter20_reg;
        or_cond_i_reg_728_pp0_iter22_reg <= or_cond_i_reg_728_pp0_iter21_reg;
        or_cond_i_reg_728_pp0_iter23_reg <= or_cond_i_reg_728_pp0_iter22_reg;
        or_cond_i_reg_728_pp0_iter24_reg <= or_cond_i_reg_728_pp0_iter23_reg;
        or_cond_i_reg_728_pp0_iter25_reg <= or_cond_i_reg_728_pp0_iter24_reg;
        or_cond_i_reg_728_pp0_iter26_reg <= or_cond_i_reg_728_pp0_iter25_reg;
        or_cond_i_reg_728_pp0_iter27_reg <= or_cond_i_reg_728_pp0_iter26_reg;
        or_cond_i_reg_728_pp0_iter28_reg <= or_cond_i_reg_728_pp0_iter27_reg;
        or_cond_i_reg_728_pp0_iter29_reg <= or_cond_i_reg_728_pp0_iter28_reg;
        or_cond_i_reg_728_pp0_iter2_reg <= or_cond_i_reg_728_pp0_iter1_reg;
        or_cond_i_reg_728_pp0_iter30_reg <= or_cond_i_reg_728_pp0_iter29_reg;
        or_cond_i_reg_728_pp0_iter31_reg <= or_cond_i_reg_728_pp0_iter30_reg;
        or_cond_i_reg_728_pp0_iter32_reg <= or_cond_i_reg_728_pp0_iter31_reg;
        or_cond_i_reg_728_pp0_iter33_reg <= or_cond_i_reg_728_pp0_iter32_reg;
        or_cond_i_reg_728_pp0_iter34_reg <= or_cond_i_reg_728_pp0_iter33_reg;
        or_cond_i_reg_728_pp0_iter35_reg <= or_cond_i_reg_728_pp0_iter34_reg;
        or_cond_i_reg_728_pp0_iter36_reg <= or_cond_i_reg_728_pp0_iter35_reg;
        or_cond_i_reg_728_pp0_iter37_reg <= or_cond_i_reg_728_pp0_iter36_reg;
        or_cond_i_reg_728_pp0_iter38_reg <= or_cond_i_reg_728_pp0_iter37_reg;
        or_cond_i_reg_728_pp0_iter39_reg <= or_cond_i_reg_728_pp0_iter38_reg;
        or_cond_i_reg_728_pp0_iter3_reg <= or_cond_i_reg_728_pp0_iter2_reg;
        or_cond_i_reg_728_pp0_iter40_reg <= or_cond_i_reg_728_pp0_iter39_reg;
        or_cond_i_reg_728_pp0_iter41_reg <= or_cond_i_reg_728_pp0_iter40_reg;
        or_cond_i_reg_728_pp0_iter42_reg <= or_cond_i_reg_728_pp0_iter41_reg;
        or_cond_i_reg_728_pp0_iter43_reg <= or_cond_i_reg_728_pp0_iter42_reg;
        or_cond_i_reg_728_pp0_iter44_reg <= or_cond_i_reg_728_pp0_iter43_reg;
        or_cond_i_reg_728_pp0_iter45_reg <= or_cond_i_reg_728_pp0_iter44_reg;
        or_cond_i_reg_728_pp0_iter4_reg <= or_cond_i_reg_728_pp0_iter3_reg;
        or_cond_i_reg_728_pp0_iter5_reg <= or_cond_i_reg_728_pp0_iter4_reg;
        or_cond_i_reg_728_pp0_iter6_reg <= or_cond_i_reg_728_pp0_iter5_reg;
        or_cond_i_reg_728_pp0_iter7_reg <= or_cond_i_reg_728_pp0_iter6_reg;
        or_cond_i_reg_728_pp0_iter8_reg <= or_cond_i_reg_728_pp0_iter7_reg;
        or_cond_i_reg_728_pp0_iter9_reg <= or_cond_i_reg_728_pp0_iter8_reg;
        tmp_89_i_reg_700_pp0_iter2_reg <= tmp_89_i_reg_700_pp0_iter1_reg;
        tmp_92_i_reg_737 <= tmp_92_i_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_718 <= brmerge_i_fu_438_p2;
        icmp1_reg_723 <= icmp1_fu_453_p2;
        or_cond_i_reg_728 <= or_cond_i_fu_465_p2;
        tmp_89_i_reg_700 <= tmp_89_i_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_718_pp0_iter1_reg <= brmerge_i_reg_718;
        exitcond_reg_691 <= exitcond_fu_411_p2;
        exitcond_reg_691_pp0_iter1_reg <= exitcond_reg_691;
        icmp1_reg_723_pp0_iter1_reg <= icmp1_reg_723;
        or_cond_i_reg_728_pp0_iter1_reg <= or_cond_i_reg_728;
        tmp_87_i_reg_684[12 : 0] <= tmp_87_i_fu_405_p1[12 : 0];
        tmp_87_i_reg_684_pp0_iter1_reg[12 : 0] <= tmp_87_i_reg_684[12 : 0];
        tmp_89_i_reg_700_pp0_iter1_reg <= tmp_89_i_reg_700;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_i_fu_422_p2 == 1'd1) & (exitcond_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_1_addr_reg_707 <= tmp_87_i_fu_405_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_C_val_0_0_2_fu_154 <= srcImg_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_691_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_C_val_0_0_fu_138 <= buff_C_val_0_0_1_fu_539_p3;
        buff_C_val_2_0_2_fu_150 <= buff_C_val_2_0_1_fu_532_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_i_reg_700 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_C_val_1_0_fu_134 <= buff_A_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_691_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_C_val_1_1_1_fu_146 <= buff_C_val_1_1_fu_142;
        buff_C_val_1_1_fu_142 <= buff_C_val_1_0_1_fu_489_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_679 <= icmp_fu_399_p2;
        rev_reg_674 <= rev_fu_383_p2;
        tmp_86_i_reg_669 <= tmp_86_i_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_reg_664 <= row_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_4_reg_650 <= tmp_4_fu_349_p2;
        tmp_7_reg_655 <= tmp_7_fu_355_p2;
        tmp_83_cast_i_cast_reg_639[11 : 0] <= tmp_83_cast_i_cast_fu_341_p1[11 : 0];
        tmp_84_cast_i_cast_reg_645[11 : 0] <= tmp_84_cast_i_cast_fu_345_p1[11 : 0];
    end
end

always @ (*) begin
    if ((exitcond_fu_411_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_0_ce0 = 1'b1;
    end else begin
        buff_A_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_0_ce1 = 1'b1;
    end else begin
        buff_A_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_0_we1 = 1'b1;
    end else begin
        buff_A_val_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_1_ce0 = 1'b1;
    end else begin
        buff_A_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_1_ce1 = 1'b1;
    end else begin
        buff_A_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_89_i_reg_700 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_1_we1 = 1'b1;
    end else begin
        buff_A_val_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_2_ce0 = 1'b1;
    end else begin
        buff_A_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_2_ce1 = 1'b1;
    end else begin
        buff_A_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_89_i_reg_700 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buff_A_val_2_we0 = 1'b1;
    end else begin
        buff_A_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        dstImg_data_stream_V_blk_n = dstImg_data_stream_V_full_n;
    end else begin
        dstImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (ap_enable_reg_pp0_iter46 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dstImg_data_stream_V_write = 1'b1;
    end else begin
        dstImg_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_314_ce = 1'b1;
    end else begin
        grp_fu_314_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_320_ce = 1'b1;
    end else begin
        grp_fu_320_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_324_ce = 1'b1;
    end else begin
        grp_fu_324_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_328_ce = 1'b1;
    end else begin
        grp_fu_328_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_pown_generic_float_s_fu_276_ap_ce = 1'b1;
    end else begin
        grp_pown_generic_float_s_fu_276_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_pown_generic_float_s_fu_295_ap_ce = 1'b1;
    end else begin
        grp_pown_generic_float_s_fu_295_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_blk_n = srcImg_cols_V_empty_n;
    end else begin
        srcImg_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_cols_V_read = 1'b1;
    end else begin
        srcImg_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        srcImg_data_stream_V_blk_n = srcImg_data_stream_V_empty_n;
    end else begin
        srcImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcImg_data_stream_V_read = 1'b1;
    end else begin
        srcImg_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_blk_n = srcImg_rows_V_empty_n;
    end else begin
        srcImg_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        srcImg_rows_V_read = 1'b1;
    end else begin
        srcImg_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_fu_411_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter45 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter46 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter45 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((exitcond_fu_411_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (dstImg_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((srcImg_cols_V_empty_n == 1'b0) | (srcImg_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp0_stage0_iter46 = ((or_cond_i_reg_728_pp0_iter45_reg == 1'd1) & (dstImg_data_stream_V_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((brmerge_i_reg_718_pp0_iter1_reg == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign brmerge1_i_fu_579_p2 = (icmp_reg_679 | brmerge_i_reg_718_pp0_iter45_reg);

assign brmerge_i_fu_438_p2 = (rev_reg_674 | rev1_fu_432_p2);

assign buff_A_val_0_address0 = tmp_87_i_fu_405_p1;

assign buff_A_val_0_address1 = tmp_87_i_reg_684_pp0_iter1_reg;

assign buff_A_val_1_address0 = tmp_87_i_fu_405_p1;

assign buff_A_val_2_address0 = tmp_87_i_reg_684;

assign buff_A_val_2_address1 = tmp_87_i_reg_684_pp0_iter1_reg;

assign buff_C_val_0_0_1_fu_539_p3 = ((tmp_89_i_reg_700_pp0_iter2_reg[0:0] === 1'b1) ? buff_C_val_0_0_2_fu_154 : buff_C_val_0_0_fu_138);

assign buff_C_val_1_0_1_fu_489_p3 = ((tmp_89_i_reg_700_pp0_iter1_reg[0:0] === 1'b1) ? buff_C_val_1_0_fu_134 : buff_C_val_1_1_fu_142);

assign buff_C_val_2_0_1_fu_532_p3 = ((tmp_89_i_reg_700_pp0_iter2_reg[0:0] === 1'b1) ? buff_A_val_2_q1 : buff_C_val_2_0_2_fu_150);

assign col_fu_416_p2 = (col_assign_reg_265 + 13'd1);

assign cols_V_fu_337_p1 = $signed(srcImg_cols_V_dout);

assign dstImg_data_stream_V_din = ((sel_tmp1_fu_589_p2[0:0] === 1'b1) ? Temp_f2_reg_767 : 32'd0);

assign exitcond1_fu_361_p2 = ((row_i_reg_254 == tmp_7_reg_655) ? 1'b1 : 1'b0);

assign exitcond_fu_411_p2 = ((col_assign_reg_265 == tmp_4_reg_650) ? 1'b1 : 1'b0);

assign grp_fu_320_p0 = $signed(tmp_92_i_reg_737);

assign grp_fu_324_p0 = $signed(tmp_95_i_fu_558_p2);

assign grp_pown_generic_float_s_fu_276_ap_start = grp_pown_generic_float_s_fu_276_ap_start_reg;

assign grp_pown_generic_float_s_fu_295_ap_start = grp_pown_generic_float_s_fu_295_ap_start_reg;

assign icmp1_fu_453_p2 = ((tmp_66_fu_443_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_fu_399_p2 = ((tmp_fu_389_p4 == 12'd0) ? 1'b1 : 1'b0);

assign or_cond_i_fu_465_p2 = (tmp_99_i_fu_459_p2 & tmp_86_i_reg_669);

assign rev1_fu_432_p2 = (ult1_fu_427_p2 ^ 1'd1);

assign rev_fu_383_p2 = (ult_fu_378_p2 ^ 1'd1);

assign row_fu_366_p2 = (row_i_reg_254 + 13'd1);

assign rows_V_fu_333_p1 = $signed(srcImg_rows_V_dout);

assign sel_tmp1_fu_589_p2 = (sel_tmp_fu_583_p2 & icmp1_reg_723_pp0_iter45_reg);

assign sel_tmp_fu_583_p2 = (brmerge1_i_fu_579_p2 ^ 1'd1);

assign start_out = real_start;

assign tmp_4_fu_349_p2 = (tmp_83_cast_i_cast_fu_341_p1 + 13'd1);

assign tmp_66_fu_443_p4 = {{col_assign_reg_265[12:1]}};

assign tmp_7_fu_355_p2 = (tmp_84_cast_i_cast_fu_345_p1 + 13'd1);

assign tmp_83_cast_i_cast_fu_341_p1 = $unsigned(cols_V_fu_337_p1);

assign tmp_84_cast_i_cast_fu_345_p1 = $unsigned(rows_V_fu_333_p1);

assign tmp_86_i_fu_372_p2 = ((row_i_reg_254 != 13'd0) ? 1'b1 : 1'b0);

assign tmp_87_i_fu_405_p1 = col_assign_reg_265;

assign tmp_89_i_fu_422_p2 = ((col_assign_reg_265 < tmp_83_cast_i_cast_reg_639) ? 1'b1 : 1'b0);

assign tmp_90_cast_i_fu_496_p1 = buff_C_val_1_0_1_fu_489_p3;

assign tmp_91_cast_i_fu_500_p1 = buff_C_val_1_1_1_fu_146;

assign tmp_92_i_fu_504_p2 = (tmp_90_cast_i_fu_496_p1 - tmp_91_cast_i_fu_500_p1);

assign tmp_93_cast_i_fu_550_p1 = buff_C_val_0_0_fu_138;

assign tmp_94_cast_i_fu_554_p1 = buff_C_val_2_0_2_fu_150;

assign tmp_95_i_fu_558_p2 = (tmp_93_cast_i_fu_550_p1 - tmp_94_cast_i_fu_554_p1);

assign tmp_99_i_fu_459_p2 = ((col_assign_reg_265 != 13'd0) ? 1'b1 : 1'b0);

assign tmp_fu_389_p4 = {{row_i_reg_254[12:1]}};

assign ult1_fu_427_p2 = ((col_assign_reg_265 < tmp_83_cast_i_cast_reg_639) ? 1'b1 : 1'b0);

assign ult_fu_378_p2 = ((row_i_reg_254 < tmp_84_cast_i_cast_reg_645) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_83_cast_i_cast_reg_639[12] <= 1'b0;
    tmp_84_cast_i_cast_reg_645[12] <= 1'b0;
    tmp_87_i_reg_684[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    tmp_87_i_reg_684_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //get_grads_opr
