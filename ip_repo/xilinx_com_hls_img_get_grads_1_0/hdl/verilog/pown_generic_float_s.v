// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pown_generic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        base_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] base_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] pow_reduce_anonymo_7_address0;
reg    pow_reduce_anonymo_7_ce0;
wire   [5:0] pow_reduce_anonymo_7_q0;
wire   [5:0] pow_reduce_anonymo_6_address0;
reg    pow_reduce_anonymo_6_ce0;
wire   [55:0] pow_reduce_anonymo_6_q0;
wire   [3:0] pow_reduce_anonymo_9_address0;
reg    pow_reduce_anonymo_9_ce0;
wire   [51:0] pow_reduce_anonymo_9_q0;
wire   [5:0] pow_reduce_anonymo_10_address0;
reg    pow_reduce_anonymo_10_ce0;
wire   [48:0] pow_reduce_anonymo_10_q0;
wire   [5:0] pow_reduce_anonymo_8_address0;
reg    pow_reduce_anonymo_8_ce0;
wire   [43:0] pow_reduce_anonymo_8_q0;
wire   [8:0] pow_reduce_anonymo_11_address0;
reg    pow_reduce_anonymo_11_ce0;
wire   [26:0] pow_reduce_anonymo_11_q0;
wire   [4:0] pow_reduce_anonymo_address0;
reg    pow_reduce_anonymo_ce0;
wire   [7:0] pow_reduce_anonymo_q0;
reg   [7:0] loc_V_reg_1505;
reg   [7:0] loc_V_reg_1505_pp0_iter1_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter2_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter3_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter4_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter5_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter6_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter7_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter8_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter9_reg;
reg   [7:0] loc_V_reg_1505_pp0_iter10_reg;
wire   [22:0] loc_V_1_fu_358_p1;
reg   [22:0] loc_V_1_reg_1512;
reg   [22:0] loc_V_1_reg_1512_pp0_iter1_reg;
reg   [0:0] tmp_32_reg_1520;
reg   [0:0] tmp_32_reg_1520_pp0_iter1_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter2_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter3_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter4_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter5_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter6_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter7_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter8_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter9_reg;
reg   [0:0] tmp_32_reg_1520_pp0_iter10_reg;
reg   [5:0] b_frac_tilde_inverse_reg_1536;
reg   [55:0] log_sum_V_reg_1541;
reg   [55:0] log_sum_V_reg_1541_pp0_iter2_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter3_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter4_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter5_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter6_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter7_reg;
reg   [55:0] log_sum_V_reg_1541_pp0_iter8_reg;
wire   [0:0] tmp_i_37_fu_386_p2;
reg   [0:0] tmp_i_37_reg_1546;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter3_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter4_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter5_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter6_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter7_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter8_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter9_reg;
reg   [0:0] tmp_i_37_reg_1546_pp0_iter10_reg;
wire   [0:0] tmp_i1_fu_391_p2;
reg   [0:0] tmp_i1_reg_1551;
reg   [0:0] tmp_i1_reg_1551_pp0_iter3_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter4_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter5_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter6_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter7_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter8_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter9_reg;
reg   [0:0] tmp_i1_reg_1551_pp0_iter10_reg;
wire   [24:0] p_Val2_6_fu_426_p2;
reg   [24:0] p_Val2_6_reg_1556;
reg   [24:0] p_Val2_6_reg_1556_pp0_iter3_reg;
reg   [3:0] p_Val2_s_reg_1565;
reg   [3:0] p_Val2_s_reg_1565_pp0_iter3_reg;
reg   [3:0] p_Val2_s_reg_1565_pp0_iter4_reg;
reg   [3:0] p_Val2_s_reg_1565_pp0_iter5_reg;
reg   [3:0] p_Val2_s_reg_1565_pp0_iter6_reg;
reg   [3:0] p_Val2_s_reg_1565_pp0_iter7_reg;
wire   [42:0] p_Val2_1_fu_456_p2;
reg   [42:0] p_Val2_1_reg_1571;
reg   [40:0] p_Val2_48_reg_1576;
reg   [5:0] p_Val2_72_reg_1582;
reg   [5:0] p_Val2_72_reg_1582_pp0_iter5_reg;
reg   [5:0] p_Val2_72_reg_1582_pp0_iter6_reg;
reg   [34:0] tmp_14_reg_1588;
wire   [49:0] p_Val2_3_fu_589_p2;
reg   [49:0] p_Val2_3_reg_1593;
reg   [49:0] p_Val2_3_reg_1593_pp0_iter6_reg;
wire   [46:0] grp_fu_601_p2;
reg   [46:0] p_Val2_7_reg_1608;
reg   [43:0] p_Val2_51_reg_1613;
reg   [43:0] p_Val2_51_reg_1613_pp0_iter8_reg;
reg   [43:0] p_Val2_51_reg_1613_pp0_iter9_reg;
reg   [43:0] p_Val2_51_reg_1613_pp0_iter10_reg;
wire   [5:0] p_Val2_73_fu_641_p4;
reg   [5:0] p_Val2_73_reg_1624;
reg   [37:0] tmp_19_reg_1629;
reg   [37:0] tmp_19_reg_1629_pp0_iter8_reg;
reg   [37:0] tmp_19_reg_1629_pp0_iter9_reg;
reg   [37:0] tmp_19_reg_1629_pp0_iter10_reg;
wire   [49:0] tmp8_fu_690_p2;
reg   [49:0] tmp8_reg_1654;
wire  signed [55:0] log_sum_V_1_fu_708_p2;
reg  signed [55:0] log_sum_V_1_reg_1659;
reg  signed [55:0] log_sum_V_1_reg_1659_pp0_iter10_reg;
reg  signed [55:0] log_sum_V_1_reg_1659_pp0_iter11_reg;
reg  signed [55:0] log_sum_V_1_reg_1659_pp0_iter12_reg;
reg  signed [55:0] log_sum_V_1_reg_1659_pp0_iter13_reg;
wire   [49:0] grp_fu_680_p2;
reg   [49:0] p_Val2_14_reg_1665;
wire   [0:0] not_demorgan_fu_722_p2;
reg   [0:0] not_demorgan_reg_1670;
reg   [0:0] not_demorgan_reg_1670_pp0_iter12_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter13_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter14_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter15_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter16_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter17_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter18_reg;
reg   [0:0] not_demorgan_reg_1670_pp0_iter19_reg;
wire   [0:0] tmp_4_fu_727_p2;
reg   [0:0] tmp_4_reg_1677;
reg   [0:0] tmp_4_reg_1677_pp0_iter12_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter13_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter14_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter15_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter16_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter17_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter18_reg;
reg   [0:0] tmp_4_reg_1677_pp0_iter19_reg;
wire   [0:0] not_1_demorgan_fu_732_p2;
reg   [0:0] not_1_demorgan_reg_1683;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter12_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter13_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter14_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter15_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter16_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter17_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter18_reg;
reg   [0:0] not_1_demorgan_reg_1683_pp0_iter19_reg;
wire   [8:0] b_exp_fu_744_p2;
reg  signed [8:0] b_exp_reg_1689;
reg   [38:0] tmp_23_reg_1694;
reg   [38:0] tmp_23_reg_1694_pp0_iter12_reg;
reg   [22:0] ssdm_int_V_write_ass_3_reg_1699;
reg   [44:0] tmp_5_reg_1709;
wire   [51:0] grp_fu_818_p2;
reg   [51:0] p_Val2_5_reg_1714;
reg  signed [39:0] tmp_15_reg_1719;
reg   [35:0] p_Val2_58_reg_1725;
reg   [35:0] p_Val2_58_reg_1725_pp0_iter15_reg;
reg   [35:0] p_Val2_58_reg_1725_pp0_iter16_reg;
reg  signed [12:0] tmp_16_reg_1730;
reg   [0:0] tmp_43_reg_1735;
wire   [0:0] tmp_31_fu_1016_p2;
reg   [0:0] tmp_31_reg_1740;
reg   [0:0] tmp_31_reg_1740_pp0_iter15_reg;
reg   [0:0] tmp_31_reg_1740_pp0_iter16_reg;
reg   [0:0] tmp_31_reg_1740_pp0_iter17_reg;
reg   [0:0] tmp_31_reg_1740_pp0_iter18_reg;
reg   [0:0] tmp_31_reg_1740_pp0_iter19_reg;
reg   [0:0] tmp_63_reg_1745;
reg   [0:0] tmp_63_reg_1745_pp0_iter15_reg;
reg   [0:0] tmp_63_reg_1745_pp0_iter16_reg;
reg   [0:0] tmp_63_reg_1745_pp0_iter17_reg;
reg   [0:0] tmp_63_reg_1745_pp0_iter18_reg;
reg   [0:0] tmp_63_reg_1745_pp0_iter19_reg;
wire  signed [9:0] r_exp_V_3_fu_1083_p3;
reg  signed [9:0] r_exp_V_3_reg_1751;
reg  signed [9:0] r_exp_V_3_reg_1751_pp0_iter16_reg;
reg  signed [9:0] r_exp_V_3_reg_1751_pp0_iter17_reg;
reg  signed [9:0] r_exp_V_3_reg_1751_pp0_iter18_reg;
reg  signed [9:0] r_exp_V_3_reg_1751_pp0_iter19_reg;
reg   [35:0] p_Val2_62_reg_1758;
wire   [17:0] p_Val2_64_fu_1132_p1;
reg   [17:0] p_Val2_64_reg_1763;
reg   [26:0] p_Val2_67_reg_1778;
reg   [17:0] exp_Z1P_m_1_V_reg_1783;
reg   [17:0] tmp_24_reg_1788;
wire   [27:0] p_Val2_68_fu_1192_p2;
reg   [27:0] p_Val2_68_reg_1793;
wire   [35:0] p_Val2_10_fu_1499_p2;
reg   [35:0] p_Val2_10_reg_1798;
wire   [26:0] tmp_59_fu_1204_p1;
reg   [26:0] tmp_59_reg_1805;
wire   [25:0] tmp_60_fu_1208_p1;
reg   [25:0] tmp_60_reg_1810;
wire   [0:0] sel_tmp5_fu_1402_p2;
reg   [0:0] sel_tmp5_reg_1815;
wire   [31:0] tmp_50_fu_1448_p3;
reg   [31:0] tmp_50_reg_1820;
wire   [0:0] tmp_52_fu_1456_p2;
reg   [0:0] tmp_52_reg_1825;
wire   [0:0] tmp_54_fu_1462_p2;
reg   [0:0] tmp_54_reg_1830;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_s_fu_380_p1;
wire   [63:0] tmp_65_i_i_fu_637_p1;
wire   [63:0] tmp_81_i_i_fu_661_p1;
wire   [63:0] tmp_73_i_i_fu_666_p1;
wire   [63:0] tmp_22_fu_1136_p1;
wire   [63:0] tmp_i1_38_fu_1151_p1;
wire   [31:0] p_Val2_25_fu_344_p1;
wire   [5:0] index0_V_fu_370_p4;
wire   [23:0] tmp_1_fu_405_p3;
wire   [24:0] tmp_3_fu_412_p1;
wire   [24:0] p_Result_s_fu_396_p4;
wire  signed [24:0] tmp_2_fu_416_p3;
wire   [5:0] p_Val2_6_fu_426_p1;
wire   [38:0] p_Val2_33_fu_442_p3;
wire   [38:0] p_Val2_1_fu_456_p0;
wire   [3:0] p_Val2_1_fu_456_p1;
wire   [42:0] sf_fu_472_p4;
wire   [0:0] tmp_40_fu_465_p3;
wire   [43:0] tmp_11_fu_481_p4;
wire   [43:0] tmp_12_fu_490_p1;
wire   [20:0] tmp_34_fu_462_p1;
wire   [42:0] tmp_68_i_i_fu_502_p3;
wire   [43:0] p_Val2_37_fu_494_p3;
wire   [44:0] tmp_69_i_i_fu_514_p1;
wire   [44:0] tmp_68_i_i_cast_fu_510_p1;
wire   [44:0] p_Val2_43_fu_518_p2;
wire   [45:0] tmp_70_i_i_fu_524_p1;
wire   [45:0] tmp_71_i_i_fu_528_p1;
wire   [45:0] p_Val2_44_fu_531_p2;
wire   [48:0] tmp_59_i_i_fu_574_p3;
wire   [48:0] p_Val2_2_fu_567_p3;
wire   [49:0] tmp_59_i_i_cast_fu_581_p1;
wire   [49:0] tmp_60_i_i_fu_585_p1;
wire   [40:0] grp_fu_601_p0;
wire   [5:0] grp_fu_601_p1;
wire   [47:0] tmp_63_i_i_fu_610_p3;
wire   [50:0] tmp_61_i_i_fu_607_p1;
wire   [50:0] tmp_63_i_i_cast_fu_617_p1;
wire   [50:0] p_Val2_8_fu_621_p2;
wire   [43:0] grp_fu_680_p0;
wire   [5:0] grp_fu_680_p1;
wire   [49:0] ssdm_int_V_write_ass_1_fu_670_p1;
wire   [49:0] ssdm_int_V_write_ass_2_fu_686_p1;
wire   [55:0] ssdm_int_V_write_ass_fu_696_p1;
wire   [55:0] tmp35_cast_fu_705_p1;
wire   [55:0] tmp_fu_700_p2;
wire   [0:0] tmp_i_fu_717_p2;
wire   [8:0] i_op_assign_v_cast_c_fu_737_p3;
wire   [8:0] tmp_i_cast_fu_714_p1;
wire   [61:0] tmp_75_i_i_fu_757_p3;
wire   [56:0] p_Val2_12_fu_750_p3;
wire   [62:0] tmp_75_i_i_cast_fu_764_p1;
wire   [62:0] tmp_76_i_i_fu_768_p1;
wire   [55:0] tmp_79_i_i_fu_778_p3;
wire   [62:0] p_Val2_13_fu_772_p2;
wire   [62:0] tmp_79_i_i_cast_fu_785_p1;
wire   [62:0] p_Val2_15_fu_789_p2;
wire   [44:0] grp_fu_818_p0;
wire   [22:0] r_V_fu_827_p0;
wire   [45:0] OP1_V_6_cast_fu_824_p1;
wire   [22:0] r_V_fu_827_p1;
wire   [45:0] r_V_fu_827_p2;
wire   [62:0] tmp_6_fu_843_p3;
wire   [63:0] tmp_14_cast_fu_850_p1;
wire   [63:0] tmp_15_cast_fu_854_p1;
wire   [63:0] p_Val2_9_fu_857_p2;
wire  signed [63:0] tmp_8_fu_879_p3;
wire  signed [64:0] p_Val2_i_cast_fu_873_p1;
wire   [65:0] tmp_9_fu_890_p1;
wire  signed [65:0] tmp_18_cast_fu_886_p1;
wire   [65:0] p_Val2_4_fu_901_p2;
wire  signed [64:0] p_Val2_55_fu_876_p1;
wire  signed [64:0] tmp_28_fu_897_p1;
wire  signed [63:0] tmp_27_fu_894_p1;
wire   [66:0] tmp_7_fu_907_p1;
wire   [66:0] tmp_10_fu_911_p1;
wire   [63:0] tmp_35_fu_924_p2;
wire  signed [63:0] tmp_30_fu_921_p1;
wire   [64:0] tmp_29_fu_915_p2;
wire   [64:0] p_Val2_14_cast_fu_942_p2;
wire   [42:0] tmp_36_fu_948_p4;
wire   [41:0] tmp_37_fu_966_p4;
wire   [63:0] p_Val2_14_cast1_fu_936_p2;
wire   [66:0] p_Val2_56_fu_930_p2;
wire   [42:0] tmp_13_fu_976_p3;
wire  signed [43:0] tmp_33_cast_fu_1012_p1;
wire   [43:0] p_Val2_57_fu_958_p3;
wire  signed [15:0] tmp_17_fu_1033_p3;
wire  signed [24:0] grp_fu_1488_p3;
wire   [14:0] tmp_57_fu_1060_p1;
wire   [9:0] tmp_38_fu_1044_p4;
wire   [0:0] tmp_18_fu_1063_p2;
wire   [9:0] ret_V_2_fu_1069_p2;
wire   [0:0] tmp_56_fu_1053_p3;
wire   [9:0] p_s_fu_1075_p3;
wire  signed [9:0] p_Val2_61_fu_1094_p1;
wire   [44:0] p_Val2_61_fu_1094_p2;
wire  signed [36:0] tmp_20_fu_1110_p1;
wire  signed [36:0] tmp_21_fu_1113_p1;
wire   [36:0] p_Val2_63_fu_1116_p2;
wire   [8:0] m_diff_hi_V_fu_1122_p4;
wire   [4:0] Z2_ind_V_fu_1141_p4;
wire   [18:0] tmp_i2_fu_1156_p1;
wire   [18:0] tmp_56_i_fu_1159_p1;
wire   [18:0] p_Val2_66_fu_1163_p2;
wire   [27:0] tmp_25_fu_1189_p1;
wire   [44:0] tmp_26_fu_1212_p3;
wire   [44:0] tmp_42_cast_fu_1219_p1;
wire   [42:0] tmp_42_fu_1232_p3;
wire   [42:0] tmp_44_fu_1239_p1;
wire   [43:0] tmp_39_fu_1222_p3;
wire   [43:0] tmp_41_fu_1229_p1;
wire   [44:0] p_Val2_69_fu_1242_p2;
wire   [0:0] tmp_61_fu_1260_p3;
wire   [9:0] r_exp_V_fu_1268_p2;
wire   [9:0] r_exp_V_2_fu_1273_p3;
wire   [2:0] tmp_62_fu_1280_p4;
wire   [0:0] icmp_fu_1290_p2;
wire   [43:0] p_Val2_26_cast_fu_1254_p2;
wire   [42:0] p_Val2_26_cast2_fu_1248_p2;
wire   [22:0] tmp_45_fu_1307_p4;
wire   [22:0] tmp_46_fu_1317_p4;
wire   [7:0] tmp_64_fu_1335_p1;
wire   [7:0] out_exp_V_fu_1339_p2;
wire   [22:0] loc_V_2_fu_1327_p3;
wire   [0:0] sel_tmp1_fu_1355_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1365_p2;
wire   [0:0] sel_tmp6_fu_1369_p2;
wire   [0:0] sel_tmp13_demorgan_fu_1380_p2;
wire   [0:0] or_cond_fu_1296_p2;
wire   [0:0] sel_tmp_fu_1385_p2;
wire   [0:0] sel_tmp3_fu_1391_p2;
wire   [0:0] sel_tmp4_fu_1397_p2;
wire   [0:0] sel_tmp32_demorgan_fu_1413_p2;
wire   [0:0] tmp_33_fu_1301_p2;
wire   [0:0] sel_tmp9_fu_1419_p2;
wire   [31:0] p_Result_6_fu_1345_p4;
wire   [0:0] sel_tmp2_fu_1360_p2;
wire   [0:0] tmp_49_fu_1443_p2;
wire   [31:0] tmp_48_fu_1435_p3;
wire   [31:0] tmp_47_fu_1431_p1;
wire   [0:0] sel_tmp7_fu_1375_p2;
wire   [0:0] sel_tmp10_fu_1425_p2;
wire   [0:0] sel_tmp8_fu_1408_p2;
wire   [31:0] tmp_51_fu_1468_p3;
wire   [31:0] tmp_53_fu_1475_p3;
wire   [12:0] grp_fu_1488_p0;
wire   [17:0] p_Val2_10_fu_1499_p0;
wire   [17:0] p_Val2_10_fu_1499_p1;
reg    grp_fu_601_ce;
reg    grp_fu_680_ce;
reg    grp_fu_818_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to20;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [46:0] grp_fu_601_p00;
wire   [46:0] grp_fu_601_p10;
wire   [49:0] grp_fu_680_p00;
wire   [49:0] grp_fu_680_p10;
wire   [35:0] p_Val2_10_fu_1499_p00;
wire   [35:0] p_Val2_10_fu_1499_p10;
wire   [42:0] p_Val2_1_fu_456_p00;
wire   [42:0] p_Val2_1_fu_456_p10;
wire   [24:0] p_Val2_6_fu_426_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
end

pown_generic_floabkb #(
    .DataWidth( 6 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_7_address0),
    .ce0(pow_reduce_anonymo_7_ce0),
    .q0(pow_reduce_anonymo_7_q0)
);

pown_generic_floacud #(
    .DataWidth( 56 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_6_address0),
    .ce0(pow_reduce_anonymo_6_ce0),
    .q0(pow_reduce_anonymo_6_q0)
);

pown_generic_floadEe #(
    .DataWidth( 52 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pow_reduce_anonymo_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_9_address0),
    .ce0(pow_reduce_anonymo_9_ce0),
    .q0(pow_reduce_anonymo_9_q0)
);

pown_generic_floaeOg #(
    .DataWidth( 49 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_10_address0),
    .ce0(pow_reduce_anonymo_10_ce0),
    .q0(pow_reduce_anonymo_10_q0)
);

pown_generic_floafYi #(
    .DataWidth( 44 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_8_address0),
    .ce0(pow_reduce_anonymo_8_ce0),
    .q0(pow_reduce_anonymo_8_q0)
);

pown_generic_floag8j #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pow_reduce_anonymo_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_11_address0),
    .ce0(pow_reduce_anonymo_11_ce0),
    .q0(pow_reduce_anonymo_11_q0)
);

pown_generic_floahbi #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
pow_reduce_anonymo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_address0),
    .ce0(pow_reduce_anonymo_ce0),
    .q0(pow_reduce_anonymo_q0)
);

img_get_grads_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 47 ))
img_get_grads_mulibs_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_601_p0),
    .din1(grp_fu_601_p1),
    .ce(grp_fu_601_ce),
    .dout(grp_fu_601_p2)
);

img_get_grads_muljbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 50 ))
img_get_grads_muljbC_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_680_p0),
    .din1(grp_fu_680_p1),
    .ce(grp_fu_680_ce),
    .dout(grp_fu_680_p2)
);

img_get_grads_mulkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 52 ))
img_get_grads_mulkbM_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_818_p0),
    .din1(b_exp_reg_1689),
    .ce(grp_fu_818_ce),
    .dout(grp_fu_818_p2)
);

img_get_grads_maclbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
img_get_grads_maclbW_U18(
    .din0(grp_fu_1488_p0),
    .din1(tmp_16_reg_1730),
    .din2(tmp_17_fu_1033_p3),
    .dout(grp_fu_1488_p3)
);

img_get_grads_mulmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
img_get_grads_mulmb6_U19(
    .din0(p_Val2_10_fu_1499_p0),
    .din1(p_Val2_10_fu_1499_p1),
    .dout(p_Val2_10_fu_1499_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_exp_reg_1689 <= b_exp_fu_744_p2;
        exp_Z1P_m_1_V_reg_1783 <= {{p_Val2_66_fu_1163_p2[18:1]}};
        loc_V_reg_1505_pp0_iter10_reg <= loc_V_reg_1505_pp0_iter9_reg;
        loc_V_reg_1505_pp0_iter2_reg <= loc_V_reg_1505_pp0_iter1_reg;
        loc_V_reg_1505_pp0_iter3_reg <= loc_V_reg_1505_pp0_iter2_reg;
        loc_V_reg_1505_pp0_iter4_reg <= loc_V_reg_1505_pp0_iter3_reg;
        loc_V_reg_1505_pp0_iter5_reg <= loc_V_reg_1505_pp0_iter4_reg;
        loc_V_reg_1505_pp0_iter6_reg <= loc_V_reg_1505_pp0_iter5_reg;
        loc_V_reg_1505_pp0_iter7_reg <= loc_V_reg_1505_pp0_iter6_reg;
        loc_V_reg_1505_pp0_iter8_reg <= loc_V_reg_1505_pp0_iter7_reg;
        loc_V_reg_1505_pp0_iter9_reg <= loc_V_reg_1505_pp0_iter8_reg;
        log_sum_V_1_reg_1659 <= log_sum_V_1_fu_708_p2;
        log_sum_V_1_reg_1659_pp0_iter10_reg <= log_sum_V_1_reg_1659;
        log_sum_V_1_reg_1659_pp0_iter11_reg <= log_sum_V_1_reg_1659_pp0_iter10_reg;
        log_sum_V_1_reg_1659_pp0_iter12_reg <= log_sum_V_1_reg_1659_pp0_iter11_reg;
        log_sum_V_1_reg_1659_pp0_iter13_reg <= log_sum_V_1_reg_1659_pp0_iter12_reg;
        log_sum_V_reg_1541_pp0_iter2_reg <= log_sum_V_reg_1541;
        log_sum_V_reg_1541_pp0_iter3_reg <= log_sum_V_reg_1541_pp0_iter2_reg;
        log_sum_V_reg_1541_pp0_iter4_reg <= log_sum_V_reg_1541_pp0_iter3_reg;
        log_sum_V_reg_1541_pp0_iter5_reg <= log_sum_V_reg_1541_pp0_iter4_reg;
        log_sum_V_reg_1541_pp0_iter6_reg <= log_sum_V_reg_1541_pp0_iter5_reg;
        log_sum_V_reg_1541_pp0_iter7_reg <= log_sum_V_reg_1541_pp0_iter6_reg;
        log_sum_V_reg_1541_pp0_iter8_reg <= log_sum_V_reg_1541_pp0_iter7_reg;
        not_1_demorgan_reg_1683 <= not_1_demorgan_fu_732_p2;
        not_1_demorgan_reg_1683_pp0_iter12_reg <= not_1_demorgan_reg_1683;
        not_1_demorgan_reg_1683_pp0_iter13_reg <= not_1_demorgan_reg_1683_pp0_iter12_reg;
        not_1_demorgan_reg_1683_pp0_iter14_reg <= not_1_demorgan_reg_1683_pp0_iter13_reg;
        not_1_demorgan_reg_1683_pp0_iter15_reg <= not_1_demorgan_reg_1683_pp0_iter14_reg;
        not_1_demorgan_reg_1683_pp0_iter16_reg <= not_1_demorgan_reg_1683_pp0_iter15_reg;
        not_1_demorgan_reg_1683_pp0_iter17_reg <= not_1_demorgan_reg_1683_pp0_iter16_reg;
        not_1_demorgan_reg_1683_pp0_iter18_reg <= not_1_demorgan_reg_1683_pp0_iter17_reg;
        not_1_demorgan_reg_1683_pp0_iter19_reg <= not_1_demorgan_reg_1683_pp0_iter18_reg;
        not_demorgan_reg_1670 <= not_demorgan_fu_722_p2;
        not_demorgan_reg_1670_pp0_iter12_reg <= not_demorgan_reg_1670;
        not_demorgan_reg_1670_pp0_iter13_reg <= not_demorgan_reg_1670_pp0_iter12_reg;
        not_demorgan_reg_1670_pp0_iter14_reg <= not_demorgan_reg_1670_pp0_iter13_reg;
        not_demorgan_reg_1670_pp0_iter15_reg <= not_demorgan_reg_1670_pp0_iter14_reg;
        not_demorgan_reg_1670_pp0_iter16_reg <= not_demorgan_reg_1670_pp0_iter15_reg;
        not_demorgan_reg_1670_pp0_iter17_reg <= not_demorgan_reg_1670_pp0_iter16_reg;
        not_demorgan_reg_1670_pp0_iter18_reg <= not_demorgan_reg_1670_pp0_iter17_reg;
        not_demorgan_reg_1670_pp0_iter19_reg <= not_demorgan_reg_1670_pp0_iter18_reg;
        p_Val2_10_reg_1798 <= p_Val2_10_fu_1499_p2;
        p_Val2_14_reg_1665 <= grp_fu_680_p2;
        p_Val2_1_reg_1571 <= p_Val2_1_fu_456_p2;
        p_Val2_3_reg_1593 <= p_Val2_3_fu_589_p2;
        p_Val2_3_reg_1593_pp0_iter6_reg <= p_Val2_3_reg_1593;
        p_Val2_48_reg_1576 <= {{p_Val2_44_fu_531_p2[43:3]}};
        p_Val2_51_reg_1613 <= {{p_Val2_8_fu_621_p2[49:6]}};
        p_Val2_51_reg_1613_pp0_iter10_reg <= p_Val2_51_reg_1613_pp0_iter9_reg;
        p_Val2_51_reg_1613_pp0_iter8_reg <= p_Val2_51_reg_1613;
        p_Val2_51_reg_1613_pp0_iter9_reg <= p_Val2_51_reg_1613_pp0_iter8_reg;
        p_Val2_58_reg_1725 <= {{p_Val2_14_cast1_fu_936_p2[63:28]}};
        p_Val2_58_reg_1725_pp0_iter15_reg <= p_Val2_58_reg_1725;
        p_Val2_58_reg_1725_pp0_iter16_reg <= p_Val2_58_reg_1725_pp0_iter15_reg;
        p_Val2_5_reg_1714 <= grp_fu_818_p2;
        p_Val2_62_reg_1758 <= {{p_Val2_61_fu_1094_p2[44:9]}};
        p_Val2_64_reg_1763 <= p_Val2_64_fu_1132_p1;
        p_Val2_67_reg_1778 <= pow_reduce_anonymo_11_q0;
        p_Val2_68_reg_1793 <= p_Val2_68_fu_1192_p2;
        p_Val2_6_reg_1556 <= p_Val2_6_fu_426_p2;
        p_Val2_6_reg_1556_pp0_iter3_reg <= p_Val2_6_reg_1556;
        p_Val2_72_reg_1582 <= {{p_Val2_44_fu_531_p2[43:38]}};
        p_Val2_72_reg_1582_pp0_iter5_reg <= p_Val2_72_reg_1582;
        p_Val2_72_reg_1582_pp0_iter6_reg <= p_Val2_72_reg_1582_pp0_iter5_reg;
        p_Val2_73_reg_1624 <= {{p_Val2_8_fu_621_p2[49:44]}};
        p_Val2_7_reg_1608 <= grp_fu_601_p2;
        p_Val2_s_reg_1565 <= {{p_Val2_6_fu_426_p2[24:21]}};
        p_Val2_s_reg_1565_pp0_iter3_reg <= p_Val2_s_reg_1565;
        p_Val2_s_reg_1565_pp0_iter4_reg <= p_Val2_s_reg_1565_pp0_iter3_reg;
        p_Val2_s_reg_1565_pp0_iter5_reg <= p_Val2_s_reg_1565_pp0_iter4_reg;
        p_Val2_s_reg_1565_pp0_iter6_reg <= p_Val2_s_reg_1565_pp0_iter5_reg;
        p_Val2_s_reg_1565_pp0_iter7_reg <= p_Val2_s_reg_1565_pp0_iter6_reg;
        r_exp_V_3_reg_1751 <= r_exp_V_3_fu_1083_p3;
        r_exp_V_3_reg_1751_pp0_iter16_reg <= r_exp_V_3_reg_1751;
        r_exp_V_3_reg_1751_pp0_iter17_reg <= r_exp_V_3_reg_1751_pp0_iter16_reg;
        r_exp_V_3_reg_1751_pp0_iter18_reg <= r_exp_V_3_reg_1751_pp0_iter17_reg;
        r_exp_V_3_reg_1751_pp0_iter19_reg <= r_exp_V_3_reg_1751_pp0_iter18_reg;
        sel_tmp5_reg_1815 <= sel_tmp5_fu_1402_p2;
        ssdm_int_V_write_ass_3_reg_1699 <= {{p_Val2_15_fu_789_p2[62:40]}};
        tmp8_reg_1654 <= tmp8_fu_690_p2;
        tmp_14_reg_1588 <= {{p_Val2_44_fu_531_p2[37:3]}};
        tmp_15_reg_1719 <= {{p_Val2_9_fu_857_p2[63:24]}};
        tmp_16_reg_1730 <= {{p_Val2_14_cast1_fu_936_p2[63:51]}};
        tmp_19_reg_1629 <= {{p_Val2_8_fu_621_p2[43:6]}};
        tmp_19_reg_1629_pp0_iter10_reg <= tmp_19_reg_1629_pp0_iter9_reg;
        tmp_19_reg_1629_pp0_iter8_reg <= tmp_19_reg_1629;
        tmp_19_reg_1629_pp0_iter9_reg <= tmp_19_reg_1629_pp0_iter8_reg;
        tmp_23_reg_1694 <= {{p_Val2_15_fu_789_p2[62:24]}};
        tmp_23_reg_1694_pp0_iter12_reg <= tmp_23_reg_1694;
        tmp_24_reg_1788 <= {{pow_reduce_anonymo_11_q0[26:9]}};
        tmp_31_reg_1740 <= tmp_31_fu_1016_p2;
        tmp_31_reg_1740_pp0_iter15_reg <= tmp_31_reg_1740;
        tmp_31_reg_1740_pp0_iter16_reg <= tmp_31_reg_1740_pp0_iter15_reg;
        tmp_31_reg_1740_pp0_iter17_reg <= tmp_31_reg_1740_pp0_iter16_reg;
        tmp_31_reg_1740_pp0_iter18_reg <= tmp_31_reg_1740_pp0_iter17_reg;
        tmp_31_reg_1740_pp0_iter19_reg <= tmp_31_reg_1740_pp0_iter18_reg;
        tmp_32_reg_1520_pp0_iter10_reg <= tmp_32_reg_1520_pp0_iter9_reg;
        tmp_32_reg_1520_pp0_iter2_reg <= tmp_32_reg_1520_pp0_iter1_reg;
        tmp_32_reg_1520_pp0_iter3_reg <= tmp_32_reg_1520_pp0_iter2_reg;
        tmp_32_reg_1520_pp0_iter4_reg <= tmp_32_reg_1520_pp0_iter3_reg;
        tmp_32_reg_1520_pp0_iter5_reg <= tmp_32_reg_1520_pp0_iter4_reg;
        tmp_32_reg_1520_pp0_iter6_reg <= tmp_32_reg_1520_pp0_iter5_reg;
        tmp_32_reg_1520_pp0_iter7_reg <= tmp_32_reg_1520_pp0_iter6_reg;
        tmp_32_reg_1520_pp0_iter8_reg <= tmp_32_reg_1520_pp0_iter7_reg;
        tmp_32_reg_1520_pp0_iter9_reg <= tmp_32_reg_1520_pp0_iter8_reg;
        tmp_43_reg_1735 <= p_Val2_56_fu_930_p2[32'd63];
        tmp_4_reg_1677 <= tmp_4_fu_727_p2;
        tmp_4_reg_1677_pp0_iter12_reg <= tmp_4_reg_1677;
        tmp_4_reg_1677_pp0_iter13_reg <= tmp_4_reg_1677_pp0_iter12_reg;
        tmp_4_reg_1677_pp0_iter14_reg <= tmp_4_reg_1677_pp0_iter13_reg;
        tmp_4_reg_1677_pp0_iter15_reg <= tmp_4_reg_1677_pp0_iter14_reg;
        tmp_4_reg_1677_pp0_iter16_reg <= tmp_4_reg_1677_pp0_iter15_reg;
        tmp_4_reg_1677_pp0_iter17_reg <= tmp_4_reg_1677_pp0_iter16_reg;
        tmp_4_reg_1677_pp0_iter18_reg <= tmp_4_reg_1677_pp0_iter17_reg;
        tmp_4_reg_1677_pp0_iter19_reg <= tmp_4_reg_1677_pp0_iter18_reg;
        tmp_50_reg_1820[30 : 0] <= tmp_50_fu_1448_p3[30 : 0];
        tmp_52_reg_1825 <= tmp_52_fu_1456_p2;
        tmp_54_reg_1830 <= tmp_54_fu_1462_p2;
        tmp_59_reg_1805 <= tmp_59_fu_1204_p1;
        tmp_5_reg_1709 <= {{r_V_fu_827_p2[45:1]}};
        tmp_60_reg_1810 <= tmp_60_fu_1208_p1;
        tmp_63_reg_1745 <= p_Val2_56_fu_930_p2[32'd64];
        tmp_63_reg_1745_pp0_iter15_reg <= tmp_63_reg_1745;
        tmp_63_reg_1745_pp0_iter16_reg <= tmp_63_reg_1745_pp0_iter15_reg;
        tmp_63_reg_1745_pp0_iter17_reg <= tmp_63_reg_1745_pp0_iter16_reg;
        tmp_63_reg_1745_pp0_iter18_reg <= tmp_63_reg_1745_pp0_iter17_reg;
        tmp_63_reg_1745_pp0_iter19_reg <= tmp_63_reg_1745_pp0_iter18_reg;
        tmp_i1_reg_1551 <= tmp_i1_fu_391_p2;
        tmp_i1_reg_1551_pp0_iter10_reg <= tmp_i1_reg_1551_pp0_iter9_reg;
        tmp_i1_reg_1551_pp0_iter3_reg <= tmp_i1_reg_1551;
        tmp_i1_reg_1551_pp0_iter4_reg <= tmp_i1_reg_1551_pp0_iter3_reg;
        tmp_i1_reg_1551_pp0_iter5_reg <= tmp_i1_reg_1551_pp0_iter4_reg;
        tmp_i1_reg_1551_pp0_iter6_reg <= tmp_i1_reg_1551_pp0_iter5_reg;
        tmp_i1_reg_1551_pp0_iter7_reg <= tmp_i1_reg_1551_pp0_iter6_reg;
        tmp_i1_reg_1551_pp0_iter8_reg <= tmp_i1_reg_1551_pp0_iter7_reg;
        tmp_i1_reg_1551_pp0_iter9_reg <= tmp_i1_reg_1551_pp0_iter8_reg;
        tmp_i_37_reg_1546 <= tmp_i_37_fu_386_p2;
        tmp_i_37_reg_1546_pp0_iter10_reg <= tmp_i_37_reg_1546_pp0_iter9_reg;
        tmp_i_37_reg_1546_pp0_iter3_reg <= tmp_i_37_reg_1546;
        tmp_i_37_reg_1546_pp0_iter4_reg <= tmp_i_37_reg_1546_pp0_iter3_reg;
        tmp_i_37_reg_1546_pp0_iter5_reg <= tmp_i_37_reg_1546_pp0_iter4_reg;
        tmp_i_37_reg_1546_pp0_iter6_reg <= tmp_i_37_reg_1546_pp0_iter5_reg;
        tmp_i_37_reg_1546_pp0_iter7_reg <= tmp_i_37_reg_1546_pp0_iter6_reg;
        tmp_i_37_reg_1546_pp0_iter8_reg <= tmp_i_37_reg_1546_pp0_iter7_reg;
        tmp_i_37_reg_1546_pp0_iter9_reg <= tmp_i_37_reg_1546_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_frac_tilde_inverse_reg_1536 <= pow_reduce_anonymo_7_q0;
        loc_V_1_reg_1512 <= loc_V_1_fu_358_p1;
        loc_V_1_reg_1512_pp0_iter1_reg <= loc_V_1_reg_1512;
        loc_V_reg_1505 <= {{p_Val2_25_fu_344_p1[30:23]}};
        loc_V_reg_1505_pp0_iter1_reg <= loc_V_reg_1505;
        log_sum_V_reg_1541 <= pow_reduce_anonymo_6_q0;
        tmp_32_reg_1520 <= p_Val2_25_fu_344_p1[32'd22];
        tmp_32_reg_1520_pp0_iter1_reg <= tmp_32_reg_1520;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to20 = 1'b1;
    end else begin
        ap_idle_pp0_0to20 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to20 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_601_ce = 1'b1;
    end else begin
        grp_fu_601_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_680_ce = 1'b1;
    end else begin
        grp_fu_680_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_818_ce = 1'b1;
    end else begin
        grp_fu_818_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_10_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_11_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_6_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_7_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_8_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_9_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_6_cast_fu_824_p1 = ssdm_int_V_write_ass_3_reg_1699;

assign Z2_ind_V_fu_1141_p4 = {{p_Val2_63_fu_1116_p2[17:13]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_54_reg_1830[0:0] === 1'b1) ? 32'd0 : tmp_53_fu_1475_p3);

assign b_exp_fu_744_p2 = (i_op_assign_v_cast_c_fu_737_p3 + tmp_i_cast_fu_714_p1);

assign grp_fu_1488_p0 = 25'd2954;

assign grp_fu_601_p0 = grp_fu_601_p00;

assign grp_fu_601_p00 = p_Val2_48_reg_1576;

assign grp_fu_601_p1 = grp_fu_601_p10;

assign grp_fu_601_p10 = p_Val2_72_reg_1582;

assign grp_fu_680_p0 = grp_fu_680_p00;

assign grp_fu_680_p00 = p_Val2_51_reg_1613;

assign grp_fu_680_p1 = grp_fu_680_p10;

assign grp_fu_680_p10 = p_Val2_73_reg_1624;

assign grp_fu_818_p0 = 52'd12193974156572;

assign i_op_assign_v_cast_c_fu_737_p3 = ((tmp_32_reg_1520_pp0_iter10_reg[0:0] === 1'b1) ? 9'd386 : 9'd385);

assign icmp_fu_1290_p2 = (($signed(tmp_62_fu_1280_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign index0_V_fu_370_p4 = {{p_Val2_25_fu_344_p1[22:17]}};

assign loc_V_1_fu_358_p1 = p_Val2_25_fu_344_p1[22:0];

assign loc_V_2_fu_1327_p3 = ((tmp_61_fu_1260_p3[0:0] === 1'b1) ? tmp_45_fu_1307_p4 : tmp_46_fu_1317_p4);

assign log_sum_V_1_fu_708_p2 = (tmp35_cast_fu_705_p1 + tmp_fu_700_p2);

assign m_diff_hi_V_fu_1122_p4 = {{p_Val2_63_fu_1116_p2[26:18]}};

assign not_1_demorgan_fu_732_p2 = (tmp_i_fu_717_p2 & tmp_i1_reg_1551_pp0_iter10_reg);

assign not_demorgan_fu_722_p2 = (tmp_i_fu_717_p2 & tmp_i_37_reg_1546_pp0_iter10_reg);

assign or_cond_fu_1296_p2 = (tmp_31_reg_1740_pp0_iter19_reg | icmp_fu_1290_p2);

assign out_exp_V_fu_1339_p2 = (8'd127 + tmp_64_fu_1335_p1);

assign p_Result_6_fu_1345_p4 = {{{{1'd0}, {out_exp_V_fu_1339_p2}}}, {loc_V_2_fu_1327_p3}};

assign p_Result_s_fu_396_p4 = {{{{1'd1}, {loc_V_1_reg_1512_pp0_iter1_reg}}}, {1'd0}};

assign p_Val2_10_fu_1499_p0 = p_Val2_10_fu_1499_p00;

assign p_Val2_10_fu_1499_p00 = exp_Z1P_m_1_V_reg_1783;

assign p_Val2_10_fu_1499_p1 = p_Val2_10_fu_1499_p10;

assign p_Val2_10_fu_1499_p10 = tmp_24_reg_1788;

assign p_Val2_12_fu_750_p3 = {{13'd4096}, {p_Val2_51_reg_1613_pp0_iter10_reg}};

assign p_Val2_13_fu_772_p2 = (tmp_75_i_i_cast_fu_764_p1 + tmp_76_i_i_fu_768_p1);

assign p_Val2_14_cast1_fu_936_p2 = ($signed(tmp_35_fu_924_p2) + $signed(tmp_30_fu_921_p1));

assign p_Val2_14_cast_fu_942_p2 = ($signed(tmp_29_fu_915_p2) + $signed(p_Val2_55_fu_876_p1));

assign p_Val2_15_fu_789_p2 = (p_Val2_13_fu_772_p2 - tmp_79_i_i_cast_fu_785_p1);

assign p_Val2_1_fu_456_p0 = p_Val2_1_fu_456_p00;

assign p_Val2_1_fu_456_p00 = p_Val2_33_fu_442_p3;

assign p_Val2_1_fu_456_p1 = p_Val2_1_fu_456_p10;

assign p_Val2_1_fu_456_p10 = p_Val2_s_reg_1565;

assign p_Val2_1_fu_456_p2 = (p_Val2_1_fu_456_p0 * p_Val2_1_fu_456_p1);

assign p_Val2_25_fu_344_p1 = base_r;

assign p_Val2_26_cast2_fu_1248_p2 = (tmp_42_fu_1232_p3 + tmp_44_fu_1239_p1);

assign p_Val2_26_cast_fu_1254_p2 = (tmp_39_fu_1222_p3 + tmp_41_fu_1229_p1);

assign p_Val2_2_fu_567_p3 = {{8'd128}, {p_Val2_48_reg_1576}};

assign p_Val2_33_fu_442_p3 = {{p_Val2_6_reg_1556}, {14'd0}};

assign p_Val2_37_fu_494_p3 = ((tmp_40_fu_465_p3[0:0] === 1'b1) ? tmp_11_fu_481_p4 : tmp_12_fu_490_p1);

assign p_Val2_3_fu_589_p2 = (tmp_59_i_i_cast_fu_581_p1 + tmp_60_i_i_fu_585_p1);

assign p_Val2_43_fu_518_p2 = (tmp_69_i_i_fu_514_p1 + tmp_68_i_i_cast_fu_510_p1);

assign p_Val2_44_fu_531_p2 = (tmp_70_i_i_fu_524_p1 - tmp_71_i_i_fu_528_p1);

assign p_Val2_4_fu_901_p2 = ($signed(tmp_9_fu_890_p1) + $signed(tmp_18_cast_fu_886_p1));

assign p_Val2_55_fu_876_p1 = tmp_15_reg_1719;

assign p_Val2_56_fu_930_p2 = (tmp_7_fu_907_p1 + tmp_10_fu_911_p1);

assign p_Val2_57_fu_958_p3 = {{tmp_36_fu_948_p4}, {1'd0}};

assign p_Val2_61_fu_1094_p1 = r_exp_V_3_reg_1751;

assign p_Val2_61_fu_1094_p2 = ($signed({{1'b0}, {45'd47632711549}}) * $signed(p_Val2_61_fu_1094_p1));

assign p_Val2_63_fu_1116_p2 = ($signed(tmp_20_fu_1110_p1) - $signed(tmp_21_fu_1113_p1));

assign p_Val2_64_fu_1132_p1 = p_Val2_63_fu_1116_p2[17:0];

assign p_Val2_66_fu_1163_p2 = (tmp_i2_fu_1156_p1 + tmp_56_i_fu_1159_p1);

assign p_Val2_68_fu_1192_p2 = (28'd4 + tmp_25_fu_1189_p1);

assign p_Val2_69_fu_1242_p2 = (tmp_26_fu_1212_p3 + tmp_42_cast_fu_1219_p1);

assign p_Val2_6_fu_426_p1 = p_Val2_6_fu_426_p10;

assign p_Val2_6_fu_426_p10 = b_frac_tilde_inverse_reg_1536;

assign p_Val2_6_fu_426_p2 = ($signed(tmp_2_fu_416_p3) * $signed({{1'b0}, {p_Val2_6_fu_426_p1}}));

assign p_Val2_73_fu_641_p4 = {{p_Val2_8_fu_621_p2[49:44]}};

assign p_Val2_8_fu_621_p2 = (tmp_61_i_i_fu_607_p1 - tmp_63_i_i_cast_fu_617_p1);

assign p_Val2_9_fu_857_p2 = (tmp_14_cast_fu_850_p1 - tmp_15_cast_fu_854_p1);

assign p_Val2_i_cast_fu_873_p1 = log_sum_V_1_reg_1659_pp0_iter13_reg;

assign p_s_fu_1075_p3 = ((tmp_18_fu_1063_p2[0:0] === 1'b1) ? tmp_38_fu_1044_p4 : ret_V_2_fu_1069_p2);

assign pow_reduce_anonymo_10_address0 = tmp_65_i_i_fu_637_p1;

assign pow_reduce_anonymo_11_address0 = tmp_22_fu_1136_p1;

assign pow_reduce_anonymo_6_address0 = tmp_s_fu_380_p1;

assign pow_reduce_anonymo_7_address0 = tmp_s_fu_380_p1;

assign pow_reduce_anonymo_8_address0 = tmp_81_i_i_fu_661_p1;

assign pow_reduce_anonymo_9_address0 = tmp_73_i_i_fu_666_p1;

assign pow_reduce_anonymo_address0 = tmp_i1_38_fu_1151_p1;

assign r_V_fu_827_p0 = OP1_V_6_cast_fu_824_p1;

assign r_V_fu_827_p1 = OP1_V_6_cast_fu_824_p1;

assign r_V_fu_827_p2 = (r_V_fu_827_p0 * r_V_fu_827_p1);

assign r_exp_V_2_fu_1273_p3 = ((tmp_61_fu_1260_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1751_pp0_iter19_reg : r_exp_V_fu_1268_p2);

assign r_exp_V_3_fu_1083_p3 = ((tmp_56_fu_1053_p3[0:0] === 1'b1) ? p_s_fu_1075_p3 : tmp_38_fu_1044_p4);

assign r_exp_V_fu_1268_p2 = ($signed(10'd1023) + $signed(r_exp_V_3_reg_1751_pp0_iter19_reg));

assign ret_V_2_fu_1069_p2 = (10'd1 + tmp_38_fu_1044_p4);

assign sel_tmp10_fu_1425_p2 = (tmp_33_fu_1301_p2 & sel_tmp9_fu_1419_p2);

assign sel_tmp13_demorgan_fu_1380_p2 = (tmp_4_reg_1677_pp0_iter19_reg | sel_tmp6_demorgan_fu_1365_p2);

assign sel_tmp1_fu_1355_p2 = (not_demorgan_reg_1670_pp0_iter19_reg ^ 1'd1);

assign sel_tmp2_fu_1360_p2 = (sel_tmp1_fu_1355_p2 & not_1_demorgan_reg_1683_pp0_iter19_reg);

assign sel_tmp32_demorgan_fu_1413_p2 = (sel_tmp13_demorgan_fu_1380_p2 | or_cond_fu_1296_p2);

assign sel_tmp3_fu_1391_p2 = (sel_tmp_fu_1385_p2 & or_cond_fu_1296_p2);

assign sel_tmp4_fu_1397_p2 = (tmp_63_reg_1745_pp0_iter19_reg ^ 1'd1);

assign sel_tmp5_fu_1402_p2 = (sel_tmp4_fu_1397_p2 & sel_tmp3_fu_1391_p2);

assign sel_tmp6_demorgan_fu_1365_p2 = (not_demorgan_reg_1670_pp0_iter19_reg | not_1_demorgan_reg_1683_pp0_iter19_reg);

assign sel_tmp6_fu_1369_p2 = (sel_tmp6_demorgan_fu_1365_p2 ^ 1'd1);

assign sel_tmp7_fu_1375_p2 = (tmp_4_reg_1677_pp0_iter19_reg & sel_tmp6_fu_1369_p2);

assign sel_tmp8_fu_1408_p2 = (tmp_63_reg_1745_pp0_iter19_reg & sel_tmp3_fu_1391_p2);

assign sel_tmp9_fu_1419_p2 = (sel_tmp32_demorgan_fu_1413_p2 ^ 1'd1);

assign sel_tmp_fu_1385_p2 = (sel_tmp13_demorgan_fu_1380_p2 ^ 1'd1);

assign sf_fu_472_p4 = {{{{5'd16}, {p_Val2_6_reg_1556_pp0_iter3_reg}}}, {13'd0}};

assign ssdm_int_V_write_ass_1_fu_670_p1 = pow_reduce_anonymo_10_q0;

assign ssdm_int_V_write_ass_2_fu_686_p1 = pow_reduce_anonymo_8_q0;

assign ssdm_int_V_write_ass_fu_696_p1 = pow_reduce_anonymo_9_q0;

assign tmp35_cast_fu_705_p1 = tmp8_reg_1654;

assign tmp8_fu_690_p2 = (ssdm_int_V_write_ass_1_fu_670_p1 + ssdm_int_V_write_ass_2_fu_686_p1);

assign tmp_10_fu_911_p1 = $unsigned(p_Val2_55_fu_876_p1);

assign tmp_11_fu_481_p4 = {{{{5'd16}, {p_Val2_6_reg_1556_pp0_iter3_reg}}}, {14'd0}};

assign tmp_12_fu_490_p1 = sf_fu_472_p4;

assign tmp_13_fu_976_p3 = {{tmp_37_fu_966_p4}, {1'd0}};

assign tmp_14_cast_fu_850_p1 = tmp_6_fu_843_p3;

assign tmp_15_cast_fu_854_p1 = tmp_5_reg_1709;

assign tmp_17_fu_1033_p3 = {{tmp_43_reg_1735}, {15'd16384}};

assign tmp_18_cast_fu_886_p1 = tmp_8_fu_879_p3;

assign tmp_18_fu_1063_p2 = ((tmp_57_fu_1060_p1 == 15'd0) ? 1'b1 : 1'b0);

assign tmp_1_fu_405_p3 = {{1'd1}, {loc_V_1_reg_1512_pp0_iter1_reg}};

assign tmp_20_fu_1110_p1 = $signed(p_Val2_58_reg_1725_pp0_iter16_reg);

assign tmp_21_fu_1113_p1 = $signed(p_Val2_62_reg_1758);

assign tmp_22_fu_1136_p1 = m_diff_hi_V_fu_1122_p4;

assign tmp_25_fu_1189_p1 = p_Val2_67_reg_1778;

assign tmp_26_fu_1212_p3 = {{p_Val2_68_reg_1793}, {17'd0}};

assign tmp_27_fu_894_p1 = log_sum_V_1_reg_1659_pp0_iter13_reg;

assign tmp_28_fu_897_p1 = tmp_8_fu_879_p3;

assign tmp_29_fu_915_p2 = ($signed(tmp_28_fu_897_p1) + $signed(p_Val2_i_cast_fu_873_p1));

assign tmp_2_fu_416_p3 = ((tmp_32_reg_1520_pp0_iter1_reg[0:0] === 1'b1) ? tmp_3_fu_412_p1 : p_Result_s_fu_396_p4);

assign tmp_30_fu_921_p1 = tmp_15_reg_1719;

assign tmp_31_fu_1016_p2 = ((tmp_33_cast_fu_1012_p1 != p_Val2_57_fu_958_p3) ? 1'b1 : 1'b0);

assign tmp_33_cast_fu_1012_p1 = $signed(tmp_13_fu_976_p3);

assign tmp_33_fu_1301_p2 = (($signed(r_exp_V_2_fu_1273_p3) < $signed(10'd898)) ? 1'b1 : 1'b0);

assign tmp_34_fu_462_p1 = p_Val2_6_reg_1556_pp0_iter3_reg[20:0];

assign tmp_35_fu_924_p2 = ($signed(tmp_8_fu_879_p3) + $signed(tmp_27_fu_894_p1));

assign tmp_36_fu_948_p4 = {{p_Val2_14_cast_fu_942_p2[64:22]}};

assign tmp_37_fu_966_p4 = {{p_Val2_14_cast_fu_942_p2[63:22]}};

assign tmp_38_fu_1044_p4 = {{grp_fu_1488_p3[24:15]}};

assign tmp_39_fu_1222_p3 = {{tmp_59_reg_1805}, {17'd0}};

assign tmp_3_fu_412_p1 = tmp_1_fu_405_p3;

assign tmp_40_fu_465_p3 = p_Val2_6_reg_1556_pp0_iter3_reg[32'd24];

assign tmp_41_fu_1229_p1 = p_Val2_10_reg_1798;

assign tmp_42_cast_fu_1219_p1 = p_Val2_10_reg_1798;

assign tmp_42_fu_1232_p3 = {{tmp_60_reg_1810}, {17'd0}};

assign tmp_44_fu_1239_p1 = p_Val2_10_reg_1798;

assign tmp_45_fu_1307_p4 = {{p_Val2_26_cast_fu_1254_p2[42:20]}};

assign tmp_46_fu_1317_p4 = {{p_Val2_26_cast2_fu_1248_p2[41:19]}};

assign tmp_47_fu_1431_p1 = p_Result_6_fu_1345_p4;

assign tmp_48_fu_1435_p3 = ((sel_tmp2_fu_1360_p2[0:0] === 1'b1) ? 32'd2139095040 : 32'd2147483647);

assign tmp_49_fu_1443_p2 = (sel_tmp2_fu_1360_p2 | not_demorgan_reg_1670_pp0_iter19_reg);

assign tmp_4_fu_727_p2 = ((loc_V_reg_1505_pp0_iter10_reg == 8'd0) ? 1'b1 : 1'b0);

assign tmp_50_fu_1448_p3 = ((tmp_49_fu_1443_p2[0:0] === 1'b1) ? tmp_48_fu_1435_p3 : tmp_47_fu_1431_p1);

assign tmp_51_fu_1468_p3 = ((sel_tmp5_reg_1815[0:0] === 1'b1) ? 32'd2139095040 : 32'd0);

assign tmp_52_fu_1456_p2 = (sel_tmp7_fu_1375_p2 | sel_tmp5_fu_1402_p2);

assign tmp_53_fu_1475_p3 = ((tmp_52_reg_1825[0:0] === 1'b1) ? tmp_51_fu_1468_p3 : tmp_50_reg_1820);

assign tmp_54_fu_1462_p2 = (sel_tmp8_fu_1408_p2 | sel_tmp10_fu_1425_p2);

assign tmp_56_fu_1053_p3 = grp_fu_1488_p3[32'd24];

assign tmp_56_i_fu_1159_p1 = pow_reduce_anonymo_q0;

assign tmp_57_fu_1060_p1 = grp_fu_1488_p3[14:0];

assign tmp_59_fu_1204_p1 = p_Val2_68_fu_1192_p2[26:0];

assign tmp_59_i_i_cast_fu_581_p1 = tmp_59_i_i_fu_574_p3;

assign tmp_59_i_i_fu_574_p3 = {{tmp_14_reg_1588}, {14'd0}};

assign tmp_60_fu_1208_p1 = p_Val2_68_fu_1192_p2[25:0];

assign tmp_60_i_i_fu_585_p1 = p_Val2_2_fu_567_p3;

assign tmp_61_fu_1260_p3 = p_Val2_69_fu_1242_p2[32'd43];

assign tmp_61_i_i_fu_607_p1 = p_Val2_3_reg_1593_pp0_iter6_reg;

assign tmp_62_fu_1280_p4 = {{r_exp_V_2_fu_1273_p3[9:7]}};

assign tmp_63_i_i_cast_fu_617_p1 = tmp_63_i_i_fu_610_p3;

assign tmp_63_i_i_fu_610_p3 = {{p_Val2_7_reg_1608}, {1'd0}};

assign tmp_64_fu_1335_p1 = r_exp_V_2_fu_1273_p3[7:0];

assign tmp_65_i_i_fu_637_p1 = p_Val2_72_reg_1582_pp0_iter6_reg;

assign tmp_68_i_i_cast_fu_510_p1 = tmp_68_i_i_fu_502_p3;

assign tmp_68_i_i_fu_502_p3 = {{tmp_34_fu_462_p1}, {22'd0}};

assign tmp_69_i_i_fu_514_p1 = p_Val2_37_fu_494_p3;

assign tmp_6_fu_843_p3 = {{tmp_23_reg_1694_pp0_iter12_reg}, {24'd0}};

assign tmp_70_i_i_fu_524_p1 = p_Val2_43_fu_518_p2;

assign tmp_71_i_i_fu_528_p1 = p_Val2_1_reg_1571;

assign tmp_73_i_i_fu_666_p1 = p_Val2_s_reg_1565_pp0_iter7_reg;

assign tmp_75_i_i_cast_fu_764_p1 = tmp_75_i_i_fu_757_p3;

assign tmp_75_i_i_fu_757_p3 = {{tmp_19_reg_1629_pp0_iter10_reg}, {24'd0}};

assign tmp_76_i_i_fu_768_p1 = p_Val2_12_fu_750_p3;

assign tmp_79_i_i_cast_fu_785_p1 = tmp_79_i_i_fu_778_p3;

assign tmp_79_i_i_fu_778_p3 = {{p_Val2_14_reg_1665}, {6'd0}};

assign tmp_7_fu_907_p1 = p_Val2_4_fu_901_p2;

assign tmp_81_i_i_fu_661_p1 = p_Val2_73_fu_641_p4;

assign tmp_8_fu_879_p3 = {{p_Val2_5_reg_1714}, {12'd0}};

assign tmp_9_fu_890_p1 = $unsigned(p_Val2_i_cast_fu_873_p1);

assign tmp_fu_700_p2 = (log_sum_V_reg_1541_pp0_iter8_reg + ssdm_int_V_write_ass_fu_696_p1);

assign tmp_i1_38_fu_1151_p1 = Z2_ind_V_fu_1141_p4;

assign tmp_i1_fu_391_p2 = ((loc_V_1_reg_1512_pp0_iter1_reg == 23'd0) ? 1'b1 : 1'b0);

assign tmp_i2_fu_1156_p1 = p_Val2_64_reg_1763;

assign tmp_i_37_fu_386_p2 = ((loc_V_1_reg_1512_pp0_iter1_reg != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i_cast_fu_714_p1 = loc_V_reg_1505_pp0_iter10_reg;

assign tmp_i_fu_717_p2 = ((loc_V_reg_1505_pp0_iter10_reg == 8'd255) ? 1'b1 : 1'b0);

assign tmp_s_fu_380_p1 = index0_V_fu_370_p4;

always @ (posedge ap_clk) begin
    tmp_50_reg_1820[31] <= 1'b0;
end

endmodule //pown_generic_float_s
