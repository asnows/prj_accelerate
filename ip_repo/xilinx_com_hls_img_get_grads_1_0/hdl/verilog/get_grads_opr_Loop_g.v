// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_grads_opr_Loop_g (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        line_buffer_val_1_address0,
        line_buffer_val_1_ce0,
        line_buffer_val_1_we0,
        line_buffer_val_1_d0,
        line_buffer_val_1_q0,
        line_buffer_val_0_address0,
        line_buffer_val_0_ce0,
        line_buffer_val_0_we0,
        line_buffer_val_0_d0,
        line_buffer_val_0_q0,
        line_buffer_val_2_address0,
        line_buffer_val_2_ce0,
        line_buffer_val_2_we0,
        line_buffer_val_2_d0,
        line_buffer_val_2_q0,
        dstImg_data_stream_V_din,
        dstImg_data_stream_V_full_n,
        dstImg_data_stream_V_write,
        srcImg_data_stream_V_dout,
        srcImg_data_stream_V_empty_n,
        srcImg_data_stream_V_read
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [12:0] p_read;
input  [12:0] p_read1;
output  [9:0] line_buffer_val_1_address0;
output   line_buffer_val_1_ce0;
output   line_buffer_val_1_we0;
output  [7:0] line_buffer_val_1_d0;
input  [7:0] line_buffer_val_1_q0;
output  [9:0] line_buffer_val_0_address0;
output   line_buffer_val_0_ce0;
output   line_buffer_val_0_we0;
output  [7:0] line_buffer_val_0_d0;
input  [7:0] line_buffer_val_0_q0;
output  [9:0] line_buffer_val_2_address0;
output   line_buffer_val_2_ce0;
output   line_buffer_val_2_we0;
output  [7:0] line_buffer_val_2_d0;
input  [7:0] line_buffer_val_2_q0;
output  [7:0] dstImg_data_stream_V_din;
input   dstImg_data_stream_V_full_n;
output   dstImg_data_stream_V_write;
input  [7:0] srcImg_data_stream_V_dout;
input   srcImg_data_stream_V_empty_n;
output   srcImg_data_stream_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] line_buffer_val_1_address0;
reg line_buffer_val_1_ce0;
reg line_buffer_val_1_we0;
reg[9:0] line_buffer_val_0_address0;
reg line_buffer_val_0_ce0;
reg line_buffer_val_0_we0;
reg[9:0] line_buffer_val_2_address0;
reg line_buffer_val_2_ce0;
reg line_buffer_val_2_we0;
reg dstImg_data_stream_V_write;
reg srcImg_data_stream_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    dstImg_data_stream_V_blk_n;
wire    ap_CS_fsm_state8;
reg   [0:0] or_cond_i_reg_690;
reg    srcImg_data_stream_V_blk_n;
wire    ap_CS_fsm_state4;
reg   [0:0] brmerge_i_reg_643;
reg    ap_block_state1;
wire   [12:0] tmp_5_fu_227_p2;
reg   [12:0] tmp_5_reg_596;
wire   [12:0] tmp_6_fu_233_p2;
reg   [12:0] tmp_6_reg_601;
wire   [12:0] y_fu_244_p2;
reg   [12:0] y_reg_609;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_3_i_fu_250_p2;
reg   [0:0] tmp_3_i_reg_614;
wire   [0:0] exitcond1_fu_239_p2;
wire   [0:0] rev_fu_261_p2;
reg   [0:0] rev_reg_619;
wire   [0:0] icmp_fu_277_p2;
reg   [0:0] icmp_reg_624;
reg   [7:0] window_val_1_1_2_reg_629;
wire    ap_CS_fsm_state3;
wire   [12:0] x_fu_291_p2;
reg   [12:0] x_reg_638;
wire   [0:0] brmerge_i_fu_303_p2;
wire   [0:0] exitcond_fu_286_p2;
wire   [63:0] tmp_6_i_fu_308_p1;
reg   [63:0] tmp_6_i_reg_648;
reg   [9:0] line_buffer_val_1_a_1_reg_653;
reg   [9:0] line_buffer_val_2_a_1_reg_658;
wire   [0:0] grp_fu_221_p2;
reg   [0:0] tmp_5_i_reg_663;
reg    ap_block_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp2_fu_331_p2;
reg   [0:0] icmp2_reg_685;
wire   [0:0] or_cond_i_fu_343_p2;
wire   [7:0] window_val_2_2_1_fu_357_p3;
reg   [7:0] window_val_2_2_1_reg_694;
wire    ap_CS_fsm_state6;
wire   [7:0] window_val_1_2_1_fu_364_p3;
reg   [7:0] window_val_1_2_1_reg_699;
wire   [7:0] window_val_0_2_1_fu_370_p3;
reg   [7:0] window_val_0_2_1_reg_704;
wire  signed [8:0] gx_fu_385_p2;
reg  signed [8:0] gx_reg_709;
wire  signed [8:0] gy_fu_399_p2;
reg  signed [8:0] gy_reg_715;
reg   [0:0] tmp_3_reg_721;
reg   [0:0] tmp_8_reg_726;
wire   [7:0] tmp12_fu_538_p3;
reg   [7:0] tmp12_reg_731;
wire    ap_CS_fsm_state7;
reg   [12:0] y_i_reg_198;
wire   [12:0] ap_phi_mux_x_i_phi_fu_213_p4;
reg   [12:0] x_i_reg_209;
reg    ap_block_state8;
wire   [63:0] tmp_7_i_fu_314_p1;
reg   [7:0] window_val_0_2_2_fu_94;
reg   [7:0] window_val_1_1_fu_98;
reg   [7:0] window_val_1_1_1_fu_102;
reg   [7:0] window_val_2_2_2_fu_106;
reg   [12:0] grp_fu_221_p0;
wire   [0:0] ult_fu_256_p2;
wire   [11:0] tmp_fu_267_p4;
wire   [0:0] rev1_fu_297_p2;
wire   [11:0] tmp_11_fu_321_p4;
wire   [0:0] tmp_23_i_fu_337_p2;
wire   [8:0] tmp_11_cast_i_fu_381_p1;
wire   [8:0] tmp_12_cast_i_fu_377_p1;
wire   [8:0] tmp_13_cast_i_fu_391_p1;
wire   [8:0] tmp_14_cast_i_fu_395_p1;
wire   [8:0] xs_V_3_fu_424_p2;
wire  signed [15:0] xs_V_1_i_cast_i_fu_429_p1;
reg   [15:0] p_Result_s_fu_433_p4;
wire  signed [15:0] x_cast1_i_fu_421_p1;
wire   [15:0] agg_result_V_i_i_fu_443_p3;
wire   [8:0] xs_V_fu_457_p2;
wire  signed [15:0] xs_V_1_i_cast_i5_fu_462_p1;
reg   [15:0] p_Result_1_fu_466_p4;
wire  signed [15:0] x_cast1_i2_fu_454_p1;
wire   [15:0] agg_result_V_i_i8_fu_476_p3;
wire   [15:0] Temp_fu_483_p2;
wire   [7:0] tmp_10_fu_493_p4;
wire   [7:0] tmp_4_fu_450_p1;
wire   [7:0] tmp_9_fu_489_p1;
wire   [0:0] icmp1_fu_503_p2;
wire   [7:0] tmp_21_i_fu_513_p2;
wire   [0:0] brmerge1_i_fu_509_p2;
wire   [0:0] sel_tmp_fu_527_p2;
wire   [0:0] sel_tmp1_fu_533_p2;
wire   [7:0] tmp_22_i_fu_519_p3;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_239_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((or_cond_i_reg_690 == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        x_i_reg_209 <= x_reg_638;
    end else if (((exitcond1_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        x_i_reg_209 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_286_p2 == 1'd1))) begin
        y_i_reg_198 <= y_reg_609;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_i_reg_198 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        brmerge_i_reg_643 <= brmerge_i_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        gx_reg_709 <= gx_fu_385_p2;
        gy_reg_715 <= gy_fu_399_p2;
        tmp_3_reg_721 <= gx_fu_385_p2[32'd8];
        tmp_8_reg_726 <= gy_fu_399_p2[32'd8];
        window_val_0_2_1_reg_704 <= window_val_0_2_1_fu_370_p3;
        window_val_1_2_1_reg_699 <= window_val_1_2_1_fu_364_p3;
        window_val_2_2_1_reg_694 <= window_val_2_2_1_fu_357_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp2_reg_685 <= icmp2_fu_331_p2;
        or_cond_i_reg_690 <= or_cond_i_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_624 <= icmp_fu_277_p2;
        rev_reg_619 <= rev_fu_261_p2;
        tmp_3_i_reg_614 <= tmp_3_i_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_286_p2 == 1'd0) & (brmerge_i_fu_303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        line_buffer_val_1_a_1_reg_653 <= tmp_6_i_fu_308_p1;
        line_buffer_val_2_a_1_reg_658 <= tmp_6_i_fu_308_p1;
        tmp_6_i_reg_648[12 : 0] <= tmp_6_i_fu_308_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp12_reg_731 <= tmp12_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_5_i_reg_663 <= grp_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_5_reg_596 <= tmp_5_fu_227_p2;
        tmp_6_reg_601 <= tmp_6_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((or_cond_i_reg_690 == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        window_val_0_2_2_fu_94 <= window_val_0_2_1_reg_704;
        window_val_1_1_1_fu_102 <= window_val_1_2_1_reg_699;
        window_val_1_1_fu_98 <= window_val_1_1_2_reg_629;
        window_val_2_2_2_fu_106 <= window_val_2_2_1_reg_694;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        window_val_1_1_2_reg_629 <= window_val_1_1_1_fu_102;
        x_reg_638 <= x_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_609 <= y_fu_244_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_239_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_239_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_690 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dstImg_data_stream_V_blk_n = dstImg_data_stream_V_full_n;
    end else begin
        dstImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((or_cond_i_reg_690 == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0)) & (or_cond_i_reg_690 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dstImg_data_stream_V_write = 1'b1;
    end else begin
        dstImg_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_221_p0 = x_i_reg_209;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_221_p0 = ap_phi_mux_x_i_phi_fu_213_p4;
    end else begin
        grp_fu_221_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line_buffer_val_0_address0 = tmp_7_i_fu_314_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_val_0_address0 = tmp_6_i_reg_648;
    end else begin
        line_buffer_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        line_buffer_val_0_ce0 = 1'b1;
    end else begin
        line_buffer_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (brmerge_i_reg_643 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_buffer_val_0_we0 = 1'b1;
    end else begin
        line_buffer_val_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line_buffer_val_1_address0 = tmp_7_i_fu_314_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_val_1_address0 = line_buffer_val_1_a_1_reg_653;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        line_buffer_val_1_address0 = tmp_6_i_fu_308_p1;
    end else begin
        line_buffer_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        line_buffer_val_1_ce0 = 1'b1;
    end else begin
        line_buffer_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (brmerge_i_reg_643 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_buffer_val_1_we0 = 1'b1;
    end else begin
        line_buffer_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line_buffer_val_2_address0 = tmp_7_i_fu_314_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_val_2_address0 = line_buffer_val_2_a_1_reg_658;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        line_buffer_val_2_address0 = tmp_6_i_fu_308_p1;
    end else begin
        line_buffer_val_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        line_buffer_val_2_ce0 = 1'b1;
    end else begin
        line_buffer_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (brmerge_i_reg_643 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_buffer_val_2_we0 = 1'b1;
    end else begin
        line_buffer_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_i_reg_643 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        srcImg_data_stream_V_blk_n = srcImg_data_stream_V_empty_n;
    end else begin
        srcImg_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (brmerge_i_reg_643 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        srcImg_data_stream_V_read = 1'b1;
    end else begin
        srcImg_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_239_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_286_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if ((~((or_cond_i_reg_690 == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Temp_fu_483_p2 = (agg_result_V_i_i8_fu_476_p3 + agg_result_V_i_i_fu_443_p3);

assign agg_result_V_i_i8_fu_476_p3 = ((tmp_8_reg_726[0:0] === 1'b1) ? p_Result_1_fu_466_p4 : x_cast1_i2_fu_454_p1);

assign agg_result_V_i_i_fu_443_p3 = ((tmp_3_reg_721[0:0] === 1'b1) ? p_Result_s_fu_433_p4 : x_cast1_i_fu_421_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4 = ((brmerge_i_reg_643 == 1'd0) & (srcImg_data_stream_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((or_cond_i_reg_690 == 1'd0) & (dstImg_data_stream_V_full_n == 1'b0));
end

assign ap_phi_mux_x_i_phi_fu_213_p4 = x_i_reg_209;

assign brmerge1_i_fu_509_p2 = (icmp_reg_624 | brmerge_i_reg_643);

assign brmerge_i_fu_303_p2 = (rev_reg_619 | rev1_fu_297_p2);

assign dstImg_data_stream_V_din = tmp12_reg_731;

assign exitcond1_fu_239_p2 = ((y_i_reg_198 == tmp_6_reg_601) ? 1'b1 : 1'b0);

assign exitcond_fu_286_p2 = ((x_i_reg_209 == tmp_5_reg_596) ? 1'b1 : 1'b0);

assign grp_fu_221_p2 = ((grp_fu_221_p0 < p_read1) ? 1'b1 : 1'b0);

assign gx_fu_385_p2 = (tmp_11_cast_i_fu_381_p1 - tmp_12_cast_i_fu_377_p1);

assign gy_fu_399_p2 = (tmp_13_cast_i_fu_391_p1 - tmp_14_cast_i_fu_395_p1);

assign icmp1_fu_503_p2 = (($signed(tmp_10_fu_493_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp2_fu_331_p2 = ((tmp_11_fu_321_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_fu_277_p2 = ((tmp_fu_267_p4 == 12'd0) ? 1'b1 : 1'b0);

assign line_buffer_val_0_d0 = line_buffer_val_1_q0;

assign line_buffer_val_1_d0 = line_buffer_val_2_q0;

assign line_buffer_val_2_d0 = srcImg_data_stream_V_dout;

assign or_cond_i_fu_343_p2 = (tmp_3_i_reg_614 | tmp_23_i_fu_337_p2);

always @ (*) begin
    p_Result_1_fu_466_p4 = xs_V_1_i_cast_i5_fu_462_p1;
    p_Result_1_fu_466_p4[32'd15] = |(1'd0);
end

always @ (*) begin
    p_Result_s_fu_433_p4 = xs_V_1_i_cast_i_fu_429_p1;
    p_Result_s_fu_433_p4[32'd15] = |(1'd0);
end

assign rev1_fu_297_p2 = (grp_fu_221_p2 ^ 1'd1);

assign rev_fu_261_p2 = (ult_fu_256_p2 ^ 1'd1);

assign sel_tmp1_fu_533_p2 = (sel_tmp_fu_527_p2 & icmp2_reg_685);

assign sel_tmp_fu_527_p2 = (brmerge1_i_fu_509_p2 ^ 1'd1);

assign tmp12_fu_538_p3 = ((sel_tmp1_fu_533_p2[0:0] === 1'b1) ? tmp_22_i_fu_519_p3 : 8'd0);

assign tmp_10_fu_493_p4 = {{Temp_fu_483_p2[15:8]}};

assign tmp_11_cast_i_fu_381_p1 = window_val_1_1_fu_98;

assign tmp_11_fu_321_p4 = {{x_i_reg_209[12:1]}};

assign tmp_12_cast_i_fu_377_p1 = window_val_1_2_1_fu_364_p3;

assign tmp_13_cast_i_fu_391_p1 = window_val_0_2_2_fu_94;

assign tmp_14_cast_i_fu_395_p1 = window_val_2_2_2_fu_106;

assign tmp_21_i_fu_513_p2 = (tmp_4_fu_450_p1 + tmp_9_fu_489_p1);

assign tmp_22_i_fu_519_p3 = ((icmp1_fu_503_p2[0:0] === 1'b1) ? 8'd255 : tmp_21_i_fu_513_p2);

assign tmp_23_i_fu_337_p2 = ((x_i_reg_209 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_3_i_fu_250_p2 = ((y_i_reg_198 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_450_p1 = agg_result_V_i_i_fu_443_p3[7:0];

assign tmp_5_fu_227_p2 = (p_read1 + 13'd1);

assign tmp_6_fu_233_p2 = (p_read + 13'd1);

assign tmp_6_i_fu_308_p1 = x_i_reg_209;

assign tmp_7_i_fu_314_p1 = x_i_reg_209;

assign tmp_9_fu_489_p1 = agg_result_V_i_i8_fu_476_p3[7:0];

assign tmp_fu_267_p4 = {{y_i_reg_198[12:1]}};

assign ult_fu_256_p2 = ((y_i_reg_198 < p_read) ? 1'b1 : 1'b0);

assign window_val_0_2_1_fu_370_p3 = ((tmp_5_i_reg_663[0:0] === 1'b1) ? line_buffer_val_0_q0 : window_val_0_2_2_fu_94);

assign window_val_1_2_1_fu_364_p3 = ((tmp_5_i_reg_663[0:0] === 1'b1) ? line_buffer_val_1_q0 : window_val_1_1_2_reg_629);

assign window_val_2_2_1_fu_357_p3 = ((tmp_5_i_reg_663[0:0] === 1'b1) ? line_buffer_val_2_q0 : window_val_2_2_2_fu_106);

assign x_cast1_i2_fu_454_p1 = gy_reg_715;

assign x_cast1_i_fu_421_p1 = gx_reg_709;

assign x_fu_291_p2 = (x_i_reg_209 + 13'd1);

assign xs_V_1_i_cast_i5_fu_462_p1 = $signed(xs_V_fu_457_p2);

assign xs_V_1_i_cast_i_fu_429_p1 = $signed(xs_V_3_fu_424_p2);

assign xs_V_3_fu_424_p2 = ($signed(9'd0) - $signed(gx_reg_709));

assign xs_V_fu_457_p2 = ($signed(9'd0) - $signed(gy_reg_715));

assign y_fu_244_p2 = (y_i_reg_198 + 13'd1);

always @ (posedge ap_clk) begin
    tmp_6_i_reg_648[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //get_grads_opr_Loop_g
