-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pown_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pown_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_182 : STD_LOGIC_VECTOR (8 downto 0) := "110000010";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv52_B17217F7D1C : STD_LOGIC_VECTOR (51 downto 0) := "0000000010110001011100100001011111110111110100011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv45_B17217F7D : STD_LOGIC_VECTOR (44 downto 0) := "000000000101100010111001000010111111101111101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymo_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_7_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_7_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_6_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal pow_reduce_anonymo_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymo_9_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_9_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal pow_reduce_anonymo_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_10_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_10_q0 : STD_LOGIC_VECTOR (48 downto 0);
    signal pow_reduce_anonymo_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_8_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_8_q0 : STD_LOGIC_VECTOR (43 downto 0);
    signal pow_reduce_anonymo_11_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymo_11_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_11_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymo_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymo_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1505_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_358_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1512 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1512_pp0_iter1_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_32_reg_1520 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1520_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_tilde_inverse_reg_1536 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_sum_V_reg_1541 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter2_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter3_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter4_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter5_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter6_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter7_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1541_pp0_iter8_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_i_37_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_37_reg_1546_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1551_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_426_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_6_reg_1556 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_6_reg_1556_pp0_iter3_reg : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_s_reg_1565 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1565_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1565_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1565_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1565_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1565_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_1_fu_456_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_1_reg_1571 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_48_reg_1576 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_72_reg_1582 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_72_reg_1582_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_72_reg_1582_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_reg_1588 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_3_fu_589_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_3_reg_1593 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_3_reg_1593_pp0_iter6_reg : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_601_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_7_reg_1608 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_51_reg_1613 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_51_reg_1613_pp0_iter8_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_51_reg_1613_pp0_iter9_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_51_reg_1613_pp0_iter10_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_73_fu_641_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_73_reg_1624 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_reg_1629 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_19_reg_1629_pp0_iter8_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_19_reg_1629_pp0_iter9_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_19_reg_1629_pp0_iter10_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp8_fu_690_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp8_reg_1654 : STD_LOGIC_VECTOR (49 downto 0);
    signal log_sum_V_1_fu_708_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1659 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1659_pp0_iter10_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1659_pp0_iter11_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1659_pp0_iter12_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1659_pp0_iter13_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_680_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_14_reg_1665 : STD_LOGIC_VECTOR (49 downto 0);
    signal not_demorgan_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1670_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1677_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_demorgan_reg_1683_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_fu_744_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_reg_1689 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_reg_1694 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_23_reg_1694_pp0_iter12_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal ssdm_int_V_write_ass_3_reg_1699 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_reg_1709 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_818_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_5_reg_1714 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_15_reg_1719 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_58_reg_1725 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_58_reg_1725_pp0_iter15_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_58_reg_1725_pp0_iter16_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_16_reg_1730 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_reg_1735 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1740_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1745_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_1083_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1751 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1751_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1751_pp0_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1751_pp0_iter18_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1751_pp0_iter19_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_62_reg_1758 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_64_fu_1132_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_64_reg_1763 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_67_reg_1778 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1P_m_1_V_reg_1783 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_24_reg_1788 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_68_fu_1192_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_68_reg_1793 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_10_fu_1499_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_10_reg_1798 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_59_fu_1204_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_59_reg_1805 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_60_fu_1208_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_60_reg_1810 : STD_LOGIC_VECTOR (25 downto 0);
    signal sel_tmp5_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_1820 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1825 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_s_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_i_i_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_i_i_fu_661_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_i_i_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i1_38_fu_1151_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_25_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_V_fu_370_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_405_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_412_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_s_fu_396_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_2_fu_416_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_6_fu_426_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_33_fu_442_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_1_fu_456_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_1_fu_456_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sf_fu_472_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_40_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_481_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_12_fu_490_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_34_fu_462_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_68_i_i_fu_502_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_37_fu_494_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_69_i_i_fu_514_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_68_i_i_cast_fu_510_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_43_fu_518_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_70_i_i_fu_524_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_71_i_i_fu_528_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_Val2_44_fu_531_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_59_i_i_fu_574_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_2_fu_567_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_59_i_i_cast_fu_581_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_60_i_i_fu_585_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_601_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_601_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_63_i_i_fu_610_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_61_i_i_fu_607_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_63_i_i_cast_fu_617_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_8_fu_621_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal grp_fu_680_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_680_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ssdm_int_V_write_ass_1_fu_670_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ssdm_int_V_write_ass_2_fu_686_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ssdm_int_V_write_ass_fu_696_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp35_cast_fu_705_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_fu_700_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_i_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_assign_v_cast_c_fu_737_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_cast_fu_714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_i_i_fu_757_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_12_fu_750_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_75_i_i_cast_fu_764_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_76_i_i_fu_768_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_79_i_i_fu_778_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_13_fu_772_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_79_i_i_cast_fu_785_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_15_fu_789_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_818_p0 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_fu_827_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal OP1_V_6_cast_fu_824_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_fu_827_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_fu_827_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_6_fu_843_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_14_cast_fu_850_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_9_fu_857_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_879_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_i_cast_fu_873_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_9_fu_890_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_18_cast_fu_886_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_4_fu_901_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_55_fu_876_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_28_fu_897_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_27_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_907_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_10_fu_911_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_35_fu_924_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_915_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_14_cast_fu_942_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_36_fu_948_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_37_fu_966_p4 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_14_cast1_fu_936_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_56_fu_930_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_13_fu_976_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_33_cast_fu_1012_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_57_fu_958_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_17_fu_1033_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1488_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_57_fu_1060_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_38_fu_1044_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_fu_1069_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_fu_1053_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_1075_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_61_fu_1094_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_61_fu_1094_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_20_fu_1110_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_21_fu_1113_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_63_fu_1116_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal m_diff_hi_V_fu_1122_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_V_fu_1141_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i2_fu_1156_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_56_i_fu_1159_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_66_fu_1163_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_25_fu_1189_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_26_fu_1212_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_42_cast_fu_1219_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_42_fu_1232_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_44_fu_1239_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_39_fu_1222_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_41_fu_1229_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_69_fu_1242_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_61_fu_1260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_1268_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_1273_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_62_fu_1280_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_26_cast_fu_1254_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_26_cast2_fu_1248_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_45_fu_1307_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_46_fu_1317_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_64_fu_1335_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_fu_1339_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_fu_1327_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sel_tmp1_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_demorgan_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_1345_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1435_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1488_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_fu_1499_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_10_fu_1499_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_601_ce : STD_LOGIC;
    signal grp_fu_680_ce : STD_LOGIC;
    signal grp_fu_818_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to20 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_601_p00 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_601_p10 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_680_p00 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_680_p10 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_10_fu_1499_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_10_fu_1499_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_fu_456_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_1_fu_456_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_6_fu_426_p10 : STD_LOGIC_VECTOR (24 downto 0);

    component img_get_grads_mulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (40 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component img_get_grads_muljbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component img_get_grads_mulkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (44 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component img_get_grads_maclbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component img_get_grads_mulmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component pown_generic_floabkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component pown_generic_floacud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component pown_generic_floadEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component pown_generic_floaeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component pown_generic_floafYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component pown_generic_floag8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component pown_generic_floahbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymo_7_U : component pown_generic_floabkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_7_address0,
        ce0 => pow_reduce_anonymo_7_ce0,
        q0 => pow_reduce_anonymo_7_q0);

    pow_reduce_anonymo_6_U : component pown_generic_floacud
    generic map (
        DataWidth => 56,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_6_address0,
        ce0 => pow_reduce_anonymo_6_ce0,
        q0 => pow_reduce_anonymo_6_q0);

    pow_reduce_anonymo_9_U : component pown_generic_floadEe
    generic map (
        DataWidth => 52,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_9_address0,
        ce0 => pow_reduce_anonymo_9_ce0,
        q0 => pow_reduce_anonymo_9_q0);

    pow_reduce_anonymo_10_U : component pown_generic_floaeOg
    generic map (
        DataWidth => 49,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_10_address0,
        ce0 => pow_reduce_anonymo_10_ce0,
        q0 => pow_reduce_anonymo_10_q0);

    pow_reduce_anonymo_8_U : component pown_generic_floafYi
    generic map (
        DataWidth => 44,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_8_address0,
        ce0 => pow_reduce_anonymo_8_ce0,
        q0 => pow_reduce_anonymo_8_q0);

    pow_reduce_anonymo_11_U : component pown_generic_floag8j
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_11_address0,
        ce0 => pow_reduce_anonymo_11_ce0,
        q0 => pow_reduce_anonymo_11_q0);

    pow_reduce_anonymo_U : component pown_generic_floahbi
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_address0,
        ce0 => pow_reduce_anonymo_ce0,
        q0 => pow_reduce_anonymo_q0);

    img_get_grads_mulibs_U15 : component img_get_grads_mulibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 41,
        din1_WIDTH => 6,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_601_p0,
        din1 => grp_fu_601_p1,
        ce => grp_fu_601_ce,
        dout => grp_fu_601_p2);

    img_get_grads_muljbC_U16 : component img_get_grads_muljbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 44,
        din1_WIDTH => 6,
        dout_WIDTH => 50)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_680_p0,
        din1 => grp_fu_680_p1,
        ce => grp_fu_680_ce,
        dout => grp_fu_680_p2);

    img_get_grads_mulkbM_U17 : component img_get_grads_mulkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 45,
        din1_WIDTH => 9,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_818_p0,
        din1 => b_exp_reg_1689,
        ce => grp_fu_818_ce,
        dout => grp_fu_818_p2);

    img_get_grads_maclbW_U18 : component img_get_grads_maclbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1488_p0,
        din1 => tmp_16_reg_1730,
        din2 => tmp_17_fu_1033_p3,
        dout => grp_fu_1488_p3);

    img_get_grads_mulmb6_U19 : component img_get_grads_mulmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => p_Val2_10_fu_1499_p0,
        din1 => p_Val2_10_fu_1499_p1,
        dout => p_Val2_10_fu_1499_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                b_exp_reg_1689 <= b_exp_fu_744_p2;
                exp_Z1P_m_1_V_reg_1783 <= p_Val2_66_fu_1163_p2(18 downto 1);
                loc_V_reg_1505_pp0_iter10_reg <= loc_V_reg_1505_pp0_iter9_reg;
                loc_V_reg_1505_pp0_iter2_reg <= loc_V_reg_1505_pp0_iter1_reg;
                loc_V_reg_1505_pp0_iter3_reg <= loc_V_reg_1505_pp0_iter2_reg;
                loc_V_reg_1505_pp0_iter4_reg <= loc_V_reg_1505_pp0_iter3_reg;
                loc_V_reg_1505_pp0_iter5_reg <= loc_V_reg_1505_pp0_iter4_reg;
                loc_V_reg_1505_pp0_iter6_reg <= loc_V_reg_1505_pp0_iter5_reg;
                loc_V_reg_1505_pp0_iter7_reg <= loc_V_reg_1505_pp0_iter6_reg;
                loc_V_reg_1505_pp0_iter8_reg <= loc_V_reg_1505_pp0_iter7_reg;
                loc_V_reg_1505_pp0_iter9_reg <= loc_V_reg_1505_pp0_iter8_reg;
                log_sum_V_1_reg_1659 <= log_sum_V_1_fu_708_p2;
                log_sum_V_1_reg_1659_pp0_iter10_reg <= log_sum_V_1_reg_1659;
                log_sum_V_1_reg_1659_pp0_iter11_reg <= log_sum_V_1_reg_1659_pp0_iter10_reg;
                log_sum_V_1_reg_1659_pp0_iter12_reg <= log_sum_V_1_reg_1659_pp0_iter11_reg;
                log_sum_V_1_reg_1659_pp0_iter13_reg <= log_sum_V_1_reg_1659_pp0_iter12_reg;
                log_sum_V_reg_1541_pp0_iter2_reg <= log_sum_V_reg_1541;
                log_sum_V_reg_1541_pp0_iter3_reg <= log_sum_V_reg_1541_pp0_iter2_reg;
                log_sum_V_reg_1541_pp0_iter4_reg <= log_sum_V_reg_1541_pp0_iter3_reg;
                log_sum_V_reg_1541_pp0_iter5_reg <= log_sum_V_reg_1541_pp0_iter4_reg;
                log_sum_V_reg_1541_pp0_iter6_reg <= log_sum_V_reg_1541_pp0_iter5_reg;
                log_sum_V_reg_1541_pp0_iter7_reg <= log_sum_V_reg_1541_pp0_iter6_reg;
                log_sum_V_reg_1541_pp0_iter8_reg <= log_sum_V_reg_1541_pp0_iter7_reg;
                not_1_demorgan_reg_1683 <= not_1_demorgan_fu_732_p2;
                not_1_demorgan_reg_1683_pp0_iter12_reg <= not_1_demorgan_reg_1683;
                not_1_demorgan_reg_1683_pp0_iter13_reg <= not_1_demorgan_reg_1683_pp0_iter12_reg;
                not_1_demorgan_reg_1683_pp0_iter14_reg <= not_1_demorgan_reg_1683_pp0_iter13_reg;
                not_1_demorgan_reg_1683_pp0_iter15_reg <= not_1_demorgan_reg_1683_pp0_iter14_reg;
                not_1_demorgan_reg_1683_pp0_iter16_reg <= not_1_demorgan_reg_1683_pp0_iter15_reg;
                not_1_demorgan_reg_1683_pp0_iter17_reg <= not_1_demorgan_reg_1683_pp0_iter16_reg;
                not_1_demorgan_reg_1683_pp0_iter18_reg <= not_1_demorgan_reg_1683_pp0_iter17_reg;
                not_1_demorgan_reg_1683_pp0_iter19_reg <= not_1_demorgan_reg_1683_pp0_iter18_reg;
                not_demorgan_reg_1670 <= not_demorgan_fu_722_p2;
                not_demorgan_reg_1670_pp0_iter12_reg <= not_demorgan_reg_1670;
                not_demorgan_reg_1670_pp0_iter13_reg <= not_demorgan_reg_1670_pp0_iter12_reg;
                not_demorgan_reg_1670_pp0_iter14_reg <= not_demorgan_reg_1670_pp0_iter13_reg;
                not_demorgan_reg_1670_pp0_iter15_reg <= not_demorgan_reg_1670_pp0_iter14_reg;
                not_demorgan_reg_1670_pp0_iter16_reg <= not_demorgan_reg_1670_pp0_iter15_reg;
                not_demorgan_reg_1670_pp0_iter17_reg <= not_demorgan_reg_1670_pp0_iter16_reg;
                not_demorgan_reg_1670_pp0_iter18_reg <= not_demorgan_reg_1670_pp0_iter17_reg;
                not_demorgan_reg_1670_pp0_iter19_reg <= not_demorgan_reg_1670_pp0_iter18_reg;
                p_Val2_10_reg_1798 <= p_Val2_10_fu_1499_p2;
                p_Val2_14_reg_1665 <= grp_fu_680_p2;
                p_Val2_1_reg_1571 <= p_Val2_1_fu_456_p2;
                p_Val2_3_reg_1593 <= p_Val2_3_fu_589_p2;
                p_Val2_3_reg_1593_pp0_iter6_reg <= p_Val2_3_reg_1593;
                p_Val2_48_reg_1576 <= p_Val2_44_fu_531_p2(43 downto 3);
                p_Val2_51_reg_1613 <= p_Val2_8_fu_621_p2(49 downto 6);
                p_Val2_51_reg_1613_pp0_iter10_reg <= p_Val2_51_reg_1613_pp0_iter9_reg;
                p_Val2_51_reg_1613_pp0_iter8_reg <= p_Val2_51_reg_1613;
                p_Val2_51_reg_1613_pp0_iter9_reg <= p_Val2_51_reg_1613_pp0_iter8_reg;
                p_Val2_58_reg_1725 <= p_Val2_14_cast1_fu_936_p2(63 downto 28);
                p_Val2_58_reg_1725_pp0_iter15_reg <= p_Val2_58_reg_1725;
                p_Val2_58_reg_1725_pp0_iter16_reg <= p_Val2_58_reg_1725_pp0_iter15_reg;
                p_Val2_5_reg_1714 <= grp_fu_818_p2;
                p_Val2_62_reg_1758 <= p_Val2_61_fu_1094_p2(44 downto 9);
                p_Val2_64_reg_1763 <= p_Val2_64_fu_1132_p1;
                p_Val2_67_reg_1778 <= pow_reduce_anonymo_11_q0;
                p_Val2_68_reg_1793 <= p_Val2_68_fu_1192_p2;
                p_Val2_6_reg_1556 <= p_Val2_6_fu_426_p2;
                p_Val2_6_reg_1556_pp0_iter3_reg <= p_Val2_6_reg_1556;
                p_Val2_72_reg_1582 <= p_Val2_44_fu_531_p2(43 downto 38);
                p_Val2_72_reg_1582_pp0_iter5_reg <= p_Val2_72_reg_1582;
                p_Val2_72_reg_1582_pp0_iter6_reg <= p_Val2_72_reg_1582_pp0_iter5_reg;
                p_Val2_73_reg_1624 <= p_Val2_8_fu_621_p2(49 downto 44);
                p_Val2_7_reg_1608 <= grp_fu_601_p2;
                p_Val2_s_reg_1565 <= p_Val2_6_fu_426_p2(24 downto 21);
                p_Val2_s_reg_1565_pp0_iter3_reg <= p_Val2_s_reg_1565;
                p_Val2_s_reg_1565_pp0_iter4_reg <= p_Val2_s_reg_1565_pp0_iter3_reg;
                p_Val2_s_reg_1565_pp0_iter5_reg <= p_Val2_s_reg_1565_pp0_iter4_reg;
                p_Val2_s_reg_1565_pp0_iter6_reg <= p_Val2_s_reg_1565_pp0_iter5_reg;
                p_Val2_s_reg_1565_pp0_iter7_reg <= p_Val2_s_reg_1565_pp0_iter6_reg;
                r_exp_V_3_reg_1751 <= r_exp_V_3_fu_1083_p3;
                r_exp_V_3_reg_1751_pp0_iter16_reg <= r_exp_V_3_reg_1751;
                r_exp_V_3_reg_1751_pp0_iter17_reg <= r_exp_V_3_reg_1751_pp0_iter16_reg;
                r_exp_V_3_reg_1751_pp0_iter18_reg <= r_exp_V_3_reg_1751_pp0_iter17_reg;
                r_exp_V_3_reg_1751_pp0_iter19_reg <= r_exp_V_3_reg_1751_pp0_iter18_reg;
                sel_tmp5_reg_1815 <= sel_tmp5_fu_1402_p2;
                ssdm_int_V_write_ass_3_reg_1699 <= p_Val2_15_fu_789_p2(62 downto 40);
                tmp8_reg_1654 <= tmp8_fu_690_p2;
                tmp_14_reg_1588 <= p_Val2_44_fu_531_p2(37 downto 3);
                tmp_15_reg_1719 <= p_Val2_9_fu_857_p2(63 downto 24);
                tmp_16_reg_1730 <= p_Val2_14_cast1_fu_936_p2(63 downto 51);
                tmp_19_reg_1629 <= p_Val2_8_fu_621_p2(43 downto 6);
                tmp_19_reg_1629_pp0_iter10_reg <= tmp_19_reg_1629_pp0_iter9_reg;
                tmp_19_reg_1629_pp0_iter8_reg <= tmp_19_reg_1629;
                tmp_19_reg_1629_pp0_iter9_reg <= tmp_19_reg_1629_pp0_iter8_reg;
                tmp_23_reg_1694 <= p_Val2_15_fu_789_p2(62 downto 24);
                tmp_23_reg_1694_pp0_iter12_reg <= tmp_23_reg_1694;
                tmp_24_reg_1788 <= pow_reduce_anonymo_11_q0(26 downto 9);
                tmp_31_reg_1740 <= tmp_31_fu_1016_p2;
                tmp_31_reg_1740_pp0_iter15_reg <= tmp_31_reg_1740;
                tmp_31_reg_1740_pp0_iter16_reg <= tmp_31_reg_1740_pp0_iter15_reg;
                tmp_31_reg_1740_pp0_iter17_reg <= tmp_31_reg_1740_pp0_iter16_reg;
                tmp_31_reg_1740_pp0_iter18_reg <= tmp_31_reg_1740_pp0_iter17_reg;
                tmp_31_reg_1740_pp0_iter19_reg <= tmp_31_reg_1740_pp0_iter18_reg;
                tmp_32_reg_1520_pp0_iter10_reg <= tmp_32_reg_1520_pp0_iter9_reg;
                tmp_32_reg_1520_pp0_iter2_reg <= tmp_32_reg_1520_pp0_iter1_reg;
                tmp_32_reg_1520_pp0_iter3_reg <= tmp_32_reg_1520_pp0_iter2_reg;
                tmp_32_reg_1520_pp0_iter4_reg <= tmp_32_reg_1520_pp0_iter3_reg;
                tmp_32_reg_1520_pp0_iter5_reg <= tmp_32_reg_1520_pp0_iter4_reg;
                tmp_32_reg_1520_pp0_iter6_reg <= tmp_32_reg_1520_pp0_iter5_reg;
                tmp_32_reg_1520_pp0_iter7_reg <= tmp_32_reg_1520_pp0_iter6_reg;
                tmp_32_reg_1520_pp0_iter8_reg <= tmp_32_reg_1520_pp0_iter7_reg;
                tmp_32_reg_1520_pp0_iter9_reg <= tmp_32_reg_1520_pp0_iter8_reg;
                tmp_43_reg_1735 <= p_Val2_56_fu_930_p2(63 downto 63);
                tmp_4_reg_1677 <= tmp_4_fu_727_p2;
                tmp_4_reg_1677_pp0_iter12_reg <= tmp_4_reg_1677;
                tmp_4_reg_1677_pp0_iter13_reg <= tmp_4_reg_1677_pp0_iter12_reg;
                tmp_4_reg_1677_pp0_iter14_reg <= tmp_4_reg_1677_pp0_iter13_reg;
                tmp_4_reg_1677_pp0_iter15_reg <= tmp_4_reg_1677_pp0_iter14_reg;
                tmp_4_reg_1677_pp0_iter16_reg <= tmp_4_reg_1677_pp0_iter15_reg;
                tmp_4_reg_1677_pp0_iter17_reg <= tmp_4_reg_1677_pp0_iter16_reg;
                tmp_4_reg_1677_pp0_iter18_reg <= tmp_4_reg_1677_pp0_iter17_reg;
                tmp_4_reg_1677_pp0_iter19_reg <= tmp_4_reg_1677_pp0_iter18_reg;
                    tmp_50_reg_1820(30 downto 0) <= tmp_50_fu_1448_p3(30 downto 0);
                tmp_52_reg_1825 <= tmp_52_fu_1456_p2;
                tmp_54_reg_1830 <= tmp_54_fu_1462_p2;
                tmp_59_reg_1805 <= tmp_59_fu_1204_p1;
                tmp_5_reg_1709 <= r_V_fu_827_p2(45 downto 1);
                tmp_60_reg_1810 <= tmp_60_fu_1208_p1;
                tmp_63_reg_1745 <= p_Val2_56_fu_930_p2(64 downto 64);
                tmp_63_reg_1745_pp0_iter15_reg <= tmp_63_reg_1745;
                tmp_63_reg_1745_pp0_iter16_reg <= tmp_63_reg_1745_pp0_iter15_reg;
                tmp_63_reg_1745_pp0_iter17_reg <= tmp_63_reg_1745_pp0_iter16_reg;
                tmp_63_reg_1745_pp0_iter18_reg <= tmp_63_reg_1745_pp0_iter17_reg;
                tmp_63_reg_1745_pp0_iter19_reg <= tmp_63_reg_1745_pp0_iter18_reg;
                tmp_i1_reg_1551 <= tmp_i1_fu_391_p2;
                tmp_i1_reg_1551_pp0_iter10_reg <= tmp_i1_reg_1551_pp0_iter9_reg;
                tmp_i1_reg_1551_pp0_iter3_reg <= tmp_i1_reg_1551;
                tmp_i1_reg_1551_pp0_iter4_reg <= tmp_i1_reg_1551_pp0_iter3_reg;
                tmp_i1_reg_1551_pp0_iter5_reg <= tmp_i1_reg_1551_pp0_iter4_reg;
                tmp_i1_reg_1551_pp0_iter6_reg <= tmp_i1_reg_1551_pp0_iter5_reg;
                tmp_i1_reg_1551_pp0_iter7_reg <= tmp_i1_reg_1551_pp0_iter6_reg;
                tmp_i1_reg_1551_pp0_iter8_reg <= tmp_i1_reg_1551_pp0_iter7_reg;
                tmp_i1_reg_1551_pp0_iter9_reg <= tmp_i1_reg_1551_pp0_iter8_reg;
                tmp_i_37_reg_1546 <= tmp_i_37_fu_386_p2;
                tmp_i_37_reg_1546_pp0_iter10_reg <= tmp_i_37_reg_1546_pp0_iter9_reg;
                tmp_i_37_reg_1546_pp0_iter3_reg <= tmp_i_37_reg_1546;
                tmp_i_37_reg_1546_pp0_iter4_reg <= tmp_i_37_reg_1546_pp0_iter3_reg;
                tmp_i_37_reg_1546_pp0_iter5_reg <= tmp_i_37_reg_1546_pp0_iter4_reg;
                tmp_i_37_reg_1546_pp0_iter6_reg <= tmp_i_37_reg_1546_pp0_iter5_reg;
                tmp_i_37_reg_1546_pp0_iter7_reg <= tmp_i_37_reg_1546_pp0_iter6_reg;
                tmp_i_37_reg_1546_pp0_iter8_reg <= tmp_i_37_reg_1546_pp0_iter7_reg;
                tmp_i_37_reg_1546_pp0_iter9_reg <= tmp_i_37_reg_1546_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                b_frac_tilde_inverse_reg_1536 <= pow_reduce_anonymo_7_q0;
                loc_V_1_reg_1512 <= loc_V_1_fu_358_p1;
                loc_V_1_reg_1512_pp0_iter1_reg <= loc_V_1_reg_1512;
                loc_V_reg_1505 <= p_Val2_25_fu_344_p1(30 downto 23);
                loc_V_reg_1505_pp0_iter1_reg <= loc_V_reg_1505;
                log_sum_V_reg_1541 <= pow_reduce_anonymo_6_q0;
                tmp_32_reg_1520 <= p_Val2_25_fu_344_p1(22 downto 22);
                tmp_32_reg_1520_pp0_iter1_reg <= tmp_32_reg_1520;
            end if;
        end if;
    end process;
    tmp_50_reg_1820(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    OP1_V_6_cast_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ssdm_int_V_write_ass_3_reg_1699),46));
    Z2_ind_V_fu_1141_p4 <= p_Val2_63_fu_1116_p2(17 downto 13);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to20_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to20 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to20)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to20 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv32_0 when (tmp_54_reg_1830(0) = '1') else 
        tmp_53_fu_1475_p3;
    b_exp_fu_744_p2 <= std_logic_vector(unsigned(i_op_assign_v_cast_c_fu_737_p3) + unsigned(tmp_i_cast_fu_714_p1));
    grp_fu_1488_p0 <= ap_const_lv25_B8A(13 - 1 downto 0);

    grp_fu_601_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_601_ce <= ap_const_logic_1;
        else 
            grp_fu_601_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_601_p0 <= grp_fu_601_p00(41 - 1 downto 0);
    grp_fu_601_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_48_reg_1576),47));
    grp_fu_601_p1 <= grp_fu_601_p10(6 - 1 downto 0);
    grp_fu_601_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_72_reg_1582),47));

    grp_fu_680_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_680_ce <= ap_const_logic_1;
        else 
            grp_fu_680_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_680_p0 <= grp_fu_680_p00(44 - 1 downto 0);
    grp_fu_680_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_51_reg_1613),50));
    grp_fu_680_p1 <= grp_fu_680_p10(6 - 1 downto 0);
    grp_fu_680_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_73_reg_1624),50));

    grp_fu_818_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_818_ce <= ap_const_logic_1;
        else 
            grp_fu_818_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_818_p0 <= ap_const_lv52_B17217F7D1C(45 - 1 downto 0);
    i_op_assign_v_cast_c_fu_737_p3 <= 
        ap_const_lv9_182 when (tmp_32_reg_1520_pp0_iter10_reg(0) = '1') else 
        ap_const_lv9_181;
    icmp_fu_1290_p2 <= "1" when (signed(tmp_62_fu_1280_p4) > signed(ap_const_lv3_0)) else "0";
    index0_V_fu_370_p4 <= p_Val2_25_fu_344_p1(22 downto 17);
    loc_V_1_fu_358_p1 <= p_Val2_25_fu_344_p1(23 - 1 downto 0);
    loc_V_2_fu_1327_p3 <= 
        tmp_45_fu_1307_p4 when (tmp_61_fu_1260_p3(0) = '1') else 
        tmp_46_fu_1317_p4;
    log_sum_V_1_fu_708_p2 <= std_logic_vector(unsigned(tmp35_cast_fu_705_p1) + unsigned(tmp_fu_700_p2));
    m_diff_hi_V_fu_1122_p4 <= p_Val2_63_fu_1116_p2(26 downto 18);
    not_1_demorgan_fu_732_p2 <= (tmp_i_fu_717_p2 and tmp_i1_reg_1551_pp0_iter10_reg);
    not_demorgan_fu_722_p2 <= (tmp_i_fu_717_p2 and tmp_i_37_reg_1546_pp0_iter10_reg);
    or_cond_fu_1296_p2 <= (tmp_31_reg_1740_pp0_iter19_reg or icmp_fu_1290_p2);
    out_exp_V_fu_1339_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) + unsigned(tmp_64_fu_1335_p1));
    p_Result_6_fu_1345_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1339_p2) & loc_V_2_fu_1327_p3);
    p_Result_s_fu_396_p4 <= ((ap_const_lv1_1 & loc_V_1_reg_1512_pp0_iter1_reg) & ap_const_lv1_0);
    p_Val2_10_fu_1499_p0 <= p_Val2_10_fu_1499_p00(18 - 1 downto 0);
    p_Val2_10_fu_1499_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1783),36));
    p_Val2_10_fu_1499_p1 <= p_Val2_10_fu_1499_p10(18 - 1 downto 0);
    p_Val2_10_fu_1499_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_reg_1788),36));
    p_Val2_12_fu_750_p3 <= (ap_const_lv13_1000 & p_Val2_51_reg_1613_pp0_iter10_reg);
    p_Val2_13_fu_772_p2 <= std_logic_vector(unsigned(tmp_75_i_i_cast_fu_764_p1) + unsigned(tmp_76_i_i_fu_768_p1));
    p_Val2_14_cast1_fu_936_p2 <= std_logic_vector(unsigned(tmp_35_fu_924_p2) + unsigned(tmp_30_fu_921_p1));
    p_Val2_14_cast_fu_942_p2 <= std_logic_vector(unsigned(tmp_29_fu_915_p2) + unsigned(p_Val2_55_fu_876_p1));
    p_Val2_15_fu_789_p2 <= std_logic_vector(unsigned(p_Val2_13_fu_772_p2) - unsigned(tmp_79_i_i_cast_fu_785_p1));
    p_Val2_1_fu_456_p0 <= p_Val2_1_fu_456_p00(39 - 1 downto 0);
    p_Val2_1_fu_456_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_33_fu_442_p3),43));
    p_Val2_1_fu_456_p1 <= p_Val2_1_fu_456_p10(4 - 1 downto 0);
    p_Val2_1_fu_456_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_reg_1565),43));
    p_Val2_1_fu_456_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_1_fu_456_p0) * unsigned(p_Val2_1_fu_456_p1), 43));
    p_Val2_25_fu_344_p1 <= base_r;
    p_Val2_26_cast2_fu_1248_p2 <= std_logic_vector(unsigned(tmp_42_fu_1232_p3) + unsigned(tmp_44_fu_1239_p1));
    p_Val2_26_cast_fu_1254_p2 <= std_logic_vector(unsigned(tmp_39_fu_1222_p3) + unsigned(tmp_41_fu_1229_p1));
    p_Val2_2_fu_567_p3 <= (ap_const_lv8_80 & p_Val2_48_reg_1576);
    p_Val2_33_fu_442_p3 <= (p_Val2_6_reg_1556 & ap_const_lv14_0);
    p_Val2_37_fu_494_p3 <= 
        tmp_11_fu_481_p4 when (tmp_40_fu_465_p3(0) = '1') else 
        tmp_12_fu_490_p1;
    p_Val2_3_fu_589_p2 <= std_logic_vector(unsigned(tmp_59_i_i_cast_fu_581_p1) + unsigned(tmp_60_i_i_fu_585_p1));
    p_Val2_43_fu_518_p2 <= std_logic_vector(unsigned(tmp_69_i_i_fu_514_p1) + unsigned(tmp_68_i_i_cast_fu_510_p1));
    p_Val2_44_fu_531_p2 <= std_logic_vector(unsigned(tmp_70_i_i_fu_524_p1) - unsigned(tmp_71_i_i_fu_528_p1));
    p_Val2_4_fu_901_p2 <= std_logic_vector(unsigned(tmp_9_fu_890_p1) + unsigned(tmp_18_cast_fu_886_p1));
        p_Val2_55_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_1719),65));

    p_Val2_56_fu_930_p2 <= std_logic_vector(unsigned(tmp_7_fu_907_p1) + unsigned(tmp_10_fu_911_p1));
    p_Val2_57_fu_958_p3 <= (tmp_36_fu_948_p4 & ap_const_lv1_0);
    p_Val2_61_fu_1094_p1 <= r_exp_V_3_reg_1751;
    p_Val2_61_fu_1094_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv45_B17217F7D) * signed(p_Val2_61_fu_1094_p1))), 45));
    p_Val2_63_fu_1116_p2 <= std_logic_vector(signed(tmp_20_fu_1110_p1) - signed(tmp_21_fu_1113_p1));
    p_Val2_64_fu_1132_p1 <= p_Val2_63_fu_1116_p2(18 - 1 downto 0);
    p_Val2_66_fu_1163_p2 <= std_logic_vector(unsigned(tmp_i2_fu_1156_p1) + unsigned(tmp_56_i_fu_1159_p1));
    p_Val2_68_fu_1192_p2 <= std_logic_vector(unsigned(ap_const_lv28_4) + unsigned(tmp_25_fu_1189_p1));
    p_Val2_69_fu_1242_p2 <= std_logic_vector(unsigned(tmp_26_fu_1212_p3) + unsigned(tmp_42_cast_fu_1219_p1));
    p_Val2_6_fu_426_p1 <= p_Val2_6_fu_426_p10(6 - 1 downto 0);
    p_Val2_6_fu_426_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_tilde_inverse_reg_1536),25));
    p_Val2_6_fu_426_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_2_fu_416_p3) * signed('0' &p_Val2_6_fu_426_p1))), 25));
    p_Val2_73_fu_641_p4 <= p_Val2_8_fu_621_p2(49 downto 44);
    p_Val2_8_fu_621_p2 <= std_logic_vector(unsigned(tmp_61_i_i_fu_607_p1) - unsigned(tmp_63_i_i_cast_fu_617_p1));
    p_Val2_9_fu_857_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_850_p1) - unsigned(tmp_15_cast_fu_854_p1));
        p_Val2_i_cast_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1659_pp0_iter13_reg),65));

    p_s_fu_1075_p3 <= 
        tmp_38_fu_1044_p4 when (tmp_18_fu_1063_p2(0) = '1') else 
        ret_V_2_fu_1069_p2;
    pow_reduce_anonymo_10_address0 <= tmp_65_i_i_fu_637_p1(6 - 1 downto 0);

    pow_reduce_anonymo_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_11_address0 <= tmp_22_fu_1136_p1(9 - 1 downto 0);

    pow_reduce_anonymo_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_6_address0 <= tmp_s_fu_380_p1(6 - 1 downto 0);

    pow_reduce_anonymo_6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_7_address0 <= tmp_s_fu_380_p1(6 - 1 downto 0);

    pow_reduce_anonymo_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_8_address0 <= tmp_81_i_i_fu_661_p1(6 - 1 downto 0);

    pow_reduce_anonymo_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_9_address0 <= tmp_73_i_i_fu_666_p1(4 - 1 downto 0);

    pow_reduce_anonymo_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_address0 <= tmp_i1_38_fu_1151_p1(5 - 1 downto 0);

    pow_reduce_anonymo_ce0_assign_proc : process(ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_827_p0 <= OP1_V_6_cast_fu_824_p1(23 - 1 downto 0);
    r_V_fu_827_p1 <= OP1_V_6_cast_fu_824_p1(23 - 1 downto 0);
    r_V_fu_827_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_827_p0) * unsigned(r_V_fu_827_p1), 46));
    r_exp_V_2_fu_1273_p3 <= 
        r_exp_V_3_reg_1751_pp0_iter19_reg when (tmp_61_fu_1260_p3(0) = '1') else 
        r_exp_V_fu_1268_p2;
    r_exp_V_3_fu_1083_p3 <= 
        p_s_fu_1075_p3 when (tmp_56_fu_1053_p3(0) = '1') else 
        tmp_38_fu_1044_p4;
    r_exp_V_fu_1268_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(r_exp_V_3_reg_1751_pp0_iter19_reg));
    ret_V_2_fu_1069_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_38_fu_1044_p4));
    sel_tmp10_fu_1425_p2 <= (tmp_33_fu_1301_p2 and sel_tmp9_fu_1419_p2);
    sel_tmp13_demorgan_fu_1380_p2 <= (tmp_4_reg_1677_pp0_iter19_reg or sel_tmp6_demorgan_fu_1365_p2);
    sel_tmp1_fu_1355_p2 <= (not_demorgan_reg_1670_pp0_iter19_reg xor ap_const_lv1_1);
    sel_tmp2_fu_1360_p2 <= (sel_tmp1_fu_1355_p2 and not_1_demorgan_reg_1683_pp0_iter19_reg);
    sel_tmp32_demorgan_fu_1413_p2 <= (sel_tmp13_demorgan_fu_1380_p2 or or_cond_fu_1296_p2);
    sel_tmp3_fu_1391_p2 <= (sel_tmp_fu_1385_p2 and or_cond_fu_1296_p2);
    sel_tmp4_fu_1397_p2 <= (tmp_63_reg_1745_pp0_iter19_reg xor ap_const_lv1_1);
    sel_tmp5_fu_1402_p2 <= (sel_tmp4_fu_1397_p2 and sel_tmp3_fu_1391_p2);
    sel_tmp6_demorgan_fu_1365_p2 <= (not_demorgan_reg_1670_pp0_iter19_reg or not_1_demorgan_reg_1683_pp0_iter19_reg);
    sel_tmp6_fu_1369_p2 <= (sel_tmp6_demorgan_fu_1365_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_1375_p2 <= (tmp_4_reg_1677_pp0_iter19_reg and sel_tmp6_fu_1369_p2);
    sel_tmp8_fu_1408_p2 <= (tmp_63_reg_1745_pp0_iter19_reg and sel_tmp3_fu_1391_p2);
    sel_tmp9_fu_1419_p2 <= (sel_tmp32_demorgan_fu_1413_p2 xor ap_const_lv1_1);
    sel_tmp_fu_1385_p2 <= (sel_tmp13_demorgan_fu_1380_p2 xor ap_const_lv1_1);
    sf_fu_472_p4 <= ((ap_const_lv5_10 & p_Val2_6_reg_1556_pp0_iter3_reg) & ap_const_lv13_0);
    ssdm_int_V_write_ass_1_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_10_q0),50));
    ssdm_int_V_write_ass_2_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_8_q0),50));
    ssdm_int_V_write_ass_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_9_q0),56));
    tmp35_cast_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_reg_1654),56));
    tmp8_fu_690_p2 <= std_logic_vector(unsigned(ssdm_int_V_write_ass_1_fu_670_p1) + unsigned(ssdm_int_V_write_ass_2_fu_686_p1));
    tmp_10_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_55_fu_876_p1),67));
    tmp_11_fu_481_p4 <= ((ap_const_lv5_10 & p_Val2_6_reg_1556_pp0_iter3_reg) & ap_const_lv14_0);
    tmp_12_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_472_p4),44));
    tmp_13_fu_976_p3 <= (tmp_37_fu_966_p4 & ap_const_lv1_0);
    tmp_14_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_843_p3),64));
    tmp_15_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1709),64));
    tmp_17_fu_1033_p3 <= (tmp_43_reg_1735 & ap_const_lv15_4000);
        tmp_18_cast_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_879_p3),66));

    tmp_18_fu_1063_p2 <= "1" when (tmp_57_fu_1060_p1 = ap_const_lv15_0) else "0";
    tmp_1_fu_405_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1512_pp0_iter1_reg);
        tmp_20_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_58_reg_1725_pp0_iter16_reg),37));

        tmp_21_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_62_reg_1758),37));

    tmp_22_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_fu_1122_p4),64));
    tmp_25_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_67_reg_1778),28));
    tmp_26_fu_1212_p3 <= (p_Val2_68_reg_1793 & ap_const_lv17_0);
        tmp_27_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1659_pp0_iter13_reg),64));

        tmp_28_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_879_p3),65));

    tmp_29_fu_915_p2 <= std_logic_vector(signed(tmp_28_fu_897_p1) + signed(p_Val2_i_cast_fu_873_p1));
    tmp_2_fu_416_p3 <= 
        tmp_3_fu_412_p1 when (tmp_32_reg_1520_pp0_iter1_reg(0) = '1') else 
        p_Result_s_fu_396_p4;
        tmp_30_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_1719),64));

    tmp_31_fu_1016_p2 <= "0" when (tmp_33_cast_fu_1012_p1 = p_Val2_57_fu_958_p3) else "1";
        tmp_33_cast_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_976_p3),44));

    tmp_33_fu_1301_p2 <= "1" when (signed(r_exp_V_2_fu_1273_p3) < signed(ap_const_lv10_382)) else "0";
    tmp_34_fu_462_p1 <= p_Val2_6_reg_1556_pp0_iter3_reg(21 - 1 downto 0);
    tmp_35_fu_924_p2 <= std_logic_vector(signed(tmp_8_fu_879_p3) + signed(tmp_27_fu_894_p1));
    tmp_36_fu_948_p4 <= p_Val2_14_cast_fu_942_p2(64 downto 22);
    tmp_37_fu_966_p4 <= p_Val2_14_cast_fu_942_p2(63 downto 22);
    tmp_38_fu_1044_p4 <= grp_fu_1488_p3(24 downto 15);
    tmp_39_fu_1222_p3 <= (tmp_59_reg_1805 & ap_const_lv17_0);
    tmp_3_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_405_p3),25));
    tmp_40_fu_465_p3 <= p_Val2_6_reg_1556_pp0_iter3_reg(24 downto 24);
    tmp_41_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_10_reg_1798),44));
    tmp_42_cast_fu_1219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_10_reg_1798),45));
    tmp_42_fu_1232_p3 <= (tmp_60_reg_1810 & ap_const_lv17_0);
    tmp_44_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_10_reg_1798),43));
    tmp_45_fu_1307_p4 <= p_Val2_26_cast_fu_1254_p2(42 downto 20);
    tmp_46_fu_1317_p4 <= p_Val2_26_cast2_fu_1248_p2(41 downto 19);
    tmp_47_fu_1431_p1 <= p_Result_6_fu_1345_p4;
    tmp_48_fu_1435_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp2_fu_1360_p2(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    tmp_49_fu_1443_p2 <= (sel_tmp2_fu_1360_p2 or not_demorgan_reg_1670_pp0_iter19_reg);
    tmp_4_fu_727_p2 <= "1" when (loc_V_reg_1505_pp0_iter10_reg = ap_const_lv8_0) else "0";
    tmp_50_fu_1448_p3 <= 
        tmp_48_fu_1435_p3 when (tmp_49_fu_1443_p2(0) = '1') else 
        tmp_47_fu_1431_p1;
    tmp_51_fu_1468_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp5_reg_1815(0) = '1') else 
        ap_const_lv32_0;
    tmp_52_fu_1456_p2 <= (sel_tmp7_fu_1375_p2 or sel_tmp5_fu_1402_p2);
    tmp_53_fu_1475_p3 <= 
        tmp_51_fu_1468_p3 when (tmp_52_reg_1825(0) = '1') else 
        tmp_50_reg_1820;
    tmp_54_fu_1462_p2 <= (sel_tmp8_fu_1408_p2 or sel_tmp10_fu_1425_p2);
    tmp_56_fu_1053_p3 <= grp_fu_1488_p3(24 downto 24);
    tmp_56_i_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_q0),19));
    tmp_57_fu_1060_p1 <= grp_fu_1488_p3(15 - 1 downto 0);
    tmp_59_fu_1204_p1 <= p_Val2_68_fu_1192_p2(27 - 1 downto 0);
    tmp_59_i_i_cast_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_i_i_fu_574_p3),50));
    tmp_59_i_i_fu_574_p3 <= (tmp_14_reg_1588 & ap_const_lv14_0);
    tmp_60_fu_1208_p1 <= p_Val2_68_fu_1192_p2(26 - 1 downto 0);
    tmp_60_i_i_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_2_fu_567_p3),50));
    tmp_61_fu_1260_p3 <= p_Val2_69_fu_1242_p2(43 downto 43);
    tmp_61_i_i_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_3_reg_1593_pp0_iter6_reg),51));
    tmp_62_fu_1280_p4 <= r_exp_V_2_fu_1273_p3(9 downto 7);
    tmp_63_i_i_cast_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_i_i_fu_610_p3),51));
    tmp_63_i_i_fu_610_p3 <= (p_Val2_7_reg_1608 & ap_const_lv1_0);
    tmp_64_fu_1335_p1 <= r_exp_V_2_fu_1273_p3(8 - 1 downto 0);
    tmp_65_i_i_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_72_reg_1582_pp0_iter6_reg),64));
    tmp_68_i_i_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_i_i_fu_502_p3),45));
    tmp_68_i_i_fu_502_p3 <= (tmp_34_fu_462_p1 & ap_const_lv22_0);
    tmp_69_i_i_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_37_fu_494_p3),45));
    tmp_6_fu_843_p3 <= (tmp_23_reg_1694_pp0_iter12_reg & ap_const_lv24_0);
    tmp_70_i_i_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_43_fu_518_p2),46));
    tmp_71_i_i_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_1_reg_1571),46));
    tmp_73_i_i_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_reg_1565_pp0_iter7_reg),64));
    tmp_75_i_i_cast_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_i_i_fu_757_p3),63));
    tmp_75_i_i_fu_757_p3 <= (tmp_19_reg_1629_pp0_iter10_reg & ap_const_lv24_0);
    tmp_76_i_i_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_12_fu_750_p3),63));
    tmp_79_i_i_cast_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_i_i_fu_778_p3),63));
    tmp_79_i_i_fu_778_p3 <= (p_Val2_14_reg_1665 & ap_const_lv6_0);
    tmp_7_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_4_fu_901_p2),67));
    tmp_81_i_i_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_73_fu_641_p4),64));
    tmp_8_fu_879_p3 <= (p_Val2_5_reg_1714 & ap_const_lv12_0);
    tmp_9_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_i_cast_fu_873_p1),66));
    tmp_fu_700_p2 <= std_logic_vector(unsigned(log_sum_V_reg_1541_pp0_iter8_reg) + unsigned(ssdm_int_V_write_ass_fu_696_p1));
    tmp_i1_38_fu_1151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_V_fu_1141_p4),64));
    tmp_i1_fu_391_p2 <= "1" when (loc_V_1_reg_1512_pp0_iter1_reg = ap_const_lv23_0) else "0";
    tmp_i2_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_64_reg_1763),19));
    tmp_i_37_fu_386_p2 <= "0" when (loc_V_1_reg_1512_pp0_iter1_reg = ap_const_lv23_0) else "1";
    tmp_i_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_reg_1505_pp0_iter10_reg),9));
    tmp_i_fu_717_p2 <= "1" when (loc_V_reg_1505_pp0_iter10_reg = ap_const_lv8_FF) else "0";
    tmp_s_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_V_fu_370_p4),64));
end behav;
