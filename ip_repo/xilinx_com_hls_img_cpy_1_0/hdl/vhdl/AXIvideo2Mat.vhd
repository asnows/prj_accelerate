-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIvideo2Mat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_rows_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    img_rows_V_empty_n : IN STD_LOGIC;
    img_rows_V_read : OUT STD_LOGIC;
    img_cols_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    img_cols_V_empty_n : IN STD_LOGIC;
    img_cols_V_read : OUT STD_LOGIC;
    img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_V_full_n : IN STD_LOGIC;
    img_data_stream_V_write : OUT STD_LOGIC;
    img_rows_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    img_rows_V_out_full_n : IN STD_LOGIC;
    img_rows_V_out_write : OUT STD_LOGIC;
    img_cols_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    img_cols_V_out_full_n : IN STD_LOGIC;
    img_cols_V_out_write : OUT STD_LOGIC );
end;


architecture behav of AXIvideo2Mat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal video_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_i_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_eol_2_i_phi_fu_331_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_rows_V_blk_n : STD_LOGIC;
    signal img_cols_V_blk_n : STD_LOGIC;
    signal img_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond_i_reg_444 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_rows_V_out_blk_n : STD_LOGIC;
    signal img_cols_V_out_blk_n : STD_LOGIC;
    signal eol_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_reg_245 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_V_2_reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal eol_i_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal rows_V_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_V_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_V_fu_352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_V_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_415 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_reg_423 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op65_read_state5 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_V_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal axi_last_V_3_i_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_i_reg_203 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V_3_i_reg_316 : STD_LOGIC_VECTOR (63 downto 0);
    signal axi_data_V1_i_reg_213 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_V_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_eol_phi_fu_237_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_eol_i_phi_fu_271_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_296_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter0_p_Val2_s_reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal eol_2_i_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sof_1_i_fu_146 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_V_fu_348_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal cols_V_fu_352_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_user_V_fu_356_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_261 : BOOLEAN;
    signal ap_condition_184 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_i_fu_365_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_data_V1_i_reg_213 <= tmp_data_V_reg_415;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_data_V1_i_reg_213 <= axi_data_V_3_i_reg_316;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                axi_data_V_1_i_reg_245 <= p_Val2_s_reg_292;
            elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                axi_data_V_1_i_reg_245 <= axi_data_V1_i_reg_213;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_data_V_3_i_reg_316 <= axi_data_V_1_i_reg_245;
            elsif ((not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_data_V_3_i_reg_316 <= video_in_TDATA;
            end if; 
        end if;
    end process;

    axi_last_V1_i_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_last_V1_i_reg_203 <= tmp_last_V_reg_423;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_last_V1_i_reg_203 <= axi_last_V_3_i_reg_304;
            end if; 
        end if;
    end process;

    axi_last_V_2_i_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_184)) then
                if (((brmerge_i_fu_390_p2 = ap_const_lv1_1) and (exitcond_i_fu_376_p2 = ap_const_lv1_0))) then 
                    axi_last_V_2_i_reg_279 <= ap_phi_mux_eol_phi_fu_237_p4;
                elsif (((brmerge_i_fu_390_p2 = ap_const_lv1_0) and (exitcond_i_fu_376_p2 = ap_const_lv1_0))) then 
                    axi_last_V_2_i_reg_279 <= video_in_TLAST;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    axi_last_V_2_i_reg_279 <= ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_279;
                end if;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_last_V_3_i_reg_304 <= eol_reg_234;
            elsif ((not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_last_V_3_i_reg_304 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    eol_2_i_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                eol_2_i_reg_328 <= eol_i_reg_267;
            elsif ((not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                eol_2_i_reg_328 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    eol_i_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_i_reg_267 <= axi_last_V_2_i_reg_279;
            elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_i_reg_267 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_reg_234 <= axi_last_V_2_i_reg_279;
            elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_reg_234 <= axi_last_V1_i_reg_203;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_184)) then
                if (((brmerge_i_fu_390_p2 = ap_const_lv1_1) and (exitcond_i_fu_376_p2 = ap_const_lv1_0))) then 
                    p_Val2_s_reg_292 <= ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4;
                elsif (((brmerge_i_fu_390_p2 = ap_const_lv1_0) and (exitcond_i_fu_376_p2 = ap_const_lv1_0))) then 
                    p_Val2_s_reg_292 <= video_in_TDATA;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_Val2_s_reg_292 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_292;
                end if;
            end if; 
        end if;
    end process;

    sof_1_i_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_376_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                sof_1_i_fu_146 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                sof_1_i_fu_146 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    t_V_2_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_376_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_2_reg_256 <= j_V_fu_381_p2;
            elsif (((exitcond2_i_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                t_V_2_reg_256 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_reg_223 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_223 <= i_V_reg_439;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_V_reg_410 <= cols_V_fu_352_p1;
                rows_V_reg_405 <= rows_V_fu_348_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_i_reg_444 <= exitcond_i_fu_376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_439 <= i_V_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((video_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_data_V_reg_415 <= video_in_TDATA;
                tmp_last_V_reg_423 <= video_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_376_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_reg_457 <= tmp_fu_396_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, video_in_TVALID, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n, ap_CS_fsm_state2, ap_enable_reg_pp1_iter0, exitcond_i_fu_376_p2, ap_CS_fsm_state8, ap_phi_mux_eol_2_i_phi_fu_331_p4, exitcond2_i_fu_365_p2, ap_CS_fsm_state4, ap_block_pp1_stage0_subdone, eol_2_i_reg_328, tmp_user_V_fu_356_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_user_V_fu_356_p1 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((video_in_TVALID = ap_const_logic_1) and (tmp_user_V_fu_356_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_i_fu_365_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((exitcond_i_fu_376_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((exitcond_i_fu_376_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_eol_2_i_phi_fu_331_p4 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(video_in_TVALID, img_data_stream_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, ap_predicate_op65_read_state5)
    begin
                ap_block_pp1_stage0_01001 <= (((video_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op65_read_state5 = ap_const_boolean_1)) or ((exitcond_i_reg_444 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(video_in_TVALID, img_data_stream_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, ap_predicate_op65_read_state5)
    begin
                ap_block_pp1_stage0_11001 <= (((video_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op65_read_state5 = ap_const_boolean_1)) or ((exitcond_i_reg_444 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(video_in_TVALID, img_data_stream_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, ap_predicate_op65_read_state5)
    begin
                ap_block_pp1_stage0_subdone <= (((video_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op65_read_state5 = ap_const_boolean_1)) or ((exitcond_i_reg_444 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n)
    begin
                ap_block_state1 <= ((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state5_pp1_stage0_iter0_assign_proc : process(video_in_TVALID, ap_predicate_op65_read_state5)
    begin
                ap_block_state5_pp1_stage0_iter0 <= ((video_in_TVALID = ap_const_logic_0) and (ap_predicate_op65_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp1_stage0_iter1_assign_proc : process(img_data_stream_V_full_n, exitcond_i_reg_444)
    begin
                ap_block_state6_pp1_stage0_iter1 <= ((exitcond_i_reg_444 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(video_in_TVALID, eol_2_i_reg_328)
    begin
                ap_block_state8 <= ((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0));
    end process;


    ap_condition_184_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
                ap_condition_184 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_261_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, exitcond_i_fu_376_p2)
    begin
                ap_condition_261 <= ((exitcond_i_fu_376_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(exitcond_i_fu_376_p2)
    begin
        if ((exitcond_i_fu_376_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond2_i_fu_365_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_i_fu_365_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, axi_data_V_1_i_reg_245, p_Val2_s_reg_292)
    begin
        if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4 <= p_Val2_s_reg_292;
        else 
            ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4 <= axi_data_V_1_i_reg_245;
        end if; 
    end process;

    ap_phi_mux_eol_2_i_phi_fu_331_p4 <= eol_2_i_reg_328;

    ap_phi_mux_eol_i_phi_fu_271_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, eol_i_reg_267, axi_last_V_2_i_reg_279)
    begin
        if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_eol_i_phi_fu_271_p4 <= axi_last_V_2_i_reg_279;
        else 
            ap_phi_mux_eol_i_phi_fu_271_p4 <= eol_i_reg_267;
        end if; 
    end process;


    ap_phi_mux_eol_phi_fu_237_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, eol_reg_234, axi_last_V_2_i_reg_279)
    begin
        if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_eol_phi_fu_237_p4 <= axi_last_V_2_i_reg_279;
        else 
            ap_phi_mux_eol_phi_fu_237_p4 <= eol_reg_234;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_296_p4_assign_proc : process(video_in_TDATA, brmerge_i_fu_390_p2, ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4, ap_phi_reg_pp1_iter0_p_Val2_s_reg_292, ap_condition_261)
    begin
        if ((ap_const_boolean_1 = ap_condition_261)) then
            if ((brmerge_i_fu_390_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_Val2_s_phi_fu_296_p4 <= ap_phi_mux_axi_data_V_1_i_phi_fu_248_p4;
            elsif ((brmerge_i_fu_390_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_p_Val2_s_phi_fu_296_p4 <= video_in_TDATA;
            else 
                ap_phi_mux_p_Val2_s_phi_fu_296_p4 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_292;
            end if;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_296_p4 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_292;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_279 <= "X";
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_292 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op65_read_state5_assign_proc : process(exitcond_i_fu_376_p2, brmerge_i_fu_390_p2)
    begin
                ap_predicate_op65_read_state5 <= ((brmerge_i_fu_390_p2 = ap_const_lv1_0) and (exitcond_i_fu_376_p2 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_i_fu_390_p2 <= (sof_1_i_fu_146 or ap_phi_mux_eol_i_phi_fu_271_p4);
    cols_V_fu_352_p0 <= img_cols_V_dout;
        cols_V_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_V_fu_352_p0),32));

    exitcond2_i_fu_365_p2 <= "1" when (t_V_reg_223 = rows_V_reg_405) else "0";
    exitcond_i_fu_376_p2 <= "1" when (t_V_2_reg_256 = cols_V_reg_410) else "0";
    i_V_fu_370_p2 <= std_logic_vector(unsigned(t_V_reg_223) + unsigned(ap_const_lv32_1));

    img_cols_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_cols_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_V_blk_n <= img_cols_V_empty_n;
        else 
            img_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_cols_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_cols_V_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_V_out_blk_n <= img_cols_V_out_full_n;
        else 
            img_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_cols_V_out_din <= img_cols_V_dout;

    img_cols_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n)
    begin
        if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_V_out_write <= ap_const_logic_1;
        else 
            img_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_cols_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n)
    begin
        if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_V_read <= ap_const_logic_1;
        else 
            img_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_V_blk_n_assign_proc : process(img_data_stream_V_full_n, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444)
    begin
        if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            img_data_stream_V_blk_n <= img_data_stream_V_full_n;
        else 
            img_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_data_stream_V_din <= tmp_reg_457;

    img_data_stream_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_reg_444, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_i_reg_444 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img_data_stream_V_write <= ap_const_logic_1;
        else 
            img_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_rows_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_V_blk_n <= img_rows_V_empty_n;
        else 
            img_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_rows_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_V_out_blk_n <= img_rows_V_out_full_n;
        else 
            img_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_rows_V_out_din <= img_rows_V_dout;

    img_rows_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n)
    begin
        if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_V_out_write <= ap_const_logic_1;
        else 
            img_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_rows_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_rows_V_empty_n, img_cols_V_empty_n, img_rows_V_out_full_n, img_cols_V_out_full_n)
    begin
        if ((not(((img_cols_V_out_full_n = ap_const_logic_0) or (img_rows_V_out_full_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (img_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_V_read <= ap_const_logic_1;
        else 
            img_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(exitcond2_i_fu_365_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_i_fu_365_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_381_p2 <= std_logic_vector(unsigned(t_V_2_reg_256) + unsigned(ap_const_lv32_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rows_V_fu_348_p0 <= img_rows_V_dout;
        rows_V_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rows_V_fu_348_p0),32));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_396_p1 <= ap_phi_mux_p_Val2_s_phi_fu_296_p4(8 - 1 downto 0);
    tmp_user_V_fu_356_p1 <= video_in_TUSER;

    video_in_TDATA_blk_n_assign_proc : process(video_in_TVALID, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, exitcond_i_fu_376_p2, brmerge_i_fu_390_p2, ap_CS_fsm_state8, eol_2_i_reg_328)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((brmerge_i_fu_390_p2 = ap_const_lv1_0) and (exitcond_i_fu_376_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            video_in_TDATA_blk_n <= video_in_TVALID;
        else 
            video_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    video_in_TREADY_assign_proc : process(video_in_TVALID, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state8, ap_predicate_op65_read_state5, ap_block_pp1_stage0_11001, eol_2_i_reg_328)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op65_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((video_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((eol_2_i_reg_328 = ap_const_lv1_0) and (video_in_TVALID = ap_const_logic_0))) and (eol_2_i_reg_328 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            video_in_TREADY <= ap_const_logic_1;
        else 
            video_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
